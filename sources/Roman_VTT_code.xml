<?xml version="1.0" encoding="UTF-8"?>
<ttFont ttVttLibVersion="1.0">
  <fpgm>
    <assembly>/* Font-program */
/* ACT generated Thu Jan  9 18:13:47 2020 */

FDEF[], 9

/* Set fv to X
       pv perpendicular to italic angle

   CALL[], 9 */

#BEGIN
#PUSHOFF
SVTCA[X]
#PUSH, 11, 10
RS[]
SWAP[]
RS[]
NEG[]
SPVFS[]
#PUSHON
#END
ENDF[]

FDEF[], 10

/* Set fv to italic angle
       pv to Y

   CALL[], 10 */

#BEGIN
#PUSHOFF
SVTCA[Y]
#PUSH, 10, 11
RS[]
SWAP[]
RS[]
SFVFS[]
#PUSHON
#END
ENDF[]

FDEF[], 16

/* Set fv to X
       pv perpendicular to adjusted italic angle

   CALL[], 16 */

#BEGIN
#PUSHOFF
SVTCA[X]
#PUSH, 6
RS[]
#PUSH, 7
RS[]
NEG[]
SPVFS[]
#PUSHON
#END
ENDF[]

FDEF[], 31

/* fn 31 equalizes two cvts below a given ppem size

   CALL[], &lt;child cvt&gt;, &lt;parent cvt&gt;, &lt;ppem size&gt;, 31 */

#BEGIN
#PUSHOFF

/* STACK: &lt;child cvt&gt;, &lt;parent cvt&gt;, &lt;ppem size&gt; */

#PUSH, 79 /* #samples/pixel */
CALL[]
DUP[]
#PUSH, 64
LTEQ[]
IF[] /* #samples/pixel &lt;= 1 */

    /* STACK: &lt;child cvt&gt;, &lt;parent cvt&gt;, &lt;ppem size&gt;, &lt;#samples/pixel&gt; */

    POP[] /* #samples/pixel not involved */
    MPPEM[]

    /* STACK: &lt;child cvt&gt;, &lt;parent cvt&gt;, &lt;ppem size&gt;, &lt;act ppem size&gt; */

    GT[]
    IF[]
        RCVT[]
        WCVTP[]
    ELSE[]
        POP[]
        POP[]
    EIF[]

ELSE[] /* #samples/pixel &gt; 1 */

    /* STACK: &lt;child cvt&gt;, &lt;parent cvt&gt;, &lt;ppem size&gt;, &lt;#samples/pixel&gt; */

    SWAP[]
    POP[] /* ppem Size not involved */
    #PUSH, 64

    /* STACK: &lt;child cvt&gt;, &lt;parent cvt&gt;, &lt;#samples/pixel&gt;, &lt;1&gt; */

    #PUSH, 4 /* child cvt */
    CINDEX[]
    RCVT[]
    #PUSH, 4 /* parent cvt */
    CINDEX[]
    RCVT[]
    SUB[]
    ABS[]

    /* STACK: &lt;child cvt&gt;, &lt;parent cvt&gt;, &lt;#samples/pixel&gt;, &lt;1&gt;, &lt;|[child cvt] - [parent cvt]|&gt; */

    ROLL[]
    MUL[]
    GT[]
    IF[] /* 1 &gt; #samples/pixel * delta cvt */
        RCVT[]
        WCVTP[]
    ELSE[]
        POP[]
        POP[]
    EIF[]

EIF[]
#PUSHON
#END
ENDF[]

FDEF[], 40

/* Set fv to adjusted italic angle
       pv to Y

   CALL[], 40 */

#BEGIN
#PUSHOFF
SVTCA[Y]
#PUSH, 7
RS[]
#PUSH, 6
RS[]
SFVFS[]
#PUSHON
#END
ENDF[]

FDEF[], 70

/* fn changes &lt;cvt&gt; by &lt;amount&gt; (in ±1/64 pixel) at
   ppem sizes &lt;low ppem&gt; to &lt;high ppem&gt; (inclusive)

   CALL[], &lt;amount&gt;, &lt;cvt&gt;, &lt;low ppem&gt;, &lt;high ppem&gt;, 70 */

#BEGIN
#PUSHOFF
MPPEM[]
GTEQ[]
SWAP[]
MPPEM[]
LTEQ[]
AND[]
IF[]
    DUP[]
    RCVT[]
    ROLL[]
    ADD[]
    WCVTP[]
ELSE[]
    POP[]
    POP[]
EIF[]
#PUSHON
#END
ENDF[]

FDEF[], 71

/* fn changes &lt;cvt&gt; by &lt;amount&gt; (in ±1/64 pixel) at
   ppem size &lt;ppem&gt;

   CALL[], &lt;amount&gt;, &lt;cvt&gt;, &lt;ppem&gt;, 71 */

#BEGIN
#PUSHOFF
MPPEM[]
EQ[]
IF[]
    DUP[]
    RCVT[]
    ROLL[]
    ADD[]
    WCVTP[]
ELSE[]
    POP[]
    POP[]
EIF[]
#PUSHON
#END
ENDF[]

FDEF[], 72

/* fn moves &lt;point&gt; by &lt;amount&gt; (in ±1/64 pixel) at
   ppem sizes &lt;low ppem&gt; to &lt;high ppem&gt; (inclusive)

   CALL[], &lt;point&gt;, &lt;amount&gt;, &lt;low ppem&gt;, &lt;high ppem&gt;, 72 */

#BEGIN
#PUSHOFF
MPPEM[]
GTEQ[]
SWAP[]
MPPEM[]
LTEQ[]
AND[]
IF[]
    SHPIX[]
ELSE[]
    POP[]
    POP[]
EIF[]
#PUSHON
#END
ENDF[]

FDEF[], 73

/* fn moves &lt;point&gt; by &lt;amount&gt; (in ±1/64 pixel) at
   ppem size &lt;ppem&gt;

   CALL[], &lt;point&gt;, &lt;amount&gt;, &lt;ppem&gt;, 73 */

#BEGIN
#PUSHOFF
MPPEM[]
EQ[]
IF[]
    SHPIX[]
ELSE[]
    POP[]
    POP[]
EIF[]
#PUSHON
#END
ENDF[]

FDEF[], 74

/* if &lt;flag&gt; = anti-aliasing in s[2] (set by fn 84)
   fn changes &lt;cvt&gt; by &lt;amount&gt; (in ±1/64 pixel) at
   ppem sizes &lt;low ppem&gt; to &lt;high ppem&gt; (inclusive)

   CALL[], &lt;amount&gt;, &lt;cvt&gt;, &lt;low ppem&gt;, &lt;high ppem&gt;, &lt;flag&gt;, 74 */

#BEGIN
#PUSHOFF
#PUSH, 2
RS[]
EQ[]
IF[]           /* if &lt;flag&gt; = s[2] then fwd to fn 70 */
    #PUSH, 70
    CALL[]
ELSE[]         /* else cleanup stack and bail out */
    POP[]
    POP[]
    POP[]
    POP[]
EIF[]
#PUSHON
#END
ENDF[]

FDEF[], 75

/* if &lt;flag&gt; = anti-aliasing in s[2] (set by fn 84)
   fn changes &lt;cvt&gt; by &lt;amount&gt; (in ±1/64 pixel) at
   ppem size &lt;ppem&gt;

   CALL[], &lt;amount&gt;, &lt;cvt&gt;, &lt;ppem&gt;, &lt;flag&gt;, 75 */

#BEGIN
#PUSHOFF
#PUSH, 2
RS[]
EQ[]
IF[]           /* if &lt;flag&gt; = s[2] then fwd to fn 71 */
    #PUSH, 71
    CALL[]
ELSE[]         /* else cleanup stack and bail out */
    POP[]
    POP[]
    POP[]
EIF[]
#PUSHON
#END
ENDF[]

FDEF[], 76

/* if &lt;flag&gt; = anti-aliasing in s[2] (set by fn 84)
   fn moves &lt;point&gt; by &lt;amount&gt; (in ±1/64 pixel) at
   ppem sizes &lt;low ppem&gt; to &lt;high ppem&gt; (inclusive)

   CALL[], &lt;point&gt;, &lt;amount&gt;, &lt;low ppem&gt;, &lt;high ppem&gt;, &lt;flag&gt;, 76 */

#BEGIN
#PUSHOFF
#PUSH, 2
RS[]
EQ[]
IF[]           /* if &lt;flag&gt; = s[2] then fwd to fn 72 */
    #PUSH, 72
    CALL[]
ELSE[]         /* else cleanup stack and bail out */
    POP[]
    POP[]
    POP[]
    POP[]
EIF[]
#PUSHON
#END
ENDF[]

FDEF[], 77

/* if &lt;flag&gt; = anti-aliasing in s[2] (set by fn 84)
   fn moves &lt;point&gt; by &lt;amount&gt; (in ±1/64 pixel) at
   ppem size &lt;ppem&gt;

   CALL[], &lt;point&gt;, &lt;amount&gt;, &lt;ppem&gt;, &lt;flag&gt;, 77 */

#BEGIN
#PUSHOFF
#PUSH, 2
RS[]
EQ[]
IF[]           /* if &lt;flag&gt; = s[2] then fwd to fn 73 */
    #PUSH, 73
    CALL[]
ELSE[]         /* else cleanup stack and bail out */
    POP[]
    POP[]
    POP[]
EIF[]
#PUSHON
#END
ENDF[]

FDEF[], 78

/* apply minimum distance and round &lt;dist&gt; depending on s[2], &lt;code&gt;, and pv
   code = 0: position
   code = 1: distance
   code = 2: delta distance (for fractional inheritance)

   CALL[], &lt;dist&gt;, &lt;code&gt;, 78

   returns with rounded distance on stack */

#BEGIN
#PUSHOFF

/* STACK: &lt;dist&gt;, &lt;code&gt; */

SWAP[]
DUP[]
#PUSH, 0
LT[]
ROLL[]
ROLL[]
ABS[]

/* STACK: &lt;negDist&gt;, &lt;code&gt;, &lt;|dist|&gt; */

#PUSH, 0, 3 /* code */
CINDEX[]
EQ[]
IF[] /* position */

    /* STACK: &lt;negDist&gt;, &lt;code&gt;, &lt;|dist|&gt; */

    #PUSH, 64

    /* STACK: &lt;negDist&gt;, &lt;code&gt;, &lt;|dist|&gt;, &lt;#samples/pixel&gt; */

ELSE[]

    /* STACK: &lt;negDist&gt;, &lt;code&gt;, &lt;|dist|&gt; */

    #PUSH, 1, 3 /* code */
    CINDEX[]
    EQ[]
    IF[] /* distance */
        #PUSH, 5 /* minimum distance */
        RS[]
        MAX[]
    EIF[]

    #PUSH, 79 /* #samples/pixel */
    CALL[]

    /* STACK: &lt;negDist&gt;, &lt;code&gt;, &lt;|dist|&gt;, &lt;#samples/pixel&gt; */

EIF[]

SWAP[]
#PUSH, 98 /* round to virtual grid */
CALL[]

/* STACK: &lt;negDist&gt;, &lt;code&gt;, &lt;[|dist|]&gt; */

SWAP[]
POP[]

/* STACK: &lt;negDist&gt;, &lt;[|dist|]&gt; */

SWAP[]
IF[]
    NEG[]
EIF[]

/* STACK: &lt;[dist]&gt; */

#PUSHON
#END
ENDF[]

FDEF[], 79

/* depending on rendering environment and pv determine #samples/pixel for rounding etc.

   notice that for PVs other than X or Y, this method will default to X, reflecting the
   bias inherent in the asymmetrical nature of ClearType

   CALL[], 79

   returns the #samples/pixel in 26.6 */

#BEGIN
#PUSHOFF

#PUSH, 8, 0
GPV[]
POP[]
EQ[]
ADD[]
RS[]

#PUSHON
#END
ENDF[]

FDEF[], 80

/* depending on rendering environment and pv determine actual stroke optimization method

   CALL[], 80

   returns with method on stack (see fn 112 for definition of method) */

#BEGIN
#PUSHOFF

#PUSH, 12, 0
GPV[]
POP[]
EQ[]
ADD[]
RS[]

#PUSHON
#END
ENDF[]

FDEF[], 81

   /* adjust advance width to compensate for rasterizer's rounding errors 

   CALL[], &lt;rsb&gt;, 81 */

#BEGIN
#PUSHOFF

/* STACK: &lt;rsb&gt; */

SVTCA[X]
DUP[]
GC[O]

/* STACK: &lt;rsb&gt;, &lt;rsb.x&gt; */
#PUSH, 2
RS[]
DUP[]
#PUSH, 4096 /* fract AW value in 26.6 */
DIV[]
#PUSH, 4096 /* 64 in 26.6 */
MUL[]
EVEN[] /* fract AW bit not set */
SWAP[]
#PUSH, 256 /* comp AW value in 26.6 */
DIV[]
#PUSH, 4096 /* 64 in 26.6 */
MUL[]
EVEN[] /* comp AW bit not set */
AND[]
IF[]
    #PUSH, 32
    ADD[]
    FLOOR[]
EIF[]

SCFS[]

#PUSHON
#END
ENDF[]

FDEF[], 83

/* CALL[], &lt;radicand&gt;, 83

   returns with square root of radicand on stack */

#BEGIN
#PUSHOFF

/* STACK: &lt;radicand&gt; */

#PUSH, 0, 2
CINDEX[]

/* STACK: &lt;radicand&gt;, &lt;low&gt;, &lt;high&gt; */

#WBeginLoop83:

    #PUSH, 2 /* low */
    CINDEX[]
    #PUSH, 2 /* high */
    CINDEX[]
    GTEQ[]
    #PUSH, WOffset83a
    SWAP[]
    JROT[], (WOffset83a=#WEndLoop83) /* while low &lt;= high */

    /* STACK: &lt;radicand&gt;, &lt;low&gt;, &lt;high&gt; */

    #PUSH, 2 /* low */
    CINDEX[]
    #PUSH, 2 /* high */
    CINDEX[]
    ADD[]
    #PUSH, 32
    MUL[]

    /* STACK: &lt;radicand&gt;, &lt;low&gt;, &lt;high&gt;, &lt;mid&gt; */

    DUP[]
    DUP[]
    #PUSH, 6 /* radicand */
    CINDEX[]
    SWAP[]
    DIV[]

    /* STACK: &lt;radicand&gt;, &lt;low&gt;, &lt;high&gt;, &lt;mid&gt;, &lt;mid&gt;, &lt;radicand/mid&gt; */

    LT[]
    IF[]

        /* STACK: &lt;radicand&gt;, &lt;low&gt;, &lt;high&gt;, &lt;mid&gt; */

        ROLL[]
        POP[]
        #PUSH, 1
        ADD[]
        SWAP[]

        /* STACK: &lt;radicand&gt;, &lt;mid+1&gt;, &lt;high&gt; */

    ELSE[]

        DUP[]
        DUP[]
        #PUSH, 6 /* radicand */
        CINDEX[]
        SWAP[]
        DIV[]

        GT[]
        IF[]

            /* STACK: &lt;radicand&gt;, &lt;low&gt;, &lt;high&gt;, &lt;mid&gt; */

            SWAP[]
            POP[]
            #PUSH, 1
            SUB[]

            /* STACK: &lt;radicand&gt;, &lt;low&gt;, &lt;mid-1&gt; */

        ELSE[]

            /* STACK: &lt;radicand&gt;, &lt;low&gt;, &lt;high&gt;, &lt;mid&gt; */

            ROLL[]
            POP[]
            SWAP[]
            POP[]
            DUP[]

            /* STACK: &lt;radicand&gt;, &lt;mid&gt;, &lt;mid&gt; */

        EIF[]

    EIF[]


    #PUSH, WOffset83b
    JMPR[], (WOffset83b=#WBeginLoop83)

#WEndLoop83:

/* STACK: &lt;radicand&gt;, &lt;low&gt;, &lt;high&gt; */

ADD[]
#PUSH, 32
MUL[]
SWAP[]
POP[]

/* STACK: &lt;mid&gt; */

#PUSHON
#END
ENDF[]

FDEF[], 84

/* fn determines current rasterizing environment and stores it in s[2] as follows:
     bit 0 (value   1) = Grey-Scaling
     bit 1 (value   2) = ClearType(tm)
     bit 2 (value   4) = Compatible Width ClearType
     bit 3 (value   8) = Vertical Direction (horizontally striped) ClearType
     bit 4 (value  16) = BGR as opposed to RGB Devices
     bit 5 (value  32) = ClearType on Rapier CE Devices
     bit 6 (value  64) = ClearType with fractional advance widths
     bit 7 (value 128) = ClearType with non-ClearType direction anti-aliasing
     bit 8 (value 256) = ClearType with gray full-pixel

   s[2] is used e.g. in fns 74 through 77

   To test against any combination of these flags, add up the respective values.

   specific to the current rasterizing environment fn stores the following parameters
     s[5] = minimum distance
     s[8] = #samples/pixel in x-direction
     s[9] = #samples/pixel in y-direction
     s[12] = stroke optimization method in x-direction
     s[13] = stroke optimization method in y-direction

   CALL[], 84 */
   /* Version 2.1 20120101 */

#BEGIN
#PUSHOFF
#PUSH,2,0
WS[]            /* s[2] = grey scaling: off (by default) */
#PUSH,35,1      /* 35 = MS Rasterizer version 1.7 */
GETINFO[]       /* 1 = tell GETINFO to give us the rasterizer version */
LTEQ[]          /* 35 &lt;= version ? */
#PUSH,64,1      /* 64 = highest rasterizer version assigned to MS */
GETINFO[]       /* 1 = tell GETINFO to give us the rasterizer version */
GTEQ[]          /* 64 &gt;= version ? */
AND[]           /* 35 &lt;= version &amp;&amp; version &lt;= 64 ? */
IF[]            /* if so, we're running MS rasterizer version 1.7 or higher */
  #PUSH,4096,32 /* 4096 = flag returned by GETINFO if grey scaling bit is on */
  GETINFO[]     /* 32 = tell GETINFO to give us the grey scaling bit */
  EQ[]          /* 4096 == flag ? */
  IF[]          /* if so, we're running under grey scaling */
    #PUSH,2,1,2
    RS[]
    ADD[]
    WS[]        /* s[2] += grey scaling: on (by now) */
  EIF[]
  #PUSH,36,1      /* 36 = MS Rasterizer version 1.6+ (WinCE) or 1.8 (WinXP) */
  GETINFO[]       /* 1 = tell GETINFO to give us the rasterizer version */
  LTEQ[]          /* 36 &lt;= version ? (already tested version &lt;= 64) */
  IF[]            /* if so, we're running MS rasterizer version 1.6+ (WinCE) or 1.8 (WinXP) or higher */
    #PUSH,8192,64 /* 8192 = flag returned by GETINFO if ClearTypeTM bit is on */
    GETINFO[]     /* 64 = tell GETINFO to give us the ClearTypeTM bit */
    EQ[]          /* 8192 == flag ? */
    IF[]          /* if so, we're running under ClearTypeTM */
      #PUSH,2,2,2
      RS[]
      ADD[]
      WS[]        /* s[2] += ClearTypeTM: on (by now) */

      #PUSH,36,1    /* 36 = MS Rasterizer version 1.6+ (WinCE) */
      GETINFO[]
      EQ[]
      IF[] /***** we're running Rasterizer v1.6+ for WinCE with ClearType *****/

        #PUSH,2,32,2
        RS[]
        ADD[]
        WS[]        /* s[2] += Rapier CE: on (by now) */
        SVTCA[Y]
        MPPEM[]
        SVTCA[X]
        MPPEM[]
        GT[]
        IF[]
          #PUSH,2,8,2
          RS[]
          ADD[]
          WS[]
        EIF[]

      ELSE[] /***** we're running Rasterizer v1.8 (or higher) for WinXP with ClearType (or Win2k 2000 with ClearType patch) *****/

        #PUSH,16384,128 /* 16384 = flag returned by GETINFO if ClearTypeTM silly aw bit is on */
        GETINFO[]       /* 128 = tell GETINFO to give us the ClearTypeTM silly aw bit */
        EQ[]            /* 16384 == flag ? */
        IF[]            /* if so, we're running under ClearTypeTM silly aw */
          #PUSH,2,4,2
          RS[]
          ADD[]
          WS[]          /* s[2] += ClearTypeTM silly aw: on (by now) */
        EIF[]

        #PUSH,16384,128 /* 32768 = flag returned by GETINFO if ClearTypeTM in vertical direction bit is on */
        MUL[]           /* Assembler restriction: produce 32768 by multiplying 16384 by 2 (2 in F26.6 is 128) */
        #PUSH,256       /* 256 = tell GETINFO to give us the ClearTypeTM in vertical direction bit */
        GETINFO[]
        EQ[]            /* 32768 == flag ? */
        IF[]            /* if so, we're running ClearTypeTM in vertical direction */
        #PUSH,2,8,2
          RS[]
          ADD[]
          WS[]          /* s[2] += ClearTypeTM in vertical direction: on (by now) */
        EIF[]

        #PUSH,16384,256 /* 65536 = flag returned by GETINFO if ClearTypeTM in BGR order bit is on */
        MUL[]           /* Assembler restriction: produce 65536 by multiplying 16384 by 4 (4 in F26.6 is 256) */
        #PUSH,512       /* 512 = tell GETINFO to give us the ClearTypeTM in BGR order bit */
        GETINFO[]
        EQ[]            /* 65536 == flag ? */
        IF[]            /* if so, we're running under ClearTypeTM in BGR order */
          #PUSH,2,16,2
          RS[]
          ADD[]
          WS[]          /* s[2] += ClearTypeTM in BGR order: on (by now) */
        EIF[]

        #PUSH,38,1      /* 38 = MS Rasterizer version 1.9 */
        GETINFO[]       /* 1 = tell GETINFO to give us the rasterizer version */
        LTEQ[]          /* 38 &lt;= version ? (already tested version &lt;= 64) */
        IF[]            /* if so, we're running MS rasterizer version 1.9 (Windows Longhorn) or higher */

          #PUSH,16384,512  /* 131072 = flag returned by GETINFO if ClearTypeTM fractional advance widths bit is on */
          MUL[]            /* Assembler restriction: produce 131072 by multiplying 16384 by 8 (8 in F26.6 is 512) */
          #PUSH,1024       /* 1024 = tell GETINFO to give us the ClearTypeTM fractional advance widths bit */
          GETINFO[]
          EQ[]             /* 131072 == flag ? */
          IF[]             /* if so, we're running under ClearTypeTM fractional advance widths */
            #PUSH,2,64,2
            RS[]
            ADD[]
            WS[]           /* s[2] += ClearTypeTM fractional advance widths: on (by now) */
          EIF[]

          #PUSH,16384,1024 /* 262144 = flag returned by GETINFO if ClearTypeTM non-ClearType direction anti-aliasing bit is on */
          MUL[]            /* Assembler restriction: produce 262144 by multiplying 16384 by 16 (16 in F26.6 is 1024) */
          #PUSH,2048       /* 2048 = tell GETINFO to give us the ClearTypeTM non-ClearType direction anti-aliasing bit */
          GETINFO[]
          EQ[]             /* 262144 == flag ? */
          IF[]             /* if so, we're running under ClearTypeTM non-ClearType direction anti-aliasing */
            #PUSH,2,128,2
            RS[]
            ADD[]
            WS[]           /* s[2] += ClearTypeTM non-ClearType direction anti-aliasing: on (by now) */
          EIF[]

          #PUSH,40,1      /* 40 = Rasterizer v2.1 Windows 8, SubPixel */
          GETINFO[]       /* 1 = tell GETINFO to give us the rasterizer version */
          LTEQ[]          /* 40 &lt;= version ? (already tested version &lt;= 64) */
          IF[]            /* if so, we're running MS rasterizer version 2.1 (Windows 8) or higher */
            #PUSH,16384,2048 /* 524288 = flag returned by GETINFO if ClearTypeTM non-ClearType direction anti-aliasing bit is on */
            MUL[]            /* Assembler restriction: produce 524288 by multiplying 16384 by 32 (32 in F26.6 is 2048) */
            #PUSH,4096       /* 4096 = tell GETINFO to give us the ClearTypeTM gray full-pixel rendering bit */
            GETINFO[]
            EQ[]             /* 524288 == flag ? */
            IF[]             /* if so, we're running under ClearTypeTM gray full-pixel rendering */
            #PUSH,2,256,2
              RS[]
              ADD[]
              WS[]           /* s[2] += ClearTypeTM gray full-pixel rendering: on (by now) */
            EIF[]
          EIF[]

        EIF[] /* Vista or greater rasterizer */

      EIF[] /* Windows ClearType (Platt) */

    EIF[] /* ClearType Enabled */
  EIF[] /* ClearType enabled rasterizer */
EIF[] /* Microsoft Rasterizer */

/* store rasterizing environment specific parameters */

#PUSH, 0, 2
RS[]
EQ[]
IF[] /* for b&amp;w */
  #PUSH, 5, 64, 8, 64, 9, 64, 12, 2, 13, 2
ELSE[]
  #PUSH, 1, 2
  RS[]
  EQ[]
  IF[] /* for grey-scaling */
    #PUSH, 5, 64, 8, 256, 9, 256, 12, 1, 13, 1
  ELSE[]
    #PUSH, 128, 2
    RS[]
    GT[]
    IF[] /* for ClearType */
      #PUSH, 5, 64, 8, 384, 9, 64
    ELSE[] /* for y-anti-aliased ClearType */
      #PUSH, 256, 2
      RS[]
      GT[]
      IF[] /* Gray ClearType */
        #PUSH, 5, 64, 8, 384, 9, 320
      ELSE[] /* Gray ClearType */
        #PUSH, 384, 2
        RS[]
        GT[]
        IF[] /* Gray ClearType */
          #PUSH, 5, 64, 8, 512, 9, 64
        ELSE[] /* Gray ClearType y-anti-aliased */
          #PUSH, 5, 64, 8, 256, 9, 256
        EIF[]
      EIF[]
    EIF[]

    #PUSH,16384,128 /* b&amp;w aw? */
    GETINFO[]
    NEQ[]
    #PUSH,16384,512 /* fract aw? */
    MUL[]
    #PUSH,1024
    GETINFO[]
    NEQ[]
    AND[]
    IF[] /* natural widths */
      #PUSH, 12, 0, 13, 1
    ELSE[] /* compatible or fractional widths */
      #PUSH, 12, 0, 13, 1
    EIF[]

  EIF[]
EIF[]

WS[]
WS[]
WS[]
WS[]
WS[]

#PUSHON
#END
ENDF[]

FDEF[], 85

/* fn 85 equalizes double specified heights below a given ppem size

   CALL[], &lt;rel cvt&gt;, &lt;ppem size&gt;, &lt;abs cvt&gt;, 85 */
   /* Version 2.0 20141201 */

#BEGIN
#PUSHOFF

/* STACK: &lt;rel cvt&gt;, &lt;ppem size&gt;, &lt;abs cvt&gt; */

RCVT[] /* pick absolute (square) height */
#PUSH, 2, 78 /* 2 appears to work for heights and weights */
CALL[]
SWAP[]

/* STACK: &lt;rel cvt&gt;, &lt;[abs cvt]&gt;, &lt;ppem size&gt; */

#PUSH, 79 /* #samples/pixel */
CALL[]
DUP[]
#PUSH, 64
LTEQ[]
IF[] /* #samples/pixel = 1 (or less...) */

    /* STACK: &lt;rel cvt&gt;, &lt;[abs cvt]&gt;, &lt;ppem size&gt;, &lt;#samples/pixel&gt; */

    POP[]
    MPPEM[]
    LTEQ[] /* specified ppem size &lt;= actual ppem size ? */
    IF[]

        /* STACK: &lt;rel cvt&gt;, &lt;[abs cvt]&gt; */

        #PUSH, 2
        CINDEX[]
        RCVT[] /* pick relative height (overshoot) */
        #PUSH, 1, 78
        CALL[]
        ADD[] /* add overshoot to square height */

        /* STACK: &lt;rel cvt&gt;, &lt;[rel cvt] + [abs cvt]&gt; */

    EIF[]

ELSE[] /* #samples/pixel &gt; 1 */

    /* STACK: &lt;rel cvt&gt;, &lt;[abs cvt]&gt;, &lt;ppem size&gt;, &lt;#samples/pixel&gt; */

    SWAP[]
    MPPEM[]
    LTEQ[] /* specified ppem size &lt;= actual ppem size */
    IF[]

      /* STACK: &lt;rel cvt&gt;, &lt;[abs cvt]&gt;, &lt;#samples/pixel&gt; */

      #PUSH, 3 /* rel cvt */
      CINDEX[]
      RCVT[]
      DUP[]
      ABS[]
      ROLL[]
      MUL[]
      #PUSH, 64

      /* STACK: &lt;rel cvt&gt;, &lt;[abs cvt]&gt;, &lt;[rel cvt]&gt;, &lt;|[rel cvt]| * #samples/pixel&gt;, &lt;1&gt; */

      GTEQ[] /* #samples/pixel greater than or equal to 1 pixel */
      IF[]

          /* STACK: &lt;rel cvt&gt;, &lt;[abs cvt]&gt;, &lt;[rel cvt]&gt; */

          #PUSH, 2, 78
          CALL[]
          ADD[] /* add overshoot to square height */

          /* STACK: &lt;rel cvt&gt;, &lt;[rel cvt] + [abs cvt]&gt; */

      ELSE[]

          /* STACK: &lt;rel cvt&gt;, &lt;[abs cvt]&gt;, &lt;[rel cvt]&gt; */

          POP[]

          /* STACK: &lt;rel cvt&gt;, &lt;[abs cvt]&gt; */

      EIF[]
    ELSE[]
          /* STACK: &lt;rel cvt&gt;,&lt;abs cvt&gt;,&lt;#samples/pixel&gt;*/
          POP[]
          /* STACK: &lt;rel cvt&gt;,&lt;abs cvt&gt;*/
    EIF[]

EIF[]

/* STACK: &lt;rel cvt&gt;, &lt;[act cvt]&gt; */

WCVTP[] /* make this the round height */
#PUSHON
#END
ENDF[]

FDEF[], 86

/* function to naturally space an accent above or below a base character

   CALL[], &lt;child&gt;, &lt;parent&gt;, &lt;roundMethod&gt;, &lt;minDist?&gt;, &lt;distance&gt;, 86

   convert distance (fUnits) to pixels, round, and space child from parent by result
   this essentially implements the functionality of an MDRP[m&gt;RWh] instrunction for
   composites which lack a suitable implementation of "original" coordinates.
   roundMethod 0, 1, 2, and 3 round down to, to, up to, and to half virtual grid
   function assumes cvt #20 is reserved and can be used temporarily in here... 
   storage 16 contains a threshold ppem size. if zero, ignore the threshold, otherwise
   if less than or equal to threshold, use 64 (26.6) #samples/pixel. */

#BEGIN
#PUSHOFF

/* extract the sign from distance */
/* STACK: &lt;child&gt;, &lt;parent&gt;, &lt;roundMethod&gt;, &lt;minDist?&gt;, &lt;distance&gt; */

DUP[]
#PUSH, 0
LT[]
DUP[]
IF[]
    SWAP[]
    NEG[]
ELSE[]
    SWAP[]
EIF[]

/* scale distance using reserved cvt */
/* STACK: &lt;child&gt;, &lt;parent&gt;, &lt;roundMethod&gt;, &lt;minDist?&gt;, &lt;negDist?&gt;, &lt;|distance|&gt; */

#PUSH, 20, 20 /* reserved cvt */
ROLL[]
WCVTF[]
RCVT[]

/* determine if we are using a size threshold */
/* STACK: &lt;child&gt;, &lt;parent&gt;, &lt;roundMethod&gt;, &lt;minDist?&gt;, &lt;negDist?&gt;, &lt;|distance|'&gt; */

#PUSH, 16, 16 /* reserved storage for threshold */
RS[]
MPPEM[]
ROLL[]
RS[]
LTEQ[]
AND[] /* threshold must not be zero and &lt;= ppem */
IF[]
    #PUSH, 64 /* #samples/pixel = 1 */
ELSE[]
/* round per round method and #samples/pixel in current pv */
/* STACK: &lt;child&gt;, &lt;parent&gt;, &lt;roundMethod&gt;, &lt;minDist?&gt;, &lt;negDist?&gt;, &lt;|distance|'&gt; */

#PUSH, 79 /* #samples/pixel */
CALL[]
EIF[]

SWAP[]
#PUSH, 97, 6 /* round to virtual grid, roundMethod */
MINDEX[]
ADD[]
CALL[] /* round to virtual grid */

/* STACK: &lt;child&gt;, &lt;parent&gt;, &lt;minDist?&gt;, &lt;negDist?&gt;, &lt;[|distance|']&gt; */

/* apply minimum distance, if applicable */
ROLL[]
IF[]
    #PUSH, 5 /* minimum distance */
    RS[]
    MAX[]
EIF[]

/* fold the sign back into distance */
/* STACK: &lt;child&gt;, &lt;parent&gt;, &lt;negDist?&gt; &lt;[|distance|']&gt; */

SWAP[]
IF[]
    NEG[]
EIF[]

/* move child by [distance'] */
/* STACK: &lt;child&gt;, &lt;parent&gt;, &lt;[distance']&gt; */

SWAP[]
SRP0[]
MSIRP[m]

/* STACK: */

#PUSHON
#END
ENDF[]

FDEF[], 87

/* fn places an accent &lt;c0&gt; &lt;c1&gt; on top of a base character &lt;p0&gt; &lt;p1&gt;
   fn uses the same constraint model as fn 111 (interpolate median),
   except that for composites there is no concept of original coordinates,
   hence the respective values are provided by the caller as &lt;partialFactor&gt;

   CALL[], &lt;p0&gt;, &lt;c0&gt;, &lt;c1&gt;, &lt;p1&gt;, &lt;partialFactor&gt;, 87 */

#BEGIN
#PUSHOFF

/* partialFactor: ((c0 + c1)/2 - p0)/(p1 - p0)
   target median: ((c0 + c1)/2 - p0)*(p1' - p0')/(p1 - p0)&gt; + p0' = partialFactor*(p1' - p0')
   source median: (c0' + c1')/2
   primed coordinates are [N]ew, other coordinates are [O]riginal */

/* STACK: &lt;c0&gt;, &lt;c1&gt;, &lt;p0&gt;, &lt;partialFactor&gt;, &lt;p1&gt; */

#PUSH, 3 /* p0 */
CINDEX[]
MD[N]
MUL[]

/* STACK: &lt;c0&gt;, &lt;c1&gt;, &lt;p0&gt;, &lt;((c0 + c1)/2 - p0)*(p1' - p0')/(p1 - p0)&gt; */

SWAP[] /* p0 */
GC[N]
ADD[]

/* STACK: &lt;c0&gt;, &lt;c1&gt;, &lt;targetMedian&gt; */

#PUSH, 79 /* #samples/pixel */
CALL[]
SWAP[]

/* STACK: &lt;c0&gt;, &lt;c1&gt;, &lt;#samples/pixel&gt;, &lt;targetMedian&gt; */

#PUSH, 4 /* c0 */
CINDEX[]
#PUSH, 4 /* c1 */
CINDEX[]
MD[N]
#PUSH, 3 /* #samples/pixel */
CINDEX[]
MUL[]

/* STACK: &lt;c0&gt;, &lt;c1&gt;, &lt;#samples/pixel&gt;, &lt;targetMedian&gt;, &lt;numVirtualPixels&gt; */

ODD[]
DUP[]
ADD[]
#PUSH, 98
ADD[]
CALL[] /* round to (half) virtual grid */

/* STACK: &lt;c0&gt;, &lt;c1&gt;, &lt;[targetMedian]&gt; */

#PUSH, 3 /* c0 */
CINDEX[]
DUP[]
SRP0[]
GC[N]
ROLL[] /* c1 */
GC[N]
ADD[]
#PUSH, 32
MUL[]

/* STACK: &lt;c0&gt;, &lt;targetMedian&gt;, &lt;sourceMedian&gt; */

SUB[]

/* STACK: &lt;c0&gt;, &lt;offset&gt; */

MSIRP[m]

#PUSHON
#END
ENDF[]

FDEF[], 88

/* set up storage locations with the x and y components
   of the italic and adjusted italic angles as follows:

     s[ 6] = adjusted italic angle y
     s[ 7] = adjusted italic angle x
     s[10] = italic angle y
     s[11] = italic angle x

   while rendering in b&amp;w, determines the optimal phase
   for positioning italic strokes

     s[ 4] = optimal phase

   CALL[], &lt;riseCvt&gt;, &lt;runCvt&gt;, 88 */

#BEGIN
#PUSHOFF

/* STACK: &lt;riseCvt&gt;, &lt;runCvt&gt; */

#PUSH, 0 /* Use twilight points to calculate stroke angles */
SZPS[]

#PUSH, 2, 3 /* riseCvt */
CINDEX[]
#PUSH, 1, 4 /* runCvt */
CINDEX[]

/* STACK: &lt;riseCvt&gt;, &lt;runCvt&gt;, &lt;2&gt;, &lt;riseCvt&gt;, &lt;1&gt;, &lt;runCvt&gt; */

SVTCA[X] /* Set twilight point 1 with italic run cvt in x */
MIAP[r]

SVTCA[Y] /* Set twilight point 2 with italic rise cvt in y */
MIAP[r]

#PUSH, 1, 2 /* and let the rasterizer do the math */
SPVTL[r]
GPV[]

#PUSH, 10 /* store the x and y components of the italic angle */
SWAP[]
NEG[]     /* notice that since we're essentially setting the pv to a line  */
WS[]      /* from (runCvt,0) to (0,riseCvt), the calculcated pv will be    */
#PUSH, 11 /* proportional to (runCvt,0) - (0,riseCvt) = (runCvt,-riseCvt). */
SWAP[]    /* Hence we have to mirror the result at the base line, which is */
WS[]      /* done by flipping (negating) the sign of the y component here. */

/* STACK: &lt;riseCvt&gt;, &lt;runCvt&gt; */

#PUSH, 2, 3 /* riseCvt */
CINDEX[]
#PUSH, 1, 4 /* runCvt */
CINDEX[]

SVTCA[X] /* same for the adjusted italic angle */
MIAP[R]  /* except to round the twilight point in x... */

SVTCA[Y]
MIAP[R]  /* ...and in y */

#PUSH, 1, 2
SPVTL[r]
GPV[]

#PUSH, 6
SWAP[]
NEG[]    /* same neg as above */
WS[]
#PUSH, 7
SWAP[]
WS[]

#PUSH, 1 /* restore graphics state */
SZPS[]

/* STACK: &lt;riseCvt&gt;, &lt;runCvt&gt; */

#PUSH, 0, 2
RS[]
EQ[]
IF[] /* running b&amp;w? */

    /* STACK: &lt;riseCvt&gt;, &lt;runCvt&gt; */
    /* determine adjusted run' = run*[rise]/rise */

    RCVT[]
    SWAP[]
    RCVT[]
    DUP[]
    RTG[]
    ROUND[Bl]
    ROLL[]
    MUL[]
    SWAP[]
    DIV[]

    /* STACK: &lt;run'&gt; */
    /* determine phase = (run' - [run'])/2 = half the rounding error */

    DUP[]
    DUP[]
    #PUSH, 64
    LT[]
    IF[]
        CEILING[] /* optimize for "minimum italic angle" */
    ELSE[]
        FLOOR[] /* optimize for minimal number of jaggies */
    EIF[]
    SUB[]
    #PUSH, 32
    MUL[]

    /* STACK: &lt;phase&gt; */
    /* for its use on bottom italic edge, determine complement to full pixel */

    #PUSH, 64
    SWAP[]
    SUB[]

    /* and store in s[4] */

    #PUSH, 4
    SWAP[]
    WS[]

    /* STACK: */

ELSE[]

    /* STACK: &lt;riseCvt&gt;, &lt;runCvt&gt; */

    #PUSH, 4, 0
    WS[]
    POP[]
    POP[]

    /* STACK: */

EIF[]

RTG[]
SVTCA[X]

#PUSHON
#END
ENDF[]

FDEF[], 89

/* function rounds &lt;cvt&gt; depending on rendering environment and pv

   CALL[], &lt;cvt&gt;, 89 */

#BEGIN
#PUSHOFF

DUP[]
RCVT[]
#PUSH, 0, 78 /* roundDist */
CALL[]
WCVTP[]

#PUSHON
#END
ENDF[]

FDEF[], 90

/* below &lt;ppem&gt;: make both children the same as the (averaged) parent cvt
   at and above: calculate child cvt &lt;ch0&gt; as &lt;fraction&gt; of child cvt &lt;ch1&gt;

   CALL[], &lt;p&gt;, &lt;ch0&gt;, &lt;fraction&gt;, &lt;ch1&gt;, &lt;ppem&gt;, 90 */

#BEGIN
#PUSHOFF

/* STACK: &lt;p&gt;, &lt;ch0&gt;, &lt;fraction&gt;, &lt;ch1&gt;, &lt;ppem&gt; */

MPPEM[]
LTEQ[]
#PUSH, 64, 79 /* #samples/pixel */
CALL[]
LT[]
OR[]
IF[] /* at or above ppem limit or rounding to less than a pixel */ 

    /* STACK: &lt;p&gt;, &lt;ch0&gt;, &lt;fraction&gt;, &lt;ch1&gt; */

    DUP[]
    RCVT[]
    #PUSH, 1, 78 /* roundDist */
    CALL[]
    DUP[]
    ROLL[]
    ROLL[]

    /* STACK: &lt;p&gt;, &lt;ch0&gt;, &lt;fraction&gt;, &lt;[ch1]&gt;, &lt;ch1&gt;, &lt;[ch1]&gt; */

    WCVTP[]

    /* STACK: &lt;p&gt;, &lt;ch0&gt;, &lt;fraction&gt;, &lt;[ch1]&gt; */

    DUP[]
    #PUSH, 64, 4
    MINDEX[]
    SUB[]
    MUL[]
    SUB[]
    #PUSH, 1, 78 /* roundDist */
    CALL[]

    /* STACK: &lt;p&gt;, &lt;ch0&gt;, &lt;[ch1] - [ch1]*(1-fraction)&gt; */

    WCVTP[]
    POP[] /* parent not involved */

    /* STACK: */

ELSE[]

    /* STACK: &lt;p&gt;, &lt;ch0&gt;, &lt;fraction&gt;, &lt;ch1&gt; */

    SWAP[]
    POP[] /* fraction not involved */

    /* STACK: &lt;p&gt;, &lt;ch0&gt;, &lt;ch1&gt; */

    ROLL[]
    RCVT[]
    #PUSH, 1, 78 /* roundDist */
    CALL[]

    /* STACK: &lt;ch0&gt;, &lt;ch1&gt;, &lt;[p]&gt; */

    DUP[]
    ROLL[]
    SWAP[]

    /* STACK: &lt;ch0&gt;, &lt;[p]&gt;, &lt;ch1&gt;, &lt;[p]&gt; */

    WCVTP[]
    WCVTP[]

    /* STACK: */

EIF[]

#PUSHON
#END
ENDF[]

FDEF[], 91

/* below &lt;ppem&gt;: make child cvt &lt;ch&gt; the same as parent cvt &lt;p&gt;
   at and above: calculate child cvt &lt;ch&gt; as &lt;fraction&gt; of parent cvt &lt;p&gt;

   CALL[], &lt;ch&gt;, &lt;fraction&gt;, &lt;p&gt;, &lt;ppem&gt;, 91 */

#BEGIN
#PUSHOFF

/* STACK: &lt;ch&gt;, &lt;fraction&gt;, &lt;p&gt;, &lt;ppem&gt; */

MPPEM[]
LTEQ[]
#PUSH, 64, 79 /* #samples/pixel */
CALL[]
LT[]
OR[]
IF[] /* at or above ppem limit or rounding to less than a pixel */ 

    /* STACK: &lt;ch&gt;, &lt;fraction&gt;, &lt;p&gt; */

    RCVT[]
    DUP[]
    ROLL[]

    /* STACK: &lt;ch&gt;, &lt;[p]&gt;, &lt;[p]&gt;, &lt;fraction&gt; */

    #PUSH, 64
    SUB[]
    MUL[]
    ADD[]

    /* STACK: &lt;ch&gt;, &lt;[p] + [p]*(fraction - 1)&gt; */

ELSE[]

    /* STACK: &lt;ch&gt;, &lt;fraction&gt;, &lt;p&gt; */

    SWAP[]
    POP[] /* fraction not involved */

    RCVT[]

    /* STACK: &lt;ch&gt;, [p] */

EIF[]

#PUSH, 1, 78 /* roundDist */
CALL[]
WCVTP[]

/* STACK: */

#PUSHON
#END
ENDF[]

FDEF[], 92

/* function to calculate a child cvt &lt;ch&gt;
   as a &lt;blend&gt; of two parent cvts &lt;p0&gt;, &lt;p1&gt;

   CALL[], &lt;ch&gt;, &lt;blend&gt;, &lt;p0&gt;, &lt;p1&gt;, 92 */

#BEGIN
#PUSHOFF

/* STACK: &lt;ch&gt;, &lt;blend&gt;, &lt;p0&gt;, &lt;p1&gt; */

SWAP[]
RCVT[]
DUP[]

/* STACK: &lt;ch&gt;, &lt;blend&gt;, &lt;p1&gt;, &lt;[p0]&gt;, &lt;[p0]&gt; */

ROLL[]
RCVT[]

SWAP[]
SUB[]

/* STACK: &lt;ch&gt;, &lt;blend&gt;, &lt;[p0]&gt;, &lt;[p1] - [p0]&gt; */

DUP[]
ABS[]
#PUSH, 64
LTEQ[]

/* STACK: &lt;ch&gt;, &lt;blend&gt;, &lt;[p0]&gt;, &lt;[p1] - [p0]&gt;, &lt;contrast &lt;= 1 pixel(s)?&gt; */

#PUSH, 4
CINDEX[]
DUP[]
#PUSH, 0
GTEQ[]
SWAP[]
#PUSH, 64
LTEQ[]
AND[]

AND[]

/* STACK: &lt;ch&gt;, &lt;blend&gt;, &lt;[p0]&gt;, &lt;[p1] - [p0]&gt;, &lt;contrast &lt;= 1 pixel(s) &amp;&amp; blend &gt;= 0 &amp;&amp; blend &lt;= 64?&gt; */

#PUSH, 64, 79 /* #samples/pixel */
CALL[]
EQ[]

AND[]

/* STACK: &lt;ch&gt;, &lt;blend&gt;, &lt;[p0]&gt;, &lt;[p1] - [p0]&gt;, &lt;contrast &lt;= 1 pixel(s) &amp;&amp; blend &gt;= 0 &amp;&amp; blend &lt;= 64 &amp;&amp; rounding to full pixel?&gt; */

IF[]

    /* STACK: &lt;ch&gt;, &lt;blend&gt;, &lt;[p0]&gt;, &lt;[p1] - [p0]&gt; */

    ROLL[]
    GPV[]
    ABS[]
    SWAP[]
    ABS[]
    SWAP[]

    /* STACK: &lt;ch&gt;, &lt;[p0]&gt;, &lt;[p1] - [p0]&gt;, &lt;blend&gt;, &lt;|pv.x|&gt;, &lt;|pv.y|&gt; */

    GTEQ[] /* pv closer to x? */
    IF[]

        /* STACK: &lt;ch&gt;, &lt;[p0]&gt;, &lt;[p1] - [p0]&gt;, &lt;blend&gt; */
        /* bias towards p1: blend' := 1 - (1 - blend)² */

        #PUSH, 64, 64
        ROLL[]
        SUB[]
        DUP[]
        MUL[]
        SUB[]

        /* &lt;ch&gt;, &lt;[p0]&gt;, &lt;[p1] - [p0]&gt;, &lt;1 - (1 - blend)²&gt; */

    ELSE[]

        /* STACK: &lt;ch&gt;, &lt;[p0]&gt;, &lt;[p1] - [p0]&gt;, &lt;blend&gt; */
        /* bias towards p0: blend' := blend² */

        DUP[]
        MUL[]

    /* STACK: &lt;ch&gt;, &lt;[p0]&gt;, &lt;[p1] - [p0]&gt;, &lt;blend²&gt; */

    EIF[]

ELSE[]

    /* STACK: &lt;ch&gt;, &lt;blend&gt;, &lt;[p0]&gt;, &lt;[p1] - [p0]&gt; */
    /* use unbiased blend */

    ROLL[]

    /* STACK: &lt;ch&gt;, &lt;[p0]&gt;, &lt;[p1] - [p0]&gt;, &lt;blend&gt; */

EIF[]

/* STACK: &lt;ch&gt;, &lt;[p0]&gt;, &lt;[p1] - [p0]&gt;, &lt;blend&gt; */

MUL[]
#PUSH, 2, 78 /* roundDist */
CALL[]
ADD[]

/* STACK: &lt;ch&gt;, &lt;[ch]&gt; */

WCVTP[]

#PUSHON
#END
ENDF[]

FDEF[], 93

/* fn sets vectors to X (used in calculated calls)

   CALL[], 93 */

#BEGIN
#PUSHOFF
SVTCA[X]
#PUSHON
#END
ENDF[]

FDEF[], 94

/* fn sets vectors to Y (used in calculated calls)

   CALL[], 94 */

#BEGIN
#PUSHOFF
SVTCA[Y]
#PUSHON
#END
ENDF[]

FDEF[], 95

/* Set fv to X, pv perpendicular to italic angle (used in calculated calls)

   CALL[], 95 */

#BEGIN
#PUSHOFF
SFVTCA[X]
#PUSH, 11, 10
RS[]
SWAP[]
RS[]
NEG[]
SPVFS[]
#PUSHON
#END
ENDF[]

FDEF[], 96

/* Set fv to italic angle, pv to Y (used in calculated calls)

   CALL[], 96 */

#BEGIN
#PUSHOFF
#PUSH, 10, 11
RS[]
SWAP[]
RS[]
SFVFS[]
SPVTCA[Y]
#PUSHON
#END
ENDF[]

FDEF[], 97

/* round down to virtual grid

   CALL[], &lt;#samples/pixel&gt;, &lt;argument&gt;, 97

   returns with rounded argument on stack */

#BEGIN
#PUSHOFF

/* STACK: &lt;#samples/pixel&gt;, &lt;argument&gt; */
/* upscale argument by #samples/pixel */

#PUSH, 2 /* #samples/pixel */
CINDEX[]
MUL[]

/* do the rounding in upscaled domain */

FLOOR[] /* round down to super grid */

/* Downscaling uses a DIV[] operation, which is implemented as floor(numerator/denominator).
   For round(numerator/denominator) instead, add ½ denominator to numerator before dividing.
   But since the division in 26.6 has to multiply the numerator by 2^6 (64) before dividing,
   we have to divide said ½ denominator by 64 before adding, hence the 8192 (= 128 in 26.6). */

#PUSH, 2 /* #samples/pixel */
CINDEX[]
#PUSH, 8192
DIV[]
ADD[]

/* downscale rounded and adjusted argument */

SWAP[] /* #samples/pixel */
DIV[]

/* STACK: &lt;[argument]&gt; */

#PUSHON
#END
ENDF[]

FDEF[], 98

/* round to virtual grid

   CALL[], &lt;#samples/pixel&gt;, &lt;argument&gt;, 98

   returns with rounded argument on stack */

#BEGIN
#PUSHOFF

/* STACK: &lt;#samples/pixel&gt;, &lt;argument&gt; */

#PUSH, 2 /* #samples/pixel */
CINDEX[]
MUL[]

/* do the rounding in upscaled domain */

#PUSH, 32 /* round to super grid */
ADD[]
FLOOR[]

/* see above for adjustments below */

#PUSH, 2 /* #samples/pixel */
CINDEX[]
#PUSH, 8192
DIV[]
ADD[]

/* downscale rounded and adjusted argument */

SWAP[] /* #samples/pixel */
DIV[]

/* STACK: &lt;[argument]&gt; */

#PUSHON
#END
ENDF[]

FDEF[], 99

/* round up to virtual grid

   CALL[], &lt;#samples/pixel&gt;, &lt;argument&gt;, 99

   returns with rounded argument on stack */

#BEGIN
#PUSHOFF

/* STACK: &lt;#samples/pixel&gt;, &lt;argument&gt; */

#PUSH, 2 /* #samples/pixel */
CINDEX[]
MUL[]

/* do the rounding in upscaled domain */

CEILING[] /* round up to super grid */

/* see above for adjustments below */

#PUSH, 2 /* #samples/pixel */
CINDEX[]
#PUSH, 8192
DIV[]
ADD[]

/* downscale rounded and adjusted argument */

SWAP[] /* #samples/pixel */
DIV[]

/* STACK: &lt;[argument]&gt; */

#PUSHON
#END
ENDF[]

FDEF[], 100

/* round to half virtual grid

   CALL[], &lt;#samples/pixel&gt;, &lt;argument&gt;, 100

   returns with rounded argument on stack */

#BEGIN
#PUSHOFF

/* STACK: &lt;#samples/pixel&gt;, &lt;argument&gt; */

#PUSH, 2 /* #samples/pixel */
CINDEX[]
MUL[]

/* do the rounding in upscaled domain */

FLOOR[]
#PUSH, 32 /* round to half super grid */
ADD[]

/* see above for adjustments below */

#PUSH, 2 /* #samples/pixel */
CINDEX[]
#PUSH, 8192
DIV[]
ADD[]

/* downscale rounded and adjusted argument */

SWAP[] /* #samples/pixel */
DIV[]

/* STACK: &lt;[argument]&gt; */

#PUSHON
#END
ENDF[]

FDEF[], 101

/* determine actual distance to be used for emulating MDRP[&lt;]
   instruction with rendering environment specific rounding

   CALL[], &lt;p&gt;, &lt;c&gt;, 101

   returns with rounded distance on stack */

#BEGIN
#PUSHOFF

/* STACK: &lt;p&gt;, &lt;c&gt; */

SWAP[]
MD[O]

/* round without minDist */

#PUSH, 2, 78 /* roundDist */
CALL[]

/* STACK: &lt;[w]&gt; */

#PUSHON
#END
ENDF[]

FDEF[], 102

/* determine actual distance to be used for emulating MDRP[&gt;]
   instruction with rendering environment specific rounding

   CALL[], &lt;p&gt;, &lt;c&gt;, 102

   returns with rounded distance on stack */

#BEGIN
#PUSHOFF

/* STACK: &lt;p&gt;, &lt;c&gt; */

SWAP[]
MD[O]

/* round with minDist */

#PUSH, 1, 78 /* roundDist */
CALL[]

/* STACK: &lt;[w]&gt; */

#PUSHON
#END
ENDF[]

FDEF[], 103

/* determine actual distance to be used for emulating MIRP[&lt;]
   instruction with rendering environment specific rounding

   CALL[], &lt;p&gt;, &lt;c&gt;, &lt;cvt&gt;, 103

   returns with rounded distance on stack */

#BEGIN
#PUSHOFF

/* STACK: &lt;p&gt;, &lt;c&gt;, &lt;cvt&gt; */

SWAP[] /* c */
ROLL[] /* p */
MD[O]
SWAP[] /* cvt */

/* STACK: &lt;wNat&gt;, &lt;cvt&gt; */
/* do cvt cut-in test */

RCVT[]
ABS[]
#PUSH, 2
CINDEX[]
ABS[]
#PUSH, 2
CINDEX[]
SUB[]
ABS[]
#PUSH, 3 /* cvt cut-in */
RS[]

/* STACK: &lt;wNat&gt;, &lt;|wCvt|&gt;, &lt;||wNat| - |wCvt||&gt;, &lt;cvt cut-in&gt; */

GT[]
IF[]

    /* STACK: &lt;wNat&gt;, &lt;|wCvt|&gt; */
    /* cvt cut-in test failed */

    POP[]
    DUP[]
    ABS[]

    /* else cvt cut-in test succeeded */

EIF[]

/* STACK: &lt;wNat&gt;, &lt;|w|&gt; */
/* round without minDist */

#PUSH, 2, 78 /* roundDist */
CALL[]

/* STACK: &lt;wNat&gt;, &lt;[w]&gt; */
/* inherit sign from wNat */

SWAP[]
#PUSH, 0
LT[]
IF[]
    NEG[]
EIF[]

/* STACK: &lt;[w]&gt; */

#PUSHON
#END
ENDF[]

FDEF[], 104

/* determine actual distance to be used for emulating MIRP[&gt;]
   instruction with rendering environment specific rounding

   CALL[], &lt;p&gt;, &lt;c&gt;, &lt;cvt&gt;, 104

   returns with rounded distance on stack */

#BEGIN
#PUSHOFF

/* STACK: &lt;p&gt;, &lt;c&gt;, &lt;cvt&gt; */

SWAP[] /* c */
ROLL[] /* p */
MD[O]
SWAP[] /* cvt */

/* STACK: &lt;wNat&gt;, &lt;cvt&gt; */
/* do cvt cut-in test */

RCVT[]
ABS[]
#PUSH, 2
CINDEX[]
ABS[]
#PUSH, 2
CINDEX[]
SUB[]
ABS[]
#PUSH, 3 /* cvt cut-in */
RS[]

/* STACK: &lt;wNat&gt;, &lt;|wCvt|&gt;, &lt;||wNat| - |wCvt||&gt;, &lt;cvt cut-in&gt; */

GT[]
IF[]

    /* STACK: &lt;wNat&gt;, &lt;|wCvt|&gt; */
    /* cvt cut-in test failed */

    POP[]
    DUP[]
    ABS[]

    /* else cvt cut-in test succeeded */

EIF[]

/* STACK: &lt;wNat&gt;, &lt;|w|&gt; */
/* round with minDist */

#PUSH, 1, 78 /* roundDist */
CALL[]

/* STACK: &lt;wNat&gt;, &lt;[w]&gt; */
/* inherit sign from wNat */

SWAP[]
#PUSH, 0
LT[]
IF[]
    NEG[]
EIF[]

/* STACK: &lt;[w]&gt; */

#PUSHON
#END
ENDF[]

FDEF[], 105

/* emulate MDRP[&lt;] instruction with rendering environment specific rounding

   CALL[], &lt;p&gt;, &lt;c&gt;, 105 */

#BEGIN
#PUSHOFF

/* STACK: &lt;p&gt;, &lt;c&gt; */

DUP[] /* c */
#PUSH, 3 /* p */
CINDEX[]
MD[O]
#PUSH, 2, 78 /* roundDist */
CALL[]

/* STACK: &lt;p&gt;, &lt;c&gt;, &lt;[dist]&gt; */

ROLL[]
SRP0[]
MSIRP[M]

#PUSHON
#END
ENDF[]

FDEF[], 106

/* emulate MDRP[&gt;] instruction with rendering environment specific rounding

   CALL[], &lt;p&gt;, &lt;c&gt;, 106 */

#BEGIN
#PUSHOFF

/* STACK: &lt;p&gt;, &lt;c&gt; */

DUP[] /* c */
#PUSH, 3 /* p */
CINDEX[]
MD[O]
#PUSH, 1, 78 /* roundDist */
CALL[]

/* STACK: &lt;p&gt;, &lt;c&gt;, &lt;[dist]&gt; */

ROLL[]
SRP0[]
MSIRP[M]

#PUSHON
#END
ENDF[]

FDEF[], 107

/* emulate MIRP[&lt;] instruction with rendering environment specific rounding

   CALL[], &lt;p&gt;, &lt;c&gt;, &lt;cvt&gt;, 107 */

#BEGIN
#PUSHOFF

/* STACK: &lt;p&gt;, &lt;c&gt;, &lt;cvt&gt; */

#PUSH, 3 /* p */
CINDEX[]
#PUSH, 3 /* c */
CINDEX[]
ROLL[] /* cvt */
#PUSH, 103 /* resActDist, cvt, noMinDist */
CALL[]

/* STACK: &lt;p&gt;, &lt;c&gt;, &lt;[dist]&gt; */

ROLL[]
SRP0[]
MSIRP[M]

#PUSHON
#END
ENDF[]

FDEF[], 108

/* emulate MIRP[&gt;] instruction with rendering environment specific rounding

   CALL[], &lt;p&gt;, &lt;c&gt;, &lt;cvt&gt;, 108 */

#BEGIN
#PUSHOFF

/* STACK: &lt;p&gt;, &lt;c&gt;, &lt;cvt&gt; */

#PUSH, 3 /* p */
CINDEX[]
#PUSH, 3 /* c */
CINDEX[]
ROLL[] /* cvt */
#PUSH, 104 /* resActDist, cvt, minDist */
CALL[]

/* STACK: &lt;p&gt;, &lt;c&gt;, &lt;[dist]&gt; */

ROLL[]
SRP0[]
MSIRP[M]

#PUSHON
#END
ENDF[]

FDEF[], 109

/* fn symmetrically constrains a stroke &lt;p&gt;, &lt;c&gt; with &lt;cvt&gt;

   CALL[], &lt;p&gt;, &lt;c&gt;, &lt;cvt&gt;, 109 */

#BEGIN
#PUSHOFF

/* STACK: &lt;p&gt;, &lt;c&gt;, &lt;cvt&gt; */
/* determine old median */

#PUSH, 3 /* &lt;p&gt; */
CINDEX[]
GC[N]
#PUSH, 3 /* &lt;c&gt; */
CINDEX[]
GC[N]
ADD[]

/* STACK: &lt;p&gt;, &lt;c&gt;, &lt;cvt&gt;, &lt;2*median&gt; */
/* lock parent */

#PUSH, 4 /* p */
CINDEX[]
MDAP[r]

/* STACK: &lt;p&gt;, &lt;c&gt;, &lt;cvt&gt;, &lt;2*median&gt; */
/* link child */

#PUSH, 4 /* p */
CINDEX[]
#PUSH, 4 /* c */
CINDEX[]
#PUSH, 4 /* cvt */
MINDEX[]
DUP[]
#PUSH, 0
LT[]
IF[]
    POP[]
    #PUSH, 106 /* resMIRP, noCvt, minDist */
ELSE[]
    #PUSH, 108 /* resMIRP, cvt, minDist */
EIF[]
CALL[]

/* STACK: &lt;p&gt;, &lt;c&gt;, &lt;2*median&gt; */
/* determine new median */

#PUSH, 3 /* &lt;p&gt; */
CINDEX[]
GC[N]
#PUSH, 3 /* &lt;c&gt; */
CINDEX[]
GC[N]
ADD[]

/* STACK: &lt;p&gt;, &lt;c&gt;, &lt;2*median&gt;, &lt;2*median'&gt; */

SUB[]
#PUSH, 128
DIV[] /* floor to 1/64 for now */

/* STACK: &lt;p&gt;, &lt;c&gt;, &lt;deltaMedian&gt; */

DUP[]
ROLL[]
DUP[]
SRP0[]
SWAP[]
MSIRP[m]
SWAP[]
DUP[]
SRP0[]
SWAP[]
MSIRP[m]

/* STACK: */

#PUSHON
#END
ENDF[]

FDEF[], 110

/* calculate offset for emulation of interpolation of median of
   &lt;c0&gt; and &lt;c1&gt; between parents &lt;p0&gt; and &lt;p1&gt; using current pv and fv

   CALL[], &lt;p0&gt;, &lt;c0&gt;, &lt;c1&gt;, &lt;p1&gt;, 110

   returns with offset on stack */

#BEGIN
#PUSHOFF

/* STACK: &lt;p0&gt;, &lt;c0&gt;, &lt;c1&gt;, &lt;p1&gt; */

#PUSH, 3 /* c0 */
CINDEX[]
GC[O]
#PUSH, 3 /* c1 */
CINDEX[]
GC[O]
ADD[]

/* STACK: &lt;p0&gt;, &lt;c0&gt;, &lt;c1&gt;, &lt;p1&gt;, &lt;c0 + c1&gt; */

#PUSH, 5 /* p0 */
CINDEX[]
GC[O]
#PUSH, 128
MUL[]
SUB[]

/* STACK: &lt;p0&gt;, &lt;c0&gt;, &lt;c1&gt;, &lt;p1&gt;, &lt;c0 + c1 - 2*p0&gt; */

#PUSH, 2 /* p1 */
CINDEX[]
#PUSH, 6 /* p0 */
CINDEX[]
MD[N]
MUL[]

/* STACK: &lt;p0&gt;, &lt;c0&gt;, &lt;c1&gt;, &lt;p1&gt;, &lt;(c0 + c1 - 2*p0)*(p1' - p0')&gt; */

SWAP[] /* p1 */
#PUSH, 5 /* p0 */
CINDEX[]
MD[O]
#PUSH, 128
MUL[]

/* prevent inadvertent divide-by-zero e.g. on non-spacing glyphs */
DUP[]
IF[]
    DIV[]
ELSE[]
    POP[]
EIF[]

/* STACK: &lt;p0&gt;, &lt;c0&gt;, &lt;c1&gt;, &lt;(c0 + c1 - 2*p0)*(p1' - p0')/(2*(p1 - p0))&gt; */

#PUSH, 4 /* p0 */
MINDEX[]
GC[N]
ADD[]

/* STACK: &lt;c0&gt;, &lt;c1&gt;, &lt;(c0'' + c1'')/2&gt; */

ROLL[] /* c0 */
GC[N]
ROLL[] /* c1 */
GC[N]
ADD[]
#PUSH, 32
MUL[]

/* STACK: &lt;(c0'' + c1'')/2&gt;, &lt;(c0' + c1')/2&gt; */

SUB[]

/* STACK: &lt;offset&gt; */

#PUSHON
#END
ENDF[]

FDEF[], 111

/* emulate interpolation of median of &lt;c0&gt; and &lt;c1&gt;
   between parents &lt;p0&gt; and &lt;p1&gt; using current pv and fv

   CALL[], &lt;p0&gt;, &lt;c0&gt;, &lt;c1&gt;, &lt;p1&gt;, 111 */

#BEGIN
#PUSHOFF

/* STACK: &lt;p0&gt;, &lt;c0&gt;, &lt;c1&gt;, &lt;p1&gt; */

#PUSH, 4 /* p0 */
MINDEX[]
#PUSH, 4 /* c0 */
CINDEX[]
#PUSH, 4 /* c1 */
CINDEX[]
#PUSH, 4 /* p1 */
MINDEX[]
#PUSH, 110 /* calc offset for interpolation of median */
CALL[]

/* STACK: &lt;c0&gt;, &lt;c1&gt;, &lt;offset&gt; */

DUP[]

/* STACK: &lt;c0&gt;, &lt;c1&gt;, &lt;offset&gt;, &lt;offset&gt; */

ROLL[]
DUP[]
SRP0[]
SWAP[]

/* STACK: &lt;c0&gt;, &lt;offset&gt;, &lt;c1&gt;, &lt;offset&gt; */

MSIRP[m]

SWAP[]
DUP[]
SRP0[]
SWAP[]

/* STACK: &lt;c0&gt;, &lt;offset&gt; */

MSIRP[m]

#PUSHON
#END
ENDF[]

FDEF[], 112


/* adjust (unrounded) stroke phase to target phase according to &lt;method&gt;

   method 0: round to nearest virtual pixel
   method 1: apply method 2 below 2 pixel wide strokes else method 0
   method 2: optimize for max #black pixels
   method 3: optimize for one edge aligned

   right?: boolean indicating a left (false) or right (true) stroke)

   CALL[], &lt;phase&gt;, &lt;weight&gt;, &lt;method&gt;, &lt;right?&gt;, 112

   returns with (rounded) adjusted phase on stack */

#BEGIN
#PUSHOFF

/* STACK: &lt;phase&gt;, &lt;weight&gt;, &lt;method&gt;, &lt;right?&gt; */

SWAP[]

DUP[]
#PUSH, 1
EQ[]
IF[]

    /* STACK: &lt;phase&gt;, &lt;weight&gt;, &lt;right?&gt;, &lt;method&gt; */
    /* replace method depending on stroke weight */

    POP[]
    #PUSH, 2 /* weight */
    CINDEX[]
    #PUSH, 2, 78 /* roundDist */
    CALL[]
    #PUSH, 128
    LT[]
    DUP[]
    ADD[]
EIF[]

DUP[]
ADD[]
ADD[]

/* STACK: &lt;phase&gt;, &lt;weight&gt;, &lt;method' = 2*method + right&gt; */

DUP[]
#PUSH, 1
LTEQ[]
IF[] /* just round to nearest virtual pixel */

    POP[]
    POP[]

    /* STACK: &lt;phase&gt; */

ELSE[]
    DUP[]
    #PUSH, 5
    LTEQ[]
    IF[] /* optimize for max #black pixels */

        POP[]

        /* STACK: &lt;phase&gt;, &lt;weight&gt; */

        DUP[]
        FLOOR[]
        SUB[]

        /* STACK: &lt;phase&gt;, &lt;fractWeight&gt; */

        #PUSH, 64
        SWAP[]
        SUB[]

        /* STACK: &lt;phase&gt;, &lt;1-fractWeight&gt; */

        #PUSH, 0, 3 /* phase */
        CINDEX[]
        LT[]
        #PUSH, 3 /* phase */
        CINDEX[]
        #PUSH, 3 /* 1-fractWeight */
        CINDEX[]
        LT[]
        AND[]
        IF[] /* if 0 &lt; phase &lt; 1-fractWeight then need to adjust phase */

            /* STACK: &lt;phase&gt;, &lt;1-fractWeight&gt; */

            DUP[]
            #PUSH, 3
            CINDEX[]
            SUB[]

            /* STACK: &lt;phase&gt;, &lt;1-fractWeight&gt;, &lt;1-fractWeight-phase&gt; */

            ROLL[]
            GTEQ[]
            IF[] /* error from phase to 1-fractWeight &gt;= error from 0 to phase */
                POP[]
                #PUSH, 0 /* target 0 as phase */
            EIF[]
            /* else target 1-fractWeight as phase, which is what's left on stack */

        ELSE[]

            /* STACK: &lt;phase&gt;, &lt;1-fractWeight&gt; */

            POP[]

        EIF[]

    ELSE[] /* optimize for one edge aligned */

        /* STACK: &lt;phase&gt;, &lt;weight&gt;, &lt;method'&gt; */

        #PUSH, 7
        EQ[]
        IF[] /* right flush */

            /* STACK: &lt;phase&gt;, &lt;weight&gt; */

            DUP[]
            FLOOR[]
            SUB[]

            /* STACK: &lt;phase&gt;, &lt;fractWeight&gt; */

            NEG[]
            SWAP[]
            POP[]

        ELSE[] /* left flush (and default) */

            /* STACK: &lt;phase&gt;, &lt;weight&gt; */

            POP[]
            POP[]
            #PUSH, 0

        EIF[]

    EIF[]

EIF[]

#PUSH, 2, 78 /* roundDist */
CALL[]

/* STACK: phase */

#PUSHON
#END
ENDF[]

FDEF[], 113

/* fn calculates delta phase for optimal position of
   stroke bordered by &lt;p&gt; and &lt;c&gt; according to &lt;method&gt;
   (see fn 112 for definition of method)

   CALL[], &lt;p&gt;, &lt;c&gt;, &lt;method&gt;, 113

   returns with delta phase in interval ]-½,+½] on stack */

#BEGIN
#PUSHOFF

/* STACK: &lt;p&gt;, &lt;c&gt;, &lt;method&gt; */

    /* use sequence of parameters &lt;p&gt; and &lt;c&gt; to determine if this is
       a "left" stroke (in which case we may add grey to the right), or
       a "right" stroke (in which case we may add grey to the left) */

#PUSH, 2 /* c */
CINDEX[]
#PUSH, 4 /* p */
CINDEX[]
MD[O]
#PUSH, 0
GTEQ[]
IF[]
    #PUSH, 0 /* "left" stroke */
ELSE[]
    ROLL[]
    ROLL[]
    SWAP[]
    ROLL[]
    #PUSH, 1 /* "right" stroke */
EIF[]

/* STACK: &lt;p&gt;, &lt;c&gt;, &lt;method&gt;, &lt;right?&gt; */

#PUSH, 4 /* p */
CINDEX[]
GC[N]
DUP[]
FLOOR[]
SUB[]
DUP[]

/* STACK: &lt;p&gt;, &lt;c&gt;, &lt;method&gt;, &lt;right?&gt;, &lt;source phase&gt;, &lt;source phase&gt; */

#PUSH, 5 /* c */
MINDEX[]
#PUSH, 6 /* p */
MINDEX[]
MD[N]

/* STACK: &lt;method&gt;, &lt;right?&gt;, &lt;source phase&gt;, &lt;source phase&gt;, &lt;weight&gt; */

#PUSH, 5 /* method */
MINDEX[]
#PUSH, 5 /* right? */
MINDEX[]
#PUSH, 112 /* adjust to target stroke phase */
CALL[]

/* STACK: &lt;source phase&gt;, &lt;target phase&gt; */

SWAP[]
SUB[]

/* STACK: &lt;delta phase&gt; */
/* minimze phase into interval ]-½,+½] */

NEG[]
#PUSH, 32
ADD[]
DUP[]
FLOOR[]
SUB[]
#PUSH, 32
SUB[]
NEG[]

#PUSHON
#END
ENDF[]

FDEF[], 114

/* emulate MIAP instruction with rendering environment specific rounding

   CALL[], &lt;c&gt;, &lt;cvt&gt;, 114 */

#BEGIN
#PUSHOFF

/* STACK: &lt;c&gt;, &lt;cvt&gt; */

#PUSH, 2 /* c */
CINDEX[]
GC[N]
DUP[]

/* STACK: &lt;c&gt;, &lt;cvt&gt;, &lt;wNat&gt;, &lt;wNat&gt; */

ROLL[]
DUP[]
#PUSH, 0
LT[]
IF[]

    /* STACK: &lt;c&gt;, &lt;wNat&gt;, &lt;wNat&gt;, &lt;cvt&gt; */

    POP[]

    /* cvt &lt; 0 (no cvt used) =&gt; w = wNat */
    /* STACK: &lt;c&gt;, &lt;wNat&gt;, &lt;w&gt; */

    #PUSH, 2, 78 /* roundDist */
    CALL[]

ELSE[]

    RCVT[]

    /* STACK: &lt;c&gt;, &lt;wNat&gt;, &lt;wNat&gt;, &lt;wCvt&gt; */
    /* no cvt cut-in test (for eventual support of automatic small caps, superiors, and inferiors), pop wNat to use wCvt */

    SWAP[]
    POP[]

    /* leave value as rounded by cpgm */
    /* STACK: &lt;c&gt;, &lt;wNat&gt;, &lt;w&gt; */

EIF[]

SUB[]
NEG[]

/* STACK: &lt;c&gt;, &lt;wDelta&gt; */

#PUSH, 2
CINDEX[]
SRP0[]

MSIRP[M]

#PUSHON
#END
ENDF[]

FDEF[], 115

/* interpolates a point &lt;p&gt; in &lt;dirFlag&gt; between points &lt;lsb&gt; and &lt;rsb&gt;
   dirFlag: postRoundFlag*8 + dir
   dir: X = 0, Y = 1, X/ = 2, Y/ = 3, ...

   depending on rendering environment and pv may optimise point position

   CALL[], &lt;dirFlag&gt;, &lt;p0&gt;, &lt;c&gt;, &lt;p1&gt;, 115 */

#BEGIN
#PUSHOFF

/* STACK: &lt;dirFlag&gt;, &lt;p0&gt;, &lt;p&gt;, &lt;p1&gt; */
/* separate postRoundFlag from dir */

#PUSH, 4 /* dirFlag */
MINDEX[]
DUP[]
#PUSH, 512
DIV[]
DUP[]
#PUSH, 512
MUL[]
ROLL[]
SWAP[]
SUB[]

/* STACK:, &lt;p0&gt;, &lt;p&gt;, &lt;p1&gt;, &lt;postRoundFlag&gt;, &lt;dir&gt; */

DUP[]
#PUSH, 93 /* setV */
ADD[]
CALL[]

/* STACK: &lt;p0&gt;, &lt;p&gt;, &lt;p1&gt;, &lt;postRoundFlag&gt;, &lt;dir&gt; */

#PUSH, 5 /* p0 */
CINDEX[]
SRP1[]
ROLL[] /* p1 */
SRP2[]
ROLL[] /* p */
DUP[]
IP[]

/* STACK: &lt;p0&gt;, &lt;postRoundFlag&gt;, &lt;dir&gt;, &lt;p&gt; */

ROLL[] /* postRoundFlag */
IF[]

    /* STACK: &lt;p0&gt;, &lt;dir&gt;, &lt;p&gt; */

    #PUSH, 93, 4096, 4 /* setV, 64, dir */
    MINDEX[]
    MUL[]
    ODD[]
    ADD[]
    CALL[]

    /* STACK: &lt;p0&gt;, &lt;p&gt; */

    SWAP[]
    POP[]
    DUP[] /* p */
    SRP0[]
    DUP[]
    GC[N]
    DUP[]
    #PUSH, 2, 78 /* roundDist */
    CALL[]
    SWAP[]
    SUB[]

    /* STACK: &lt;p&gt;, &lt;[p.c]-p.c&gt; */

ELSE[]

    /* STACK: &lt;p0&gt;, &lt;dir&gt;, &lt;p&gt; */

    SWAP[]
    POP[]

    /* STACK: &lt;p0&gt;, &lt;p&gt; */

    DUP[]
    ROLL[]
    DUP[] /* p0 */
    SRP0[]
    MD[N]

    #PUSH, 2, 78 /* roundDist */
    CALL[]

    /* STACK: &lt;p&gt;, &lt;[p.dist]&gt; */

EIF[]

MSIRP[M]

/* STACK: */

#PUSHON
#END
ENDF[]

FDEF[], 116

/* constrains a stroke in &lt;dir&gt;, defined by parent &lt;p&gt; and child &lt;c&gt;,
   and by cvt &lt;cvt&gt;, and interpolates it between points &lt;gp0&gt; and &lt;gp1&gt;
   dir: X = 0, Y = 1, X/ = 2
   sof: (stroke optimization flags ||, |&lt;, and &gt;| ) don't = 0, do = 1, leftBias = 2, rightBias = 3

   CALL[], &lt;dir&gt;, &lt;gp0&gt;, &lt;p&gt;, &lt;c&gt;, &lt;cvt&gt;, &lt;gp1&gt;, &lt;sof&gt;, 116 */

#BEGIN
#PUSHOFF

/* STACK: &lt;dir&gt;, &lt;gp0&gt;, &lt;p&gt;, &lt;c&gt;, &lt;cvt&gt;, &lt;gp1&gt;, &lt;sof&gt; */

#PUSH, 93, 4096, 9 /* setV, 64, dir */
CINDEX[]
MUL[]
ODD[]
ADD[]
CALL[]

/* constrain stroke */

#PUSH, 5 /* p */
CINDEX[]
#PUSH, 5 /* c */
CINDEX[]
#PUSH, 5 /* cvt */
MINDEX[]
#PUSH, 109 /* symDist */
CALL[]

/* STACK: &lt;dir&gt;, &lt;gp0&gt;, &lt;p&gt;, &lt;c&gt;, &lt;gp1&gt;, &lt;sof&gt; */

#PUSH, 93, 7 /* setV, dir */
CINDEX[]
ADD[]
CALL[]

#PUSH, 5 /* gp0 */
CINDEX[]
#PUSH, 5 /* p */
CINDEX[]
#PUSH, 5 /* c */
CINDEX[]
#PUSH, 5 /* gp1 */
CINDEX[]
#PUSH, 111 /* interpolate median */
CALL[]

/* STACK: &lt;dir&gt;, &lt;gp0&gt;, &lt;p&gt;, &lt;c&gt;, &lt;gp1&gt;, &lt;sof&gt; */

#PUSH, 93, 4096, 8 /* setV, 64, dir */
MINDEX[]
MUL[]
ODD[]
ADD[]
CALL[]

/* STACK: &lt;gp0&gt;, &lt;p&gt;, &lt;c&gt;, &lt;gp1&gt;, &lt;sof&gt; */

DUP[]
#PUSH, 0
GT[]
IF[] /* optimize stroke position */

    #PUSH, 80
    CALL[]

    /* STACK: &lt;gp0&gt;, &lt;p&gt;, &lt;c&gt;, &lt;gp1&gt;, &lt;sof&gt;, &lt;som&gt; */

    #PUSH, 5 /* p */
    CINDEX[]
    #PUSH, 5 /* c */
    CINDEX[]
    #PUSH, 7 /* p */
    CINDEX[]
    #PUSH, 7 /* c */
    CINDEX[]
    #PUSH, 5 /* som */
    CINDEX[]
    #PUSH, 113 /* get delta phase for optimal stroke position */
    CALL[]
    #PUSH, 2
    SLOOP[]
    SHPIX[]

    /* STACK: &lt;gp0&gt;, &lt;p&gt;, &lt;c&gt;, &lt;gp1&gt;, &lt;sof&gt;, &lt;som&gt; */

    #PUSH, 0
    GT[]
    #PUSH, 2 /* sof */
    CINDEX[]
    #PUSH, 1
    GT[]
    AND[]
    IF[]

        /* STACK: &lt;gp0&gt;, &lt;p&gt;, &lt;c&gt;, &lt;gp1&gt;, &lt;sof&gt; */
        /* determine total side-bearing space to see if we need to bias the black body */

        #PUSH, 4 /* p */
        CINDEX[]
        #PUSH, 6 /* gp0 */
        CINDEX[]
        MD[N]
        #PUSH, 3 /* gp1 */
        CINDEX[]
        #PUSH, 5 /* c */
        CINDEX[]
        MD[N]
        ADD[]
        DUP[]
        #PUSH, 64
        GT[]
        IF[]

            /* STACK: &lt;gp0&gt;, &lt;p&gt;, &lt;c&gt;, &lt;gp1&gt;, &lt;sof&gt;, &lt;totSBS&gt; */
            /* enough total side-bearing space left, leave it alone */
            POP[]

        ELSE[]

            /* STACK: &lt;gp0&gt;, &lt;p&gt;, &lt;c&gt;, &lt;gp1&gt;, &lt;sof&gt;, &lt;totSBS&gt; */
            /* 1 pixel or less total side-bearing space left */

            #PUSH, 0
            GT[]
            IF[]

                /* STACK: &lt;gp0&gt;, &lt;p&gt;, &lt;c&gt;, &lt;gp1&gt;, &lt;sof&gt; */
                /* any total side-bearing space left at all */

                DUP[]
                #PUSH, 2
                EQ[]
                IF[]

                    /* STACK: &lt;gp0&gt;, &lt;p&gt;, &lt;c&gt;, &lt;gp1&gt;, &lt;sof&gt; */
                    /* move stroke flush left */

                    #PUSH, 4 /* p */
                    CINDEX[]
                    #PUSH, 4 /* c */
                    CINDEX[]
                    #PUSH, 7 /* gp0 */
                    CINDEX[]
                    #PUSH, 7 /* p */
                    CINDEX[]
                    MD[N]
                    #PUSH, 2
                    SLOOP[]
                    SHPIX[]

                ELSE[]

                    /* STACK: &lt;gp0&gt;, &lt;p&gt;, &lt;c&gt;, &lt;gp1&gt;, &lt;sof&gt; */
                    /* move stroke flush left */

                    #PUSH, 4 /* p */
                    CINDEX[]
                    #PUSH, 4 /* c */
                    CINDEX[]
                    #PUSH, 4 /* gp1 */
                    CINDEX[]
                    #PUSH, 6 /* c */
                    CINDEX[]
                    MD[N]
                    #PUSH, 2
                    SLOOP[]
                    SHPIX[]

                EIF[]

            EIF[]

        EIF[]

    EIF[]

EIF[]

/* STACK: &lt;gp0&gt;, &lt;p&gt;, &lt;c&gt;, &lt;gp1&gt;, &lt;sof&gt; */

POP[]
POP[]
POP[]
POP[]
POP[]

/* STACK: */

#PUSHON
#END
ENDF[]

FDEF[], 117

/* fn tries to place and constrain two strokes &lt;p0,c0,cvt0&gt; and &lt;p1,c1,cvt1&gt;
   between grandparents &lt;gp0&gt; and &lt;gp1&gt; in direction &lt;dir&gt;
   dir: X = 0, Y = 1, X/ = 2
   X/ (italic) is not yet implemented; to do so properly will need to factor
   the italic phase optimization part out of fn 131 and make it available to
   this fn.   

   CALL[], &lt;dir&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;cvt0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;gp1&gt;, 117 */

#BEGIN
#PUSHOFF

/* STACK: &lt;dir&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;cvt0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;gp1&gt; */

#PUSH, 93, 4096, 11 /* setV, dir */
CINDEX[]
MUL[]
ODD[]
ADD[]
CALL[]

/* STACK: &lt;dir&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;cvt0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;gp1&gt; */
/* interpolate black body */

#PUSH, 7 /* p0 */
CINDEX[]
#PUSH, 7 /* c0 */
CINDEX[]
#PUSH, 6 /* p1 */
CINDEX[]
#PUSH, 6 /* c1 */
CINDEX[]
#PUSH, 12 /* gp0 */
CINDEX[]
#PUSH, 12 /* p0 */
CINDEX[]
#PUSH, 9 /* c1 */
CINDEX[]
#PUSH, 8 /* gp1 */
CINDEX[]
#PUSH, 110 /* calc offset for interpolation of median */
CALL[]
#PUSH, 4
SLOOP[]
SHPIX[]

/* STACK: &lt;dir&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;cvt0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;gp1&gt; */
/* constrain stroke0 */

#PUSH, 7 /* p0 */
CINDEX[]
#PUSH, 7 /* c0 */
CINDEX[]
#PUSH, 7 /* cvt0 */
MINDEX[]
#PUSH, 109 /* symDist */
CALL[]

/* STACK: &lt;dir&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;gp1&gt; */
/* constrain stroke1 */

#PUSH, 4 /* p1 */
CINDEX[]
#PUSH, 4 /* c1 */
CINDEX[]
#PUSH, 4 /* cvt1 */
MINDEX[]
#PUSH, 109 /* symDist */
CALL[]

/* STACK: &lt;dir&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;gp1&gt; */

#PUSH, 80
CALL[]

/* STACK: &lt;dir&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;gp1&gt;, &lt;som&gt; */
/* determine phase0 for optimal position of stroke0 */

#PUSH, 6 /* p0 */
CINDEX[]
#PUSH, 6 /* c0 */
CINDEX[]
#PUSH, 3 /* som */
CINDEX[]
#PUSH, 113 /* get delta phase for optimal stroke position */
CALL[]

/* STACK: &lt;dir&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;gp1&gt;, &lt;som&gt;, &lt;phase0&gt; */
/* forward to stroke1 position */

#PUSH, 5 /* p1 */
CINDEX[]
#PUSH, 5 /* c1 */
CINDEX[]
#PUSH, 3 /* phase0 */
CINDEX[]
#PUSH, 2
SLOOP[]
SHPIX[]

/* STACK: &lt;dir&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;gp1&gt;, &lt;som&gt;, &lt;phase0&gt; */
/* determine phase1 for optimal position of stroke1 */

DUP[]
#PUSH, 6 /* p1 */
CINDEX[]
#PUSH, 6 /* c1 */
CINDEX[]
#PUSH, 5 /* som */
CINDEX[]
#PUSH, 113 /* get delta phase for optimal stroke position */
CALL[]
ADD[]

/* STACK: &lt;dir&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;gp1&gt;, &lt;som&gt;, &lt;phase0&gt;, &lt;phase1&gt; */
/* undo forwarding to stroke1 position */

#PUSH, 6 /* p1 */
CINDEX[]
#PUSH, 6 /* c1 */
CINDEX[]
#PUSH, 4 /* phase0 */
CINDEX[]
NEG[]
#PUSH, 2
SLOOP[]
SHPIX[]

/* STACK: &lt;dir&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;gp1&gt;, &lt;som&gt;, &lt;phase0&gt;, &lt;phase1&gt; */
/* determine double average phase error */

#PUSH, 2 /* phase0 */
CINDEX[]
#PUSH, 2 /* phase1 */
CINDEX[]
ADD[]

/* STACK: &lt;dir&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;gp1&gt;, &lt;som&gt;, &lt;phase0&gt;, &lt;phase1&gt;, &lt;2*phaseError&gt; */

DUP[]
#PUSH, 64
GTEQ[]
IF[]

    /* STACK: &lt;dir&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;gp1&gt;, &lt;som&gt;, &lt;phase0&gt;, &lt;phase1&gt;, &lt;2*phaseError&gt; */
    /* double average phase error &gt;= 1 pixel, correct to the left */

    POP[]
    #PUSH, 64
    SUB[]
    SWAP[]
    #PUSH, 64
    SUB[]
    SWAP[]

ELSE[]

    /* STACK: &lt;dir&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;gp1&gt;, &lt;som&gt;, &lt;phase0&gt;, &lt;phase1&gt;, &lt;2*phaseError&gt; */

    #PUSH, -64
    LT[]
    IF[]

        /* STACK: &lt;dir&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;gp1&gt;, &lt;som&gt;, &lt;phase0&gt;, &lt;phase1&gt;, &lt;2*phaseError&gt; */
        /* double average phase error &lt; -1 pixel, correct to the right */

        #PUSH, 64
        ADD[]
        SWAP[]
        #PUSH, 64
        ADD[]
        SWAP[]

    EIF[]

EIF[]

/* STACK: &lt;dir&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;gp1&gt;, &lt;som&gt;, &lt;phase0&gt;, &lt;phase1&gt; */
/* apply corrected optimal phase0 to stroke0 */

#PUSH, 8 /* p0 */
CINDEX[]
#PUSH, 8 /* c0 */
CINDEX[]
#PUSH, 4 /* phase0 */
MINDEX[]
#PUSH, 2
SLOOP[]
SHPIX[]

/* STACK: &lt;dir&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;gp1&gt;, &lt;som&gt;, &lt;phase1&gt; */
/* apply corrected optimal phase1 to stroke1 */

#PUSH, 5 /* p1 */
CINDEX[]
#PUSH, 5 /* c1 */
CINDEX[]
ROLL[] /* phase1 */
#PUSH, 2
SLOOP[]
SHPIX[]

/* STACK: &lt;dir&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;gp1&gt;, &lt;som&gt; */

DUP[]
#PUSH, 0
GT[]
IF[]

    /* STACK: &lt;dir&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;gp1&gt;, &lt;som&gt; */
    /* determine total side-bearing space to see if we need to bias the black body */

    #PUSH, 6 /* p0 */
    CINDEX[]
    #PUSH, 8 /* gp0 */
    CINDEX[]
    MD[N]
    #PUSH, 3 /* gp1 */
    CINDEX[]
    #PUSH, 5 /* c1 */
    CINDEX[]
    MD[N]
    ADD[]
    DUP[]
    #PUSH, 64
    GT[]
    IF[]

        /* enough total side-bearing space left, leave it alone */
        POP[]

    ELSE[]

        /* 1 pixel or less total side-bearing space left */
        #PUSH, 0
        GT[]
        IF[]

            /* STACK: &lt;dir&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;gp1&gt;, &lt;som&gt; */
            /* any total side-bearing space left at all, move black-body flush left and start over */

            #PUSH, 6 /* p0 */
            CINDEX[]
            #PUSH, 6 /* c0 */
            CINDEX[]
            #PUSH, 6 /* p1 */
            CINDEX[]
            #PUSH, 6 /* c1 */
            CINDEX[]
            #PUSH, 11 /* gp0 */
            CINDEX[]
            #PUSH, 11 /* p0 */
            CINDEX[]
            MD[N]
            #PUSH, 4
            SLOOP[]
            SHPIX[]

            /* STACK: &lt;dir&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;gp1&gt;, &lt;som&gt; */
            /* optimize position of stroke0 forwarding phase0 to stroke1 */

            #PUSH, 6 /* p0 */
            CINDEX[]
            #PUSH, 6 /* c0 */
            CINDEX[]
            #PUSH, 6 /* p1 */
            CINDEX[]
            #PUSH, 6 /* c1 */
            CINDEX[]
            #PUSH, 10 /* p0 */
            CINDEX[]
            #PUSH, 10 /* c0 */
            CINDEX[]
            #PUSH, 7 /* som */
            CINDEX[]
            #PUSH, 113 /* get delta phase for optimal stroke position */
            CALL[]
            #PUSH, 4 /* apply to both strokes */
            SLOOP[]
            SHPIX[]

            /* STACK: &lt;dir&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;gp1&gt;, &lt;som&gt; */
            /* optimize position of stroke1 */

            #PUSH, 4 /* p1 */
            CINDEX[]
            #PUSH, 4 /* c1 */
            CINDEX[]
            #PUSH, 5 /* c1 */
            CINDEX[]
            #PUSH, 7 /* p1 */
            CINDEX[]
            #PUSH, 5 /* som */
            CINDEX[]
            #PUSH, 113 /* get delta phase for optimal stroke position */
            CALL[]
            #PUSH, 2 /* apply to second stroke only */
            SLOOP[]
            SHPIX[]

        ELSE[]

            /* STACK: &lt;dir&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;gp1&gt;, &lt;som&gt; */
            /* no total side-bearing space left, move stroke1 left by 1 pixel */

            #PUSH, 4 /* p1 */
            CINDEX[]
            #PUSH, 4 /* c1 */
            CINDEX[]
            #PUSH, -64, 2
            SLOOP[]
            SHPIX[]

        EIF[]

    EIF[]

EIF[]

/* STACK: &lt;dir&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;gp1&gt;, &lt;som&gt; */

POP[]
POP[]
POP[]
POP[]
POP[]
POP[]
POP[]
POP[]

#PUSHON
#END
ENDF[]

FDEF[], 118

/* fn to set pv perpendicular to p1 and c0' such that distance
   c0'&lt;---p0 measures cvt or natural distance if cvt = -1.
   used as support to ResX|YDDist and ResX|YDLink

   CALL[], &lt;p1&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;cvt&gt;, 118 */

#BEGIN
#PUSHOFF

/* STACK: &lt;p1&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;cvt&gt; */

#PUSH, 4 /* p1 */
CINDEX[]
#PUSH, 3 /* c0 */
CINDEX[]
SDPVTL[R]
#PUSH, 3 /* p0 */
CINDEX[]
#PUSH, 3 /* c0 */
CINDEX[]
ROLL[] /* cvt */
DUP[]
#PUSH, 0
LT[]
IF[]
    POP[]
    #PUSH, 101 /* resActDist, noCvt, noMinDist */
ELSE[]
    #PUSH, 104 /* resActDist, cvt, minDist */
EIF[]
CALL[]
ABS[]

/* STACK: &lt;p1&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;w&gt; */

#PUSH, 4 /* p1 */
CINDEX[]
#PUSH, 4 /* p0 */
CINDEX[]
SPVTL[r]
#PUSH, 4 /* p1 */
CINDEX[]
#PUSH, 4 /* p0 */
CINDEX[]
MD[N]

/* STACK: &lt;p1&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;w&gt;, &lt;d&gt; */
/* test if solution exists at all */

DUP[]
DUP[]
MUL[]
#PUSH, 3 /* w */
CINDEX[]
DUP[]
MUL[]
LTEQ[]
#PUSH, 0, 3 /* d */
CINDEX[]
EQ[]
OR[]

/* STACK: &lt;p1&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;w&gt;, &lt;d&gt;, &lt;d² &lt;= w² or d = 0?&gt; */

IF[]

    /* STACK: &lt;p1&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;w&gt;, &lt;d&gt; */
    /* solution doesn't exist, hence prepare to bail out */

    POP[]
    POP[]
    SWAP[]
    POP[]
    SPVTL[R]

ELSE[]

    /* STACK: &lt;p1&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;w&gt;, &lt;d&gt; */
    /* solution exists, hence continue computation */

    DUP[]
    MUL[]
    #PUSH, 2 /* w */
    CINDEX[]
    DUP[]
    MUL[]
    SUB[]
    DUP[]

    /* STACK: &lt;p1&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;w&gt;, &lt;d² - w²&gt;, &lt;d² - w²&gt; */

    #PUSH, 83 /* sqrt */
    CALL[]

    /* STACK: &lt;p1&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;w&gt;, &lt;d² - w²&gt;, &lt;sqrt(d² - w²)&gt; */

    ROLL[] /* w */
    MUL[]

    /* STACK: &lt;p1&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;d² - w² =: dx&gt;, &lt;w·sqrt(d² - w²) =: dy&gt; */

    #PUSH, 5 /* p1 */
    CINDEX[]
    #PUSH, 5 /* p0 */
    CINDEX[]
    SDPVTL[R]
    #PUSH, 4 /* p0 */
    CINDEX[]
    #PUSH, 4 /* c0 */
    MINDEX[]
    MD[O]

    #PUSH, 0
    LT[]
    IF[]
        NEG[] /* dy */
    EIF[]

    /* STACK: &lt;p1&gt;, &lt;p0&gt;, &lt;dx&gt;, &lt;dy&gt; */

    #PUSH, 4 /* p1 */
    MINDEX[]
    DUP[]
    SVTCA[X]
    GC[N]
    SWAP[]
    SVTCA[Y]
    GC[N]

    /* STACK: &lt;p0&gt;, &lt;dx&gt;, &lt;dy&gt;, &lt;p1.x&gt;, &lt;p1.y&gt; */

    #PUSH, 5 /* p0 */
    MINDEX[]
    DUP[]
    SVTCA[X]
    GC[N]
    SWAP[]
    SVTCA[Y]
    GC[N]

    /* STACK: &lt;dx&gt;, &lt;dy&gt;, &lt;p1.x&gt;, &lt;p1.y&gt;, &lt;p0.x&gt;, &lt;p0.y&gt; */

    #PUSH, 0 /* enter twilight zone */
    SZPS[]

    SVTCA[Y]
    #PUSH, 0
    SWAP[]
    SCFS[]
    SVTCA[X]
    #PUSH, 0
    SWAP[]
    SCFS[]

    /* STACK: &lt;dx&gt;, &lt;dy&gt;, &lt;p1.x&gt;, &lt;p1.y&gt; */

    SVTCA[Y]
    DUP[]
    #PUSH, 1
    SWAP[]
    SCFS[]
    #PUSH, 2
    SWAP[]
    SCFS[]
    SVTCA[X]
    DUP[]
    #PUSH, 1
    SWAP[]
    SCFS[]
    #PUSH, 2
    SWAP[]
    SCFS[]

    /* STACK: &lt;dx&gt;, &lt;dy&gt; */

    SWAP[]

    /* STACK: &lt;dy&gt;, &lt;dx&gt; */

    #PUSH, 2, 0, 1
    SFVTL[r]
    SWAP[]
    SHPIX[]

    /* STACK: &lt;dy&gt; */

    #PUSH, 2, 0, 1
    SFVTL[R]
    SWAP[]
    SHPIX[]

    /* STACK: */

    #PUSH, 2, 1
    SPVTL[R]

    #PUSH, 1 /* leave twilight zone */
    SZPS[]

EIF[]

#PUSHON
#END
ENDF[]

FDEF[], 119

/* align c with p unless fv is perpendicular to pv
   fv and pv assumed to be set prior to calling fn 119
   used as support to ResX|YDDist and ResX|YDLink

   CALL[], &lt;p&gt;, &lt;c&gt;, 119 */

#BEGIN
#PUSHOFF

/* STACK: &lt;p&gt;, &lt;c&gt; */

SWAP[]
SRP0[]

/* STACK: &lt;c&gt; */

GFV[]
GPV[]

/* STACK: &lt;c&gt;, &lt;fv.x&gt;, &lt;fv.y&gt;, &lt;pv.x&gt;, &lt;pv.y&gt; */

ROLL[]
MUL[]
SWAP[]
ROLL[]
MUL[]
ADD[]
ABS[]

/* STACK: &lt;c&gt;, &lt;|pv.y*fv.y + pv.x*fv.x|&gt; */

#PUSH, 16384, 1024
MUL[]

/* the above dot product multiplies two 2.14 numbers in 26.6 arithmetic yielding a 2.22 number (2^14 * 2^14 / 2^6 = 2^22)
   like the rasterizer, we're comparing this number to 1/16: |fv1·pv| &lt; 1/16 means fv1 is within ±arcsin(1/16) or ±3.5833° perpendicular to pv
   in 2.22 format 1/16 is 2^18, but since the assembler won't allow us to push 2^18 = 262144, we make up this number as a multiplication
   the multiplication, in turn, is again done in 26.6 format, hence we multiply 16384 with 1024 (2^14 * 2^10 / 2^6 = 2^18) */

LT[]
IF[]

    /* fv is approximately perpendicular to pv which by itself is perpendicular
       to a line from p to c' (with c' the twilight point 2 computed in fn 118),
       i.e. fv is approximately parallel to line from p to c'. Given the usage
       of fn 119 this means that fv is approximately coincident with said line,
       or c is approximately aligned already, hence simply touch the point, but
       without involving the pv */

    /* STACK: &lt;c&gt; */

    #PUSH, 0
    SHPIX[]

ELSE[]

    /* STACK: &lt;c&gt; */

    ALIGNRP[]

EIF[]

/* STACK: */

#PUSHON
#END
ENDF[]

FDEF[], 120

/* support to ResX|YDDist and ResX|YDLink where fv0 and fv1 are x or y

   CALL[], &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt0&gt;, &lt;cvt1&gt;, &lt;fv0&gt;, &lt;fv1&gt;, 120 */

#BEGIN
#PUSHOFF

/* STACK: &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt0&gt;, &lt;cvt1&gt;, &lt;fv0&gt;, &lt;fv1&gt; */

#PUSH, 6 /* p1 */
CINDEX[]
#PUSH, 9 /* p0 */
CINDEX[]
#PUSH, 9 /* c0 */
CINDEX[]
#PUSH, 7 /* cvt0 */
MINDEX[]
#PUSH, 118
CALL[]

/* STACK: &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;fv0&gt;, &lt;fv1&gt; */

SWAP[]
#PUSH, 0 /* x? */
EQ[]
IF[]
  SFVTCA[X]
ELSE[]
  SFVTCA[Y]
EIF[]

/* STACK: &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;fv1&gt; */

#PUSH, 4 /* p1 */
CINDEX[]
#PUSH, 6 /* c0 */
MINDEX[]
#PUSH, 119
CALL[]

/* STACK: &lt;p0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;fv1&gt; */

#PUSH, 5 /* p0 */
CINDEX[]
#PUSH, 5 /* p1 */
MINDEX[]
#PUSH, 5 /* c1 */
CINDEX[]
#PUSH, 5 /* cvt1 */
MINDEX[]
#PUSH, 118
CALL[]

/* STACK: &lt;p0&gt;, &lt;c1&gt;, &lt;fv1&gt; */

#PUSH, 0 /* x? */
EQ[]
IF[]
  SFVTCA[X]
ELSE[]
  SFVTCA[Y]
EIF[]

/* STACK: &lt;p0&gt;, &lt;c1&gt; */

#PUSH, 119
CALL[]

/* STACK: */

#PUSHON
#END
ENDF[]

FDEF[], 121

/* support to ResX|YDDist and ResX|YDLink where fv0 is x or y while fv1 is to-line

   CALL[], &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt0&gt;, &lt;cvt1&gt;, &lt;fv0&gt;, &lt;fv1.p0&gt;, &lt;fv1.p1&gt;, 121 */

#BEGIN
#PUSHOFF

/* STACK: &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt0&gt;, &lt;cvt1&gt;, &lt;fv0&gt;, &lt;fv1.p0&gt;, &lt;fv1.p1&gt; */

#PUSH, 7 /* p1 */
CINDEX[]
#PUSH, 10 /* p0 */
CINDEX[]
#PUSH, 10 /* c0 */
CINDEX[]
#PUSH, 8 /* cvt0 */
MINDEX[]
#PUSH, 118
CALL[]

/* STACK: &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;fv0&gt;, &lt;fv1.p0&gt;, &lt;fv1.p1&gt; */

ROLL[]
#PUSH, 0 /* x? */
EQ[]
IF[]
  SFVTCA[X]
ELSE[]
  SFVTCA[Y]
EIF[]

/* STACK: &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;fv1.p0&gt;, &lt;fv1.p1&gt; */

#PUSH, 5 /* p1 */
CINDEX[]
#PUSH, 7 /* c0 */
MINDEX[]
#PUSH, 119
CALL[]

/* STACK: &lt;p0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;fv1.p0&gt;, &lt;fv1.p1&gt; */

#PUSH, 6 /* p0 */
CINDEX[]
#PUSH, 6 /* p1 */
MINDEX[]
#PUSH, 6 /* c1 */
CINDEX[]
#PUSH, 6 /* cvt1 */
MINDEX[]
#PUSH, 118
CALL[]

/* STACK: &lt;p0&gt;, &lt;c1&gt;, &lt;fv1.p0&gt;, &lt;fv1.p1&gt; */

SFVTL[r]

/* STACK: &lt;p0&gt;, &lt;c1&gt; */

#PUSH, 119
CALL[]

/* STACK: */

#PUSHON
#END
ENDF[]

FDEF[], 122

/* support to ResX|YDDist and ResX|YDLink where fv0 is to-line while fv1 is x or y

   CALL[], &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt0&gt;, &lt;cvt1&gt;, &lt;fv0.p0&gt;, &lt;fv0.p1&gt;, &lt;fv1&gt;, 122 */

#BEGIN
#PUSHOFF

/* STACK: &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt0&gt;, &lt;cvt1&gt;, &lt;fv0.p0&gt;, &lt;fv0.p1&gt;, &lt;fv1&gt; */

#PUSH, 7 /* p1 */
CINDEX[]
#PUSH, 10 /* p0 */
CINDEX[]
#PUSH, 10 /* c0 */
CINDEX[]
#PUSH, 8 /* cvt0 */
MINDEX[]
#PUSH, 118
CALL[]

/* STACK: &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;fv0.p0&gt;, &lt;fv0.p1&gt;, &lt;fv1&gt; */

ROLL[]
ROLL[]
SFVTL[r]

/* STACK: &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;fv1&gt; */

#PUSH, 4 /* p1 */
CINDEX[]
#PUSH, 6 /* c0 */
MINDEX[]
#PUSH, 119
CALL[]

/* STACK: &lt;p0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;fv1&gt; */

#PUSH, 5 /* p0 */
CINDEX[]
#PUSH, 5 /* p1 */
MINDEX[]
#PUSH, 5 /* c1 */
CINDEX[]
#PUSH, 5 /* cvt1 */
MINDEX[]
#PUSH, 118
CALL[]

/* STACK: &lt;p0&gt;, &lt;c1&gt;, &lt;fv1&gt; */

#PUSH, 0 /* x? */
EQ[]
IF[]
  SFVTCA[X]
ELSE[]
  SFVTCA[Y]
EIF[]

/* STACK: &lt;p0&gt;, &lt;c1&gt; */

#PUSH, 119
CALL[]

/* STACK: */

#PUSHON
#END
ENDF[]

FDEF[], 123

/* support to ResX|YDDist and ResX|YDLink where both fv0 and fv1 are to-line

   CALL[], &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt0&gt;, &lt;cvt1&gt;, &lt;fv0.p0&gt;, &lt;fv0.p1&gt;, &lt;fv1.p0&gt;, &lt;fv1.p1&gt;, 123 */

#BEGIN
#PUSHOFF

/* STACK: &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt0&gt;, &lt;cvt1&gt;, &lt;fv0.p0&gt;, &lt;fv0.p1&gt;, &lt;fv1.p0&gt;, &lt;fv1.p1&gt; */

#PUSH, 8 /* p1 */
CINDEX[]
#PUSH, 11 /* p0 */
CINDEX[]
#PUSH, 11 /* c0 */
CINDEX[]
#PUSH, 9 /* cvt0 */
MINDEX[]
#PUSH, 118
CALL[]

/* STACK: &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;fv0.p0&gt;, &lt;fv0.p1&gt;, &lt;fv1.p0&gt;, &lt;fv1.p1&gt; */

#PUSH, 4 /* fv0.p0 */
MINDEX[]
#PUSH, 4 /* fv0.p1 */
MINDEX[]
SFVTL[r]

/* STACK: &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;fv1.p0&gt;, &lt;fv1.p1&gt; */

#PUSH, 5 /* p1 */
CINDEX[]
#PUSH, 7 /* c0 */
MINDEX[]
#PUSH, 119
CALL[]

/* STACK: &lt;p0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;fv1.p0&gt;, &lt;fv1.p1&gt; */

#PUSH, 6 /* p0 */
CINDEX[]
#PUSH, 6 /* p1 */
MINDEX[]
#PUSH, 6 /* c1 */
CINDEX[]
#PUSH, 6 /* cvt1 */
MINDEX[]
#PUSH, 118
CALL[]

/* STACK: &lt;p0&gt;, &lt;c1&gt;, &lt;fv1.p0&gt;, &lt;fv1.p1&gt; */

SFVTL[r]

/* STACK: &lt;p0&gt;, &lt;c1&gt; */

#PUSH, 119
CALL[]

/* STACK: */

#PUSHON
#END
ENDF[]

FDEF[], 124

/* determine on which side of edge p0-&gt;p1 is c
   by calculating vector product (c - p0) ^ (p1 - p0)

   CALL[], &lt;p0&gt;, &lt;c&gt;, &lt;p1&gt;, 124

   returns with vector product on stack
   if vector product &lt; 0 then c is on the left of p0-&gt;p1
   if vector product &gt; 0 then c is on the right of p0-&gt;p1
   else c is exactly on p0-&gt;p1 */

#BEGIN
#PUSHOFF

/* STACK: &lt;p0&gt;, &lt;c&gt;, &lt;p1&gt; */

SPVTCA[X]
#PUSH, 3 /* p0 */
CINDEX[]
#PUSH, 3 /* c */
CINDEX[]
MD[O]
#PUSH, 4 /* p0 */
CINDEX[]
#PUSH, 3 /* p1 */
CINDEX[]
MD[O]

/* STACK: &lt;p0&gt;, &lt;c&gt;, &lt;p1&gt;, &lt;a.x&gt;, &lt;b.x&gt; */

SPVTCA[Y]
#PUSH, 5 /* p0 */
CINDEX[]
#PUSH, 5 /* c */
MINDEX[]
MD[O]
#PUSH, 5 /* p0 */
MINDEX[]
#PUSH, 5 /* p1 */
MINDEX[]
MD[O]

/* STACK: &lt;a.x&gt;, &lt;b.x&gt;, &lt;a.y&gt;, &lt;b.y&gt; */

#PUSH, 4 /* a.x */
MINDEX[]
MUL[]

ROLL[] /* b.x */
ROLL[] /* a.y */
MUL[]

SUB[]

/* STACK: &lt;b.y*a.x - b.x*a.y&gt; */

#PUSHON
#END
ENDF[]

FDEF[], 125

/* fn interpolates a pair of diagonal links between grand-parents gp0 and gp1 along pv
   pv: X = 0, Y = 1, X/ = 2; fv0 and fv1: x and y components in 2.14

   CALL[], &lt;pv&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;cvt0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;gp1&gt;, &lt;fv0.x&gt;, &lt;fv0.y&gt;, &lt;fv1.x&gt;, fv1.y&gt;, 125 */

#BEGIN
#PUSHOFF

/* interpolate parents between grand-parents along pv */
/* STACK: &lt;pv&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;cvt0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;gp1&gt;, &lt;fv0.x&gt;, &lt;fv0.y&gt;, &lt;fv1.x&gt;, fv1.y&gt; */

#PUSH, 93, 14 /* pv */
CINDEX[]
ADD[]
CALL[]

#PUSH, 12 /* gp0 */
MINDEX[]
SRP1[]
#PUSH, 5 /* gp1 */
MINDEX[]
SRP2[]

#PUSH, 10 /* p0 */
CINDEX[]
IP[]
#PUSH, 7 /* p1 */
CINDEX[]
IP[]

/* determine if this is a crisscrossed stroke */
/* STACK: &lt;pv&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;cvt0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;fv0.x&gt;, &lt;fv0.y&gt;, &lt;fv1.x&gt;, fv1.y&gt; */

#PUSH, 10 /* p0 */
CINDEX[]
#PUSH, 10 /* c0 */
CINDEX[]
#PUSH, 9 /* p1 */
CINDEX[]
#PUSH, 124 /* c0 on which side of edge p0-&gt;p1? */
CALL[]
#PUSH, 0
LT[]

#PUSH, 11 /* p0 */
CINDEX[]
#PUSH, 8 /* c1 */
CINDEX[]
#PUSH, 10 /* p1 */
CINDEX[]
#PUSH, 124 /* c1 on which side of edge p0-&gt;p1? */
CALL[]
#PUSH, 0
LT[]

EQ[]
IF[]

    /* both childern on same side of parent edge p0&gt;-&gt;p1
       hence re-align children with parents perp to dpv. */
    /* STACK: &lt;pv&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;cvt0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;fv0.x&gt;, &lt;fv0.y&gt;, &lt;fv1.x&gt;, fv1.y&gt; */

    #PUSH, 7 /* p1 */
    CINDEX[]
    #PUSH, 11 /* p0 */
    CINDEX[]
    SDPVTL[R]

    #PUSH, 4 /* fv0.x */
    CINDEX[]
    #PUSH, 4 /* fv0.y */
    CINDEX[]
    SFVFS[]

    #PUSH, 10 /* p0 */
    CINDEX[]
    SRP0[]
    #PUSH, 9 /* c0 */
    CINDEX[]
    MDRP[m&lt;rBl]

    #PUSH, 2 /* fv1.x */
    CINDEX[]
    #PUSH, 2 /* fv1.y */
    CINDEX[]
    SFVFS[]

    #PUSH, 7 /* p1 */
    CINDEX[]
    SRP0[]
    #PUSH, 6 /* c1 */
    CINDEX[]
    MDRP[m&lt;rBl]

ELSE[]

    /* childern on opposite sides of "parent edge" p0&gt;-&gt;p1
       hence re-align children with parents per method for crisscrossed strokes */
    /* STACK: &lt;pv&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;cvt0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;fv0.x&gt;, &lt;fv0.y&gt;, &lt;fv1.x&gt;, fv1.y&gt; */

    #PUSH, 7 /* p1 */
    CINDEX[]
    #PUSH, 11 /* p0 */
    CINDEX[]
    #PUSH, 11 /* c0 */
    CINDEX[]
    #PUSH, -1, 118 /* no cvt0, no minDist */
    CALL[]

    /* STACK: &lt;pv&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;cvt0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;fv0.x&gt;, &lt;fv0.y&gt;, &lt;fv1.x&gt;, fv1.y&gt; */

    #PUSH, 4 /* fv0.x */
    CINDEX[]
    #PUSH, 4 /* fv0.y */
    CINDEX[]
    SFVFS[]

    /* STACK: &lt;pv&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;cvt0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;fv0.x&gt;, &lt;fv0.y&gt;, &lt;fv1.x&gt;, fv1.y&gt; */

    #PUSH, 7 /* p1 */
    CINDEX[]
    #PUSH, 10 /* c0 */
    CINDEX[]
    #PUSH, 119
    CALL[]

    /* STACK: &lt;pv&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;cvt0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;fv0.x&gt;, &lt;fv0.y&gt;, &lt;fv1.x&gt;, fv1.y&gt; */

    #PUSH, 10 /* p0 */
    CINDEX[]
    #PUSH, 8 /* p1 */
    CINDEX[]
    #PUSH, 8 /* c1 */
    CINDEX[]
    #PUSH, -1, 118 /* no cvt1, no minDist */
    CALL[]

    /* STACK: &lt;pv&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;cvt0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;fv0.x&gt;, &lt;fv0.y&gt;, &lt;fv1.x&gt;, fv1.y&gt; */

    #PUSH, 2 /* fv1.x */
    CINDEX[]
    #PUSH, 2 /* fv1.y */
    CINDEX[]
    SFVFS[]

    /* STACK: &lt;p0&gt;, &lt;c1&gt; */

    #PUSH, 10 /* p0 */
    CINDEX[]
    #PUSH, 7 /* c1 */
    CINDEX[]
    #PUSH, 119
    CALL[]

EIF[]

/* determine pre-link medians, measuring perpendicularly to p0-&gt;p1 */
/* STACK: &lt;pv&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;cvt0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;fv0.x&gt;, &lt;fv0.y&gt;, &lt;fv1.x&gt;, fv1.y&gt; */

#PUSH, 10 /* p0 */
CINDEX[]
GC[N]
#PUSH, 10 /* c0 */
CINDEX[]
GC[N]
ADD[]

#PUSH, 8 /* p1 */
CINDEX[]
GC[N]
#PUSH, 8 /* c1 */
CINDEX[]
GC[N]
ADD[]

/* links */
/* STACK: &lt;pv&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;cvt0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;fv0.x&gt;, &lt;fv0.y&gt;, &lt;fv1.x&gt;, fv1.y&gt;, &lt;median0&gt;, &lt;median1&gt; */

#PUSH, 6 /* fv0.x */
CINDEX[]
#PUSH, 6 /* fv0.y */
CINDEX[]
SFVFS[]

#PUSH, 12 /* p0 */
CINDEX[]
#PUSH, 12 /* c0 */
CINDEX[]
#PUSH, 12 /* cvt0 */
MINDEX[]
DUP[]
#PUSH, 0
LT[]
IF[]
    POP[]
    #PUSH, 106 /* resMIRP, noCvt, minDist */
ELSE[]
    #PUSH, 108 /* resMIRP, cvt, minDist */
EIF[]
CALL[]

/* STACK: &lt;pv&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;fv0.x&gt;, &lt;fv0.y&gt;, &lt;fv1.x&gt;, fv1.y&gt;, &lt;median0&gt;, &lt;median1&gt; */

#PUSH, 4 /* fv1.x */
CINDEX[]
#PUSH, 4 /* fv1.y */
CINDEX[]
SFVFS[]

#PUSH, 9 /* p1 */
CINDEX[]
#PUSH, 9 /* c1 */
CINDEX[]
#PUSH, 9 /* cvt1 */
MINDEX[]
DUP[]
#PUSH, 0
LT[]
IF[]
    POP[]
    #PUSH, 106 /* resMIRP, noCvt, minDist */
ELSE[]
    #PUSH, 108 /* resMIRP, cvt, minDist */
EIF[]
CALL[]

/* subtract post-link medians from pre-link ones */
/* STACK: &lt;pv&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;fv0.x&gt;, &lt;fv0.y&gt;, &lt;fv1.x&gt;, fv1.y&gt;, &lt;median0&gt;, &lt;median1&gt; */

SWAP[]

#PUSH, 10 /* p0 */
CINDEX[]
GC[N]
#PUSH, 10 /* c0 */
CINDEX[]
GC[N]
ADD[]

SUB[]
#PUSH, 32
MUL[]

SWAP[]

#PUSH, 8 /* p1 */
CINDEX[]
GC[N]
#PUSH, 8 /* c1 */
CINDEX[]
GC[N]
ADD[]

SUB[]
#PUSH, 32
MUL[]

/* finally move points by respective deltas */
/* STACK: &lt;pv&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;fv0.x&gt;, &lt;fv0.y&gt;, &lt;fv1.x&gt;, fv1.y&gt;, &lt;delta0&gt;, &lt;delta1&gt; */

#PUSH, 1, 12 /* pv */
CINDEX[]
EQ[]
IF[]
    SFVTCA[Y]
ELSE[]
    SFVTCA[X]
EIF[]

#PUSH, 10 /* p0 */
MINDEX[]
DUP[]
SRP0[]
#PUSH, 3 /* delta0 */
CINDEX[]
MSIRP[m]

#PUSH, 6 /* fv0.x */
MINDEX[]
#PUSH, 6 /* fv0.y */
MINDEX[]
SFVFS[]

#PUSH, 7 /* c0 */
MINDEX[]
DUP[]
SRP0[]
ROLL[] /* delta0 */
MSIRP[m]

/* STACK: &lt;pv&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;fv1.x&gt;, fv1.y&gt;, &lt;delta1&gt; */

#PUSH, 1, 7 /* pv */
MINDEX[]
EQ[]
IF[]
    SFVTCA[Y]
ELSE[]
    SFVTCA[X]
EIF[]

#PUSH, 5 /* p1 */
MINDEX[]
DUP[]
SRP0[]
#PUSH, 2 /* delta1 */
CINDEX[]
MSIRP[m]

ROLL[] /* fv0.x */
ROLL[] /* fv0.y */
SFVFS[]

SWAP[] /* c1 */
DUP[]
SRP0[]
SWAP[] /* delta1 */
MSIRP[m]

/* STACK: */

#PUSHON
#END
ENDF[]

FDEF[], 126

/* glue code to fn 125 where both fv0 and fv1 are x or y

   CALL[], &lt;pv&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;cvt0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;gp1&gt;, &lt;fv0&gt;, &lt;fv1&gt;, 126 */

#BEGIN
#PUSHOFF

/* STACK: &lt;pv&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;cvt0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;gp1&gt;, &lt;fv0&gt;, &lt;fv1&gt; */

SWAP[] /* fv0 */
#PUSH, 1
EQ[]
IF[]
    #PUSH, 0, 16384
ELSE[]
    #PUSH, 16384, 0
EIF[]

ROLL[] /* fv1 */
#PUSH, 1
EQ[]
IF[]
    #PUSH, 0, 16384
ELSE[]
    #PUSH, 16384, 0
EIF[]

#PUSH, 125 /* resIPDDLink */
CALL[]

#PUSHON
#END
ENDF[]

FDEF[], 127

/* glue code to fn 125 where fv0 is to line and fv1 is x or y

   CALL[], &lt;pv&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;cvt0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;gp1&gt;, &lt;fv0.0&gt;, &lt;fv0.1&gt;, &lt;fv1&gt;, 127 */

#BEGIN
#PUSHOFF

/* STACK: &lt;pv&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;cvt0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;gp1&gt;, &lt;fv0.0&gt;, &lt;fv0.1&gt;, &lt;fv1&gt; */

ROLL[] /* fv0.0 */
ROLL[] /* fv0.1 */
SFVTL[r]
GFV[]

ROLL[] /* fv1 */
#PUSH, 1
EQ[]
IF[]
    #PUSH, 0, 16384
ELSE[]
    #PUSH, 16384, 0
EIF[]

#PUSH, 125 /* resIPDDLink */
CALL[]

#PUSHON
#END
ENDF[]

FDEF[], 128

/* glue code to fn 125 where fv0 is x or y and fv1 is to line

   CALL[], &lt;pv&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;cvt0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;gp1&gt;, &lt;fv0&gt;, &lt;fv1.0&gt;, &lt;fv1.1&gt;, 128 */

#BEGIN
#PUSHOFF

/* STACK: &lt;pv&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;cvt0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;gp1&gt;, &lt;fv0&gt;, &lt;fv1.0&gt;, &lt;fv1.1&gt; */

SFVTL[r]

#PUSH, 1
EQ[]
IF[]
    #PUSH, 0, 16384
ELSE[]
    #PUSH, 16384, 0
EIF[]

GFV[]

#PUSH, 125 /* resIPDDLink */
CALL[]

#PUSHON
#END
ENDF[]

FDEF[], 129

/* glue code to fn 125 where both fv0 and fv1 are to line

   CALL[], &lt;pv&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;cvt0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;gp1&gt;, &lt;fv0.0&gt;, &lt;fv0.1&gt;, &lt;fv1.0&gt;, &lt;fv1.1&gt;, 129 */

#BEGIN
#PUSHOFF

/* STACK: &lt;pv&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;cvt0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;gp1&gt;, &lt;fv0.0&gt;, &lt;fv0.1&gt;, &lt;fv1.0&gt;, &lt;fv1.1&gt; */

#PUSH, 4 /* fv0.0 */
MINDEX[]
#PUSH, 4 /* fv0.1 */
MINDEX[]
SFVTL[r]
GFV[]
#PUSH, 4 /* fv1.0 */
MINDEX[]
#PUSH, 4 /* fv1.1 */
MINDEX[]
SFVTL[r]
GFV[]
#PUSH, 125 /* resIPDDLink */
CALL[]

#PUSHON
#END
ENDF[]

FDEF[], 130

/* extrapolate x-coordinate of &lt;p&gt; to base line along italic angle
   returns with extrapolated x-coordinate on stack

   CALL[], &lt;p&gt;, 130 */

#BEGIN
#PUSHOFF

DUP[]
SVTCA[X]
GC[N]
SWAP[]
SVTCA[Y]
GC[N]

/* STACK: &lt;p.x&gt;, &lt;p.y&gt; */

#PUSH, 10 /* rise */
RS[]
#PUSH, 11 /* run */
RS[]

/* STACK: &lt;p.x&gt;, &lt;p.y&gt;, &lt;rise&gt;, &lt;run&gt; */

ROLL[]
MUL[]
SWAP[]
DIV[]
SUB[]

/* STACK: &lt;p.x - p.y*run/rise&gt; */

#PUSHON
#END
ENDF[]

FDEF[], 131

/* constrains an italic stroke, defined by parents &lt;p0&gt; and &lt;p1&gt;, by
   children &lt;c0&gt; and &lt;c1&gt;, and by cvts &lt;cvt0&gt; and &lt;cvt1&gt;, and inter-
   polates it between points &lt;lsb&gt; and &lt;rsb&gt;

   for b&amp;w stroke additionally optimizes the resulting pixel pattern

   CALL[], &lt;lsb&gt;, &lt;rsb&gt;, &lt;p0&gt;, &lt;p1&gt;, &lt;c0&gt;, &lt;c1&gt;, &lt;cvt0&gt;, &lt;cvt1&gt;, 131 */

#BEGIN
#PUSHOFF

/* STACK: &lt;lsb&gt;, &lt;rsb&gt;, &lt;p0&gt;, &lt;p1&gt;, &lt;c0&gt;, &lt;c1&gt;, &lt;cvt0&gt;, &lt;cvt1&gt; */

#PUSH, 9 /* pv perp italic, fv X */
CALL[]

/* lock parent edge */

#PUSH, 6 /* p0 */
CINDEX[]
MDAP[r]

#PUSH, 5 /* p1 */
CINDEX[]
RDTG[]
MDRP[m&lt;RBl]

/* link child edge */

#PUSH, 6 /* p0 */
CINDEX[]
#PUSH, 5 /* c0 */
CINDEX[]
#PUSH, 4 /* cvt0 */
CINDEX[]
DUP[]
#PUSH, 0
LT[]
IF[]
    POP[]
    #PUSH, 106 /* resMIRP, noCvt, minDist */
ELSE[]
    #PUSH, 108 /* resMIRP, cvt, minDist */
EIF[]
CALL[]

#PUSH, 5 /* p1 */
CINDEX[]
#PUSH, 4 /* c1 */
CINDEX[]
#PUSH, 3 /* cvt1 */
CINDEX[]
DUP[]
#PUSH, 0
LT[]
IF[]
    POP[]
    #PUSH, 106 /* resMIRP, noCvt, minDist */
ELSE[]
    #PUSH, 108 /* resMIRP, cvt, minDist */
EIF[]
CALL[]

RTG[]

/* STACK: &lt;lsb&gt;, &lt;rsb&gt;, &lt;p0&gt;, &lt;p1&gt;, &lt;c0&gt;, &lt;c1&gt;, &lt;cvt0&gt;, &lt;cvt1&gt; */
/* interpolate median of p0 and c0 between lsb and rsb */

#PUSH, 8 /* lsb */
CINDEX[]
#PUSH, 7 /* p0 */
CINDEX[]
#PUSH, 6 /* c0 */
CINDEX[]
#PUSH, 10 /* rsb */
CINDEX[]
#PUSH, 111 /* interpolate median */
CALL[]

/* STACK: &lt;lsb&gt;, &lt;rsb&gt;, &lt;p0&gt;, &lt;p1&gt;, &lt;c0&gt;, &lt;c1&gt;, &lt;cvt0&gt;, &lt;cvt1&gt; */
/* if the two actual parent-&gt;child distances round to the same stroke weight */

#PUSH, 6 /* p0 */
CINDEX[]
#PUSH, 5 /* c0 */
CINDEX[]
#PUSH, 4 /* cvt0 */
MINDEX[]
DUP[]
#PUSH, 0
LT[]
IF[]
    POP[]
    #PUSH, 102 /* resActDist, noCvt, minDist */
ELSE[]
    #PUSH, 104 /* resActDist, cvt, minDist */
EIF[]
CALL[]

/* STACK: &lt;lsb&gt;, &lt;rsb&gt;, &lt;p0&gt;, &lt;p1&gt;, &lt;c0&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;[dist0]&gt; */

#PUSH, 5 /* p1 */
CINDEX[]
#PUSH, 4 /* c1 */
CINDEX[]
#PUSH, 4 /* cvt1 */
MINDEX[]
DUP[]
#PUSH, 0
LT[]
IF[]
    POP[]
    #PUSH, 102 /* resActDist, noCvt, minDist */
ELSE[]
    #PUSH, 104 /* resActDist, cvt, minDist */
EIF[]
CALL[]

/* STACK: &lt;lsb&gt;, &lt;rsb&gt;, &lt;p0&gt;, &lt;p1&gt;, &lt;c0&gt;, &lt;c1&gt;, &lt;[dist0]&gt;, &lt;[dist1]&gt; */

EQ[]
IF[]

    /* STACK: &lt;lsb&gt;, &lt;rsb&gt;, &lt;p0&gt;, &lt;p1&gt;, &lt;c0&gt;, &lt;c1&gt; */
    /* adjust median of p1 and c1 in parallel */

    RDTG[]
    #PUSH, 4 /* p0 */
    CINDEX[]
    SRP0[]
    #PUSH, 3 /* p1 */
    CINDEX[]
    MDRP[m&lt;RBl]

    #PUSH, 2 /* c0 */
    CINDEX[]
    SRP0[]
    #PUSH, 1 /* c1 */
    CINDEX[]
    MDRP[m&lt;RBl]

    #PUSH, 5 /* rsb */
    MINDEX[]
    POP[]
    #PUSH, 5 /* lsb */
    MINDEX[]
    POP[]

    /* STACK: &lt;p0&gt;, &lt;p1&gt;, &lt;c0&gt;, &lt;c1&gt; */

ELSE[]

    /* STACK: &lt;lsb&gt;, &lt;rsb&gt;, &lt;p0&gt;, &lt;p1&gt;, &lt;c0&gt;, &lt;c1&gt; */
    /* interpolate median of p1 and c1 between lsb and rsb independently */

    #PUSH, 6 /* lsb */
    MINDEX[]
    #PUSH, 4 /* p1 */
    CINDEX[]
    #PUSH, 3 /* c1 */
    CINDEX[]
    #PUSH, 8 /* rsb */
    MINDEX[]
    #PUSH, 111 /* interpolate median */
    CALL[]

    /* STACK: &lt;p0&gt;, &lt;p1&gt;, &lt;c0&gt;, &lt;c1&gt; */

EIF[]

/* STACK: &lt;p0&gt;, &lt;p1&gt;, &lt;c0&gt;, &lt;c1&gt; */
/* for b&amp;w only optimize pixel pattern */

#PUSH, 0, 2
RS[]
EQ[]
IF[]

    /* STACK: &lt;p0&gt;, &lt;p1&gt;, &lt;c0&gt;, &lt;c1&gt; */
    /* extrapolate c0 to base line */

    RDTG[]
    #PUSH, 2 /* c0 */
    CINDEX[]
    #PUSH, 130
    CALL[]

    /* extrapolate p0 to base line */

    #PUSH, 5 /* p0 */
    CINDEX[]
    #PUSH, 130
    CALL[]

    /* get parentPhase from extrapolated x-coordinate */

    DUP[]
    DUP[]
    ROUND[Bl]
    SUB[]

    #PUSH, 4 /* targetPhase */
    RS[]

    /* STACK: &lt;p0&gt;, &lt;p1&gt;, &lt;c0&gt;, &lt;c1&gt;, &lt;c0.x'&gt;, &lt;p0.x'&gt;, &lt;parentPhase&gt;, &lt;targetPhase&gt; */
    /* shifting parent edge by deltaPhase optimizes stepping pattern on parent edge */

    SVTCA[X]
    SWAP[]
    SUB[]

    /* STACK: &lt;p0&gt;, &lt;p1&gt;, &lt;c0&gt;, &lt;c1&gt;, &lt;c0.x'&gt;, &lt;p0.x'&gt;, &lt;deltaPhase&gt; */
    /* minimize the positioning error by mapping deltaPhase from [-63,63] to [-32,31] */

    #PUSH, 96
    ADD[]
    DUP[]
    ROUND[Bl]
    SUB[]
    #PUSH, 32
    SUB[]

    /* STACK: &lt;p0&gt;, &lt;p1&gt;, &lt;c0&gt;, &lt;c1&gt;, &lt;c0.x'&gt;, &lt;p0.x'&gt;, &lt;deltaPhase&gt; */
    /* save minimized deltaPhase for child edge and shift parent edge */

    DUP[]
    #PUSH, 8 /* p0 */
    MINDEX[]
    #PUSH, 8 /* p1 */
    MINDEX[]
    ROLL[]
    #PUSH, 2
    SLOOP[]
    SHPIX[]

    /* STACK: &lt;c0&gt;, &lt;c1&gt;, &lt;c0.x'&gt;, &lt;p0.x'&gt;, &lt;deltaPhase&gt; */
    /* since child edge is linked perpendicular to italic angle,
       the resulting stroke would include unnecessary pixels,
       hence determine phase of distance between extrapolated
       x-coordinates (deltaDeltaPhase) */

    ROLL[]
    ROLL[]
    SUB[]
    DUP[]
    ROUND[Bl]
    SUB[]

    /* STACK: &lt;c0&gt;, &lt;c1&gt;, &lt;deltaPhase&gt;, &lt;deltaDeltaPhase&gt; */
    /* subtract from deltaPhase (don't shift quite as far...) */

    SUB[]

    /* STACK: &lt;c0&gt;, &lt;c1&gt;, &lt;deltaPhase'&gt; */
    /* shift parent edge */

    #PUSH, 2
    SLOOP[]
    SHPIX[]

    /* STACK: */

ELSE[]

    /* STACK: &lt;p0&gt;, &lt;p1&gt;, &lt;c0&gt;, &lt;c1&gt; */

    POP[]
    POP[]
    POP[]
    POP[]

    /* STACK: */

EIF[]

RTG[]

#PUSHON
#END
ENDF[]

FDEF[], 132

/* for monochrome only: stack points &lt;p&gt; through &lt;c&gt; on top of &lt;p&gt; below &lt;ppem&gt;

   CALL[], &lt;p&gt;, &lt;c&gt;, &lt;ppem&gt;, 132 */

#BEGIN
#PUSHOFF

/* STACK: &lt;p&gt;, &lt;c&gt;, &lt;ppem&gt; */

MPPEM[]
GT[]
#PUSH, 1, 2
RS[]
GTEQ[]
AND[]
IF[]

    /* STACK: &lt;p&gt;, &lt;c&gt; */

    SWAP[]
    SRP0[]
    DUP[]
    SVTCA[X]
    ALIGNRP[]
    SVTCA[Y]
    ALIGNRP[]

ELSE[]

    /* STACK: &lt;p&gt;, &lt;c&gt; */

    POP[]
    POP[]
EIF[]

#PUSHON
#END
ENDF[]

FDEF[], 133

/* support fn for fns 134 and 135

   CALL[], &lt;align?&gt;, &lt;from&gt;, &lt;to&gt;, 133 */

#BEGIN
#PUSHOFF

SWAP[]

/* STACK: &lt;align?&gt;, &lt;to&gt;, &lt;from&gt; */

#WBeginLoop133:

#PUSH, 2 /* to */
CINDEX[]
#PUSH, 2 /* from */
CINDEX[]
GTEQ[]
IF[]

    /* STACK: &lt;align?&gt;, &lt;to&gt;, &lt;from&gt; */

    DUP[]
    #PUSH, 4 /* align? */
    CINDEX[]
    IF[]
        ALIGNRP[]
    ELSE[]
        IP[]
    EIF[]

    #PUSH, 1
    ADD[]

    #PUSH, WOffset133
    JMPR[], (WOffset133=#WBeginLoop133)

EIF[]

/* STACK: &lt;align?&gt;, &lt;to&gt;, &lt;from&gt; */

POP[]
POP[]
POP[]

#PUSHON
#END
ENDF[]

FDEF[], 134

/* support fn for italic IUP[?]
   assume pv and fv are set externally

   CALL[], &lt;p0&gt;, &lt;p1&gt;, 134 */

#BEGIN
#PUSHOFF

/* STACK: &lt;p0&gt;, &lt;p1&gt; */

#PUSH, 2 /* p0 */
CINDEX[]
GC[O]
#PUSH, 2 /* p1 */
CINDEX[]
GC[O]
EQ[]

/* STACK: &lt;p0&gt;, &lt;p1&gt;, &lt;eq?&gt; */

ROLL[] /* p0 */
DUP[]
DUP[]
SRP0[]
SRP1[]
#PUSH, 1
ADD[]
ROLL[] /* p1 */
DUP[]
SRP2[]
#PUSH, 1
SUB[]

/* STACK: &lt;eq?&gt;, &lt;from&gt;, &lt;to&gt; */

#PUSH, 133
CALL[]

#PUSHON
#END
ENDF[]

FDEF[], 135

/* support fn for italic IUP[?]
   assume pv and fv are set externally

   CALL[], &lt;p0&gt;, &lt;end&gt;, &lt;start&gt;, &lt;p1&gt;, 135 */

#BEGIN
#PUSHOFF

/* STACK: &lt;p0&gt;, &lt;end&gt;, &lt;start&gt;, &lt;p1&gt; */

#PUSH, 4 /* p0 */
CINDEX[]
GC[O]
#PUSH, 2 /* p1 */
CINDEX[]
GC[O]
EQ[]

/* STACK: &lt;p0&gt;, &lt;end&gt;, &lt;start&gt;, &lt;p1&gt;, &lt;eq?&gt; */

SWAP[]
DUP[]
SRP2[]
#PUSH, 1
SUB[]
SWAP[]
DUP[]

#PUSH, 6 /* p0 */
MINDEX[]
DUP[]
DUP[]
SRP0[]
SRP1[]
#PUSH, 1
ADD[]
#PUSH, 6 /* end */
MINDEX[]

/* STACK: &lt;start&gt;, &lt;to&gt;, &lt;eq?&gt;, &lt;eq?&gt;, &lt;from&gt;, &lt;end&gt; */

#PUSH, 133
CALL[]

ROLL[]
ROLL[]
#PUSH, 133
CALL[]

#PUSHON
#END
ENDF[]

FDEF[], 150
/* Function 150 takes 5 arguments */
/* VERSION 1.0 20120420 */

/* This function moves a point between a PPEM range */
/* for the given rasterizer mode (in Store 2) ClearType */
/* CALL[],&lt;point&gt;,&lt;amount&gt;,&lt;low PPEM&gt;,&lt;high PPEM&gt;, &lt;rasterizer mode&gt;, 150 */
/* &lt;low ppem&gt; Lowest PPEM range to be modified (inclusive) */
/* &lt;high ppem&gt; Highest PPEM range to be modified (inclusive) */
/* &lt;Point&gt; point to be modified */
/* &lt;amount&gt; Amount to move point, in ± 64ths */
/* &lt;rasterizer mode&gt; value in store 2 */
/* 150 Function number */
#BEGIN
#PUSHOFF
#PUSH, 2
RS[] /* read store 2 */
EQ[] /* is it = to the last arg? */
IF[] /* if so . . . */
    GPV[] /* Save current PV on stack to restore */
    SPVTCA[Y] /* We should only MPPEM with Y PV */
    ROLL[]
    MPPEM[] /* check cur. size against high ppem */
    GTEQ[]
    #PUSH, 4
    MINDEX[]
    MPPEM[] /* and low ppem */
    LTEQ[]
    AND[]
    IF[] /* if it's between, then */
        SPVFS[] /* Restore orig PV */
        SHPIX[] /* move the point by the amount */
    ELSE[]
       SPVFS[] /* Restore orig PV */
       POP[] /* otherwise remove the remaining arguments */
       POP[]
    EIF[]

ELSE[]
    POP[] /* remove the remaining arguments if the first test fails */
    POP[]
    POP[]
    POP[]
EIF[]
#END
#PUSHON
ENDF[]

FDEF[], 151
/* Function 151 takes 5 arguments */
/* VERSION 1.0 20120420 */

/* This function moves a point between a PPEM range */
/* for the given set of rasterizer flags (in Store 2) */
/* CALL[],&lt;point&gt;,&lt;amount&gt;,&lt;low PPEM&gt;,&lt;high PPEM&gt;, &lt;rasterizer mode&gt;, 151 */
/* &lt;low ppem&gt; Lowest PPEM range to be modified (inclusive) */
/* &lt;high ppem&gt; Highest PPEM range to be modified (inclusive) */
/* &lt;Point&gt; point to be modified */
/* &lt;amount&gt; Amount to move point, in ± 64ths */
/* &lt;rasterizer flag&gt; bit of a value in store 2 */
/* Function 151 differs from Function 150 in that instead of requiring an */
/* exact match with the value in store 2, a given set of flags (or bit values) */
/* can be referenced. For example, if the function should execute */
/* in any situation where ClearType with fractional AWs is enabled, */
/* (c.f. Function 84) irrespective of other flags (e.g. BGR as opposed */
/* to RGB Devices or non-ClearType direction anti-aliasing) then one */
/* would use a &lt;rasterizer flag&gt; value of 64. (c.f. Function 84.) */
/* The rasterizer values for &lt;rasterizer mode&gt; are defined in the function */
/* 84 header. */
/* EXAMPLE: */
/* If one wanted the move to occur if either subpixel positioned or full gray pixel */
/* then one would take the 64 (from subpixel positioned) and the 256 (from */
/* gray full-pixel) and add them to get 320. With a value of 320, the point will */
/* get moved if either subpixel positioned or full gray pixel is enabled. */
/* If one wanted to move to occur always if ClearType was on, independent of */
/* any subtype or spacing flag, one would set the rasterizer mode to 2. */

/* 151 Function number */
#BEGIN
#PUSHOFF
#PUSH, 152 /* Call function 152 with the rasterizer mode on the top of stack */
CALL[]
IF[] /* if so . . . */
    GPV[] /* Save current PV on stack to restore */
    SPVTCA[Y] /* We should only MPPEM with Y PV */
    ROLL[]
    MPPEM[] /* check cur. size against high ppem */
    GTEQ[]
    #PUSH, 4
    MINDEX[]
    MPPEM[] /* and low ppem */
    LTEQ[]
    AND[]
    IF[] /* if it's between, then */
        SPVFS[] /* Restore orig PV */
        SHPIX[] /* move the point by the amount */
    ELSE[]
        SPVFS[] /* Restore orig PV */
        POP[] /* otherwise remove the remaining arguments */
        POP[]
    EIF[]

ELSE[]
    POP[] /* remove the remaining arguments if the first test fails */
    POP[]
    POP[]
    POP[]
EIF[]
#END
#PUSHON
ENDF[]

FDEF[], 152
/* Function 152 takes 1 argument, a "bitfield" flag. */
/* VERSION 1.0 20111117 */
/*
Function 152 is intended to take a set of one or more bits as input and do an AND (e.g. mask) of those
bits with the set of flags returned by Function 84. Then determine if there is at least one
of these resultant bits that are set.

Function 152 returns TRUE if the match is successful, and FALSE if it is not successful.

If the parameter is zero, indicating no flags, then the function returns FALSE.

This function takes a maxiumum of 32 bit flags.

USES: Storage 2 (FN 84)
RETURNS: 0 or 1
*/

#BEGIN
#PUSHOFF
/* Input parameter is a set of one or more flags */

DUP[]
#PUSH, 2     /* Read FN 84 flags */
RS[]
EQ[]         /* If a simple match, return TRUE */
#PUSH, 1
SWAP[]

#PUSH, BEcln
SWAP[]
JROT[], (BEcln=#LEndClear)  /* Jump to end and clean up stack. */
POP[]
#PUSH, 0, 2
RS[]         /* Read FN 84 flags */
#PUSH, BEclr /* If no FN 84 flags, return FALSE */
SWAP[]

JROF[], (BEclr=#LEndClear)

POP[]
#PUSH, 2
RS[]
SWAP[]
#PUSH, 32   /* Maximum number of bits to loop through */
/* TopLoop: */
#LTopLoop:
   /* STACK
   Loop Iteration Count
   Updated (shifted) Input Value
   Updated (shifted) FN 84 Flag
   */
  DUP[]
  NOT[]
  IF[]    /* Exit the loop when done */
    POP[]
    POP[]
    POP[]
    #PUSH, 0, BDEnd /* 73  End */

    JMPR[], (BDEnd=#LEndFn)

  EIF[]
  ROLL[]
  ROLL[]
  DUP[]
  ROLL[]
  DUP[]
  ROLL[]
  SWAP[]
  /* STACK
  Updated (shifted) FN 84 Flag
  Updated (shifted) Input Value
  Updated (shifted) FN 84 Flag
  Updated (Shifted) Input Value
  Loop Interation Count
  */

  /* Check to see if the lower-order bit is set in the FN 84 Flag */
  #PUSH, 4096 /* Convert to 26.6 by multiply by 64 x 64 */
  MUL[]
  ODD[]
  IF[]
    /* Check to see if the lower-order bit is set in the Input Value */
    #PUSH, 4096
    MUL[]
    ODD[]
    IF[]
      /* We can early out here once we find our first match */
      POP[]
      POP[]
      POP[]
      #PUSH, 1, BTEnd  /* 1 is the TRUE return code */
      JMPR[], (BTEnd=#LEndFn)
    EIF[]
  ELSE[]
    POP[]
  EIF[]
  /* STACK
  Updated (shifted) FN 84 Flag
  Updated (shifted) Input Value
  Loop Interation Count
  */
  /* Shift both the Input Value and the FN 84 Flag each one bit right */
  #PUSH, 128  /* 2 in 26.6 */
  DIV[]
  DUP[]
  NOT[]
  IF[]
    POP[]
    POP[]
    POP[]
    #PUSH, 0, BPEnd /* 0 is end condition of FALSE */

    JMPR[], (BPEnd=#LEndFn)

  EIF[]
  SWAP[]
  #PUSH, 128  /* 2 in 26.6 */
  DIV[]
  DUP[]
  NOT[]
  IF[]
    POP[]
    POP[]
    POP[]
    #PUSH, 0, BZEnd /* End */

    JMPR[], (BZEnd=#LEndFn) 

  EIF[]
  ROLL[]
  #PUSH, 1
  SUB[]
  #PUSH, WReLoop  /* -77 TopLoop */

JMPR[], (WReLoop=#LTopLoop)

/* EndClear: */
#LEndClear:
SWAP[]
POP[]
#LEndFn:
/* End: */
#END
#PUSHON
ENDF[]

FDEF[], 153
/* Function 153 takes 1 argument, a "bitfield" flag. */
/* VERSION 1.0 20111117 */
/*
Function 153 is intended to take a set of one or more bits as input and do an AND (e.g. mask) of those
bits with the set of flags returned by Function 84. Then determine if ALL
of these resultant bits from the mask are set.

Function 153 returns TRUE if the match is successful, and FALSE if it is not successful.

If the parameter is zero, indicating no flags, then the function returns FALSE.

This function takes a maxiumum of 32 flags.

USES: Storage 2 (FN 84)
RETURNS: 0 or 1
*/

#BEGIN
#PUSHOFF
/* Input parameter is a set of one or more flags */

DUP[]
#PUSH, 2     /* Read FN 84 flags */
RS[]
EQ[]         /* If a simple match, return TRUE */
#PUSH, 1
SWAP[]

#PUSH, BEcln
SWAP[]
JROT[], (BEcln=#LEndClear)  /* Jump to end and clean up stack. */
POP[]
#PUSH, 0, 2
RS[]         /* Read FN 84 flags */
#PUSH, BEclr /* If no FN 84 flags, return FALSE */
SWAP[]

JROF[], (BEclr=#LEndClear)

POP[]
#PUSH, 0, 2   /* 0 is the boolean tracking success, start off with FALSE */
RS[]
ROLL[]
#PUSH, 32   /* Maximum number of bits to loop through */
/* TopLoop: */
#LTopLoop:
   /* STACK
   Loop Iteration Count
   Updated (shifted) Input Value
   Updated (shifted) FN 84 Flag
   Conditional boolean tracking success
   */
  DUP[]
  NOT[]
  IF[]    /* Exit the loop when done */
    POP[]
    POP[]
    POP[]
    #PUSH, BDEnd /* 73  End */

    JMPR[], (BDEnd=#LEndFn)

  EIF[]
  ROLL[]
  ROLL[]
  DUP[]
  ROLL[]
  DUP[]
  ROLL[]
  SWAP[]
  /* STACK
  Updated (shifted) FN 84 Flag
  Updated (shifted) Input Value
  Updated (shifted) FN 84 Flag
  Updated (Shifted) Input Value
  Loop Interation Count
  Conditional boolean tracking success
  */

  /* Check to see if the lower-order bit is set in the FN 84 Flag */
  #PUSH, 4096 /* Convert to 26.6 by multiply by 64 x 64 */
  MUL[]
  ODD[]
  IF[]
    /* Check to see if the lower-order bit is set in the Input Value */
    #PUSH, 4096
    MUL[]
    ODD[]
    IF[]
      #PUSH, 4
      MINDEX[]
      #PUSH, 1  /* Set TRUE return code */
      OR[]      /* We OR this because we will immediately exit if we fail this test */
      #PUSH, 4
      MINDEX[]
      #PUSH, 4
      MINDEX[]
      #PUSH, 4
      MINDEX[]
    ELSE[]
      POP[]
      POP[]
      POP[]
      POP[]
      #PUSH, BTEnd , 0  /* 0 is the FALSE return code */
      SWAP[]
      JMPR[], (BTEnd=#LEndFn)

    EIF[]
  ELSE[]
    POP[]
  EIF[]
  #PUSH, 4 /* Can this be cleaned up and integrated with the code below? */
  MINDEX[]
  SWAP[]
  /* STACK
  Updated (shifted) FN 84 Flag
  Conditional boolean tracking success
  Updated (shifted) Input Value
  Loop Interation Count
  */
  /* Shift both the Input Value and the FN 84 Flag each one bit right */
  #PUSH, 128  /* 2 in 26.6 */
  DIV[]
  DUP[]
  NOT[]
  IF[]
    ROLL[]
    NOT[]
    ROLL[]
    AND[]
    SWAP[]
    POP[]
    SWAP[]
    POP[]
    #PUSH, BPEnd /* 29  End */

    JMPR[], (BPEnd=#LEndFn)

  EIF[]
  ROLL[]
  #PUSH, 128  /* 2 in 26.6 */
  DIV[]
  DUP[]
  NOT[]
  IF[]
    POP[]
    POP[]
    SWAP[]
    POP[]
    #PUSH, BZEnd /* End */

    JMPR[], (BZEnd=#LEndFn)

  EIF[]
  #PUSH, 4
  MINDEX[]
  #PUSH, 1
  SUB[]
  #PUSH, WReLoop  /* -77 TopLoop */

JMPR[], (WReLoop=#LTopLoop)

/* EndClear: */
#LEndClear:
SWAP[]
POP[]
#LEndFn:
/* End: */
#END
#PUSHON
ENDF[]


</assembly>
  </fpgm>
  <prep>
    <assembly>/* auto-generated pre-program */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */

/* Grey scaling? */
CALL[], 84

/* InstructionsOn */
#PUSHOFF
MPPEM[]
#PUSH, 2047
GT[]
MPPEM[]
#PUSH, 6
LT[]
OR[]
#PUSH, 1
GETINFO[]
#PUSH, 37
GTEQ[]
#PUSH, 1
GETINFO[]
#PUSH, 64
LTEQ[]
AND[]
#PUSH, 6
GETINFO[]
#PUSH, 0
NEQ[]
AND[]
OR[]
IF[]
    #PUSH, 1, 1
    INSTCTRL[]
EIF[]
#PUSHON

/* DropOutCtrlOff */
SCANCTRL[], 511

SCANTYPE[], 1
SCANTYPE[], 5

/* CvtCutIn */
SVTCA[Y]
SCVTCI[], 64
WS[], 3, 64
#PUSHOFF
MPPEM[]
#PUSH, 144
GTEQ[]
IF[]
#PUSH, 3, 0, 0
SCVTCI[]
WS[]
EIF[]
#PUSHON

/* ClearTypeCtrl */
#PUSHOFF
#PUSH, 2, 2
RS[]
LTEQ[]
IF[]
    #PUSH, 4, 3
    INSTCTRL[]
EIF[]
#PUSHON

WS[], 16, 0
/* LinearAdvanceWidths */
SVTCA[Y]
CALL[], 2, 89
SVTCA[Y]
CALL[], 8, 89
CALL[], 3, 40, 2, 85
CALL[], 9, 40, 8, 85
SVTCA[Y]
CALL[], 65, 89
SVTCA[Y]
CALL[], 67, 89
SVTCA[Y]
CALL[], 0, 89
SVTCA[Y]
CALL[], 6, 89
SVTCA[Y]
CALL[], 10, 89
SVTCA[Y]
CALL[], 14, 89
CALL[], 1, 205, 0, 85
CALL[], 7, 40, 6, 85
CALL[], 11, 40, 10, 85
CALL[], 15, 35, 14, 85
SVTCA[Y]
CALL[], 66, 89
SVTCA[Y]
CALL[], 4, 89
SVTCA[Y]
CALL[], 12, 89
CALL[], 5, 40, 4, 85
CALL[], 13, 40, 12, 85
SVTCA[Y]
CALL[], 16, 89
SVTCA[Y]
CALL[], 18, 89
CALL[], 17, 40, 16, 85
CALL[], 19, 40, 18, 85
SVTCA[X]
CALL[], 21, 25, 53, 22, 39, 90
SVTCA[Y]
CALL[], 75, 89
SVTCA[Y]
CALL[], 77, 89
CALL[], 76, 40, 75, 85
CALL[], 78, 40, 77, 85
SVTCA[Y]
CALL[], 81, 89
SVTCA[Y]
CALL[], 79, 89
SVTCA[Y]
CALL[], 85, 89
SVTCA[Y]
CALL[], 86, 89
SVTCA[Y]
CALL[], 87, 89
RTG[]

</assembly>
  </prep>
  <cvt>
    <talk>/* Control Program */
/* ACT generated Thu Jan  9 18:13:47 2020 */

CATEGORY Stroke
CATEGORY StrokeInheritance
GROUP SmallCap
GROUP Runic

InstructionsOn @6..2047

DropOutCtrlOff @255

CvtCutIn = 1, 0@144 /* 1 pixel cut-in for over- and undershoots */

ClearTypeCtrl = 1

ASM("WS[], 16, 0") /* &lt;== S[16] = threshold ppem that less than or equal is no RES */

LinearAdvanceWidths = 0

/***** Height CVTs *****/
UpperCase
  Grey
  Y
  SquareHeight
      2:  1358 /* cap height */
ASM("SVTCA[Y]")
ASM("CALL[], 2, 89")
      8:     0 /* base line */
ASM("SVTCA[Y]")
ASM("CALL[], 8, 89")
  RoundHeight
      3:    27 ~   2 @ 40 /* cap height overshoot */
      9:   -27 ~   8 @ 40 /* base line undershoot */
  Black
  Y
  StraightStroke
      65: 51 /* serif height */
      67: 61 /* bar height */
  RoundStroke
      68: 57 /* round horizontal stroke */
ASM("SVTCA[Y]")
ASM("CALL[], 65, 89")
ASM("SVTCA[Y]")
ASM("CALL[], 67, 89")

LowerCase
  SquareHeight
      0:  1487 /* lc ascender */
ASM("SVTCA[Y]")
ASM("CALL[], 0, 89")
      6:   891 /* x height */
ASM("SVTCA[Y]")
ASM("CALL[], 6, 89")
     10:     0 /* base line */
ASM("SVTCA[Y]")
ASM("CALL[], 10, 89")
     14:  -501 /* lc descender */
ASM("SVTCA[Y]")
ASM("CALL[], 14, 89")
  RoundHeight
      1:     5 ~   0 @205 /* lc ascender overshoot */
      7:    24 ~   6 @ 40 /* x height overshoot */
     11:   -24 ~  10 @ 40 /* base line undershoot */
     15:   -30 ~  14 @ 35 /* lc descender undershoot */
  Black
  Y
  StraightStroke
     66: 51 /* lc serif height */
ASM("SVTCA[Y]")
ASM("CALL[], 66, 89")
  RoundStroke
     69: 57 /* lc standard horizontal round stroke */

Figure
  SquareHeight
      4:  1321 /* figure height */
ASM("SVTCA[Y]")
ASM("CALL[], 4, 89")
     12:     0 /* base line */
ASM("SVTCA[Y]")
ASM("CALL[], 12, 89")
  RoundHeight
      5:    37 ~   4 @ 40 /* figure height overshoot */
     13:   -23 ~  12 @ 40 /* base line undershoot */

Other
  SquareHeight
     16:  1378 /* other height */
ASM("SVTCA[Y]")
ASM("CALL[], 16, 89")
     18:     0 /* base line */
ASM("SVTCA[Y]")
ASM("CALL[], 18, 89")
  RoundHeight
         17:    21 ~  16 @ 40 /* other height overshoot */
         19:   -21 ~  18 @ 40 /* base line undershoot */
     Black
     Y
     StraightStroke
         88:  61 /* standard bar height */

/***** Reserved CVTs *****/
AnyGroup
  AnyColor
  AnyDirection
  AnyCategory
     20:     0 /* DO NOT USE!!! */

/***** Grand-Parent CVT *****/
AnyGroup
  Black
  X
  StrokeInheritance
     21:   170 /* 31x */

/***** Parent CVTs *****/
UpperCase
  Black
  X
  StrokeInheritance
     22:   187 /* 14x */
LowerCase
  Black
  X
  StrokeInheritance
     25:   156 /* 17x */
ASM("SVTCA[X]")
ASM("CALL[], 21, 25, 53, 22, 39, 90")

SmallCap
    Grey
    Y
    SquareHeight
        75: 1016 /* sc height */
        77: 0 /* baseline */
ASM("SVTCA[Y]")
ASM("CALL[], 75, 89")
ASM("SVTCA[Y]")
ASM("CALL[], 77, 89")
    RoundHeight
        76: 20 ~ 75 @ 40 /* sc height overshoot */
        78: -23 ~ 77 @ 40 /* sc baseline undershoot */
    Black
    Y
    StraightStroke
        81: 51 /* serif height */
        79: 61 /* bar height */
ASM("SVTCA[Y]")
ASM("CALL[], 81, 89")
ASM("SVTCA[Y]")
ASM("CALL[], 79, 89")
    RoundStroke
        80: 57 /* sc round horizontal stroke */

Runic
    Grey
    Y
    SquareHeight
        85: 1358 /* Rune height */
        86: 0 /* baseline */
    Black
    Y
    StraightStroke
        87: 51 /* Serif height */
ASM("SVTCA[Y]")
ASM("CALL[], 85, 89")
ASM("SVTCA[Y]")
ASM("CALL[], 86, 89")
ASM("SVTCA[Y]")
ASM("CALL[], 87, 89")
</talk>
  </cvt>
  <glyf>
    <TTGlyph ID="0">
      <instructions>
        <talk>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(0)	/* min */
YAnchor(1)	/* max */

/* YDir: Stroke #0 */
YDist(1,28) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YDist(0,4) /*perpendicular to the stroke*/

Smooth()
</talk>
        <assembly>/* TT glyph 0, char 0xffff */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 1
MDRP[m&gt;RBl], 28
SRP0[], 0
MDRP[m&gt;RBl], 4
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="1">
      <instructions>
        <talk>/* VTTTalk glyph 1, char 0x41 (A) */
/* GUI generated Mon Jan 13 10:57:02 2020 */

/* Y direction */
YAnchor(11,3)
YShift(11,18)
YAnchor(30,8)
YShift(30,16)
YShift(30,17)
YShift(30,25)
YIPAnchor(11,21,30)
YLink(21,22,67)
YLink(30,31,65)
YShift(31,26)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 1, char 0x41 (A) */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 11, 3
SHP[1], 18
MIAP[R], 30, 8
SHP[1], 16
SHP[1], 17
SHP[1], 25
SRP2[], 11
IP[], 21
MDAP[R], 21
MIRP[m&gt;RBl], 22, 67
SRP0[], 30
MIRP[m&gt;RBl], 31, 65
SHP[2], 26
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="2">
      <instructions>
        <talk>/* VTTTalk glyph 2, char 0xa73c */
/* GUI generated Sun Jan 12 05:02:12 2020 */

/* Y direction */
YAnchor(0)
YDist(0,6)
YShift(0,11)
YAnchor(23,8)
YLink(23,24,65)
YShift(23,28)
YShift(23,36)
YAnchor(47,3)
YShift(47,17)
YShift(47,29)
YIPAnchor(47,33,23)
YLink(33,32,67)
YShift(47,55)
YLink(55,54,65)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 2, char 0xa73c */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MDAP[R], 0
MDRP[m&gt;RBl], 6
SHP[1], 11
MIAP[R], 23, 8
MIRP[m&gt;RBl], 24, 65
SHP[1], 28
SHP[1], 36
MIAP[R], 47, 3
SHP[1], 17
SHP[1], 29
SRP2[], 23
IP[], 33
MDAP[R], 33
MIRP[m&gt;RBl], 32, 67
SRP1[], 47
SHP[1], 55
SRP0[], 55
MIRP[m&gt;RBl], 54, 65
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="3">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xc1 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 1, 0, 0
OFFSET[R], 840, 1262, 0
SVTCA[Y]
CALL[], 35, 11, 1, 1, 83, 86
SHC[2], 5
SVTCA[X]
CALL[], 36, 38, 30, 31, 29, 87
SHC[2], 5

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="4">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x102 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 1, 0, 0
OFFSET[R], 779, 1078, 467
SVTCA[Y]
CALL[], 35, 11, 1, 1, 150, 86
SHC[2], 5
SVTCA[X]
CALL[], 37, 45, 30, 31, 29, 87
SHC[2], 5

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="5">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xc2 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 1, 0, 0
OFFSET[R], 842, 1259, 0
SVTCA[Y]
CALL[], 35, 11, 1, 1, 90, 86
SHC[2], 5
SVTCA[X]
CALL[], 36, 39, 30, 31, 29, 87
SHC[2], 5

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="6">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xc4 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 1, 0, 0
OFFSET[R], 837, 1258, 0
SVTCA[Y]
CALL[], 35, 11, 1, 1, 117, 86
SHC[2], 5
SHC[2], 6
SVTCA[X]
CALL[], 50, 44, 30, 31, 29, 87
SHC[2], 5
SHC[2], 6
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="7">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xc0 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 1, 0, 0
OFFSET[R], 839, 1263, 0
SVTCA[Y]
CALL[], 35, 11, 1, 1, 81, 86
SHC[2], 5
SVTCA[X]
CALL[], 36, 38, 30, 31, 29, 87
SHC[2], 5

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="8">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x100 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 1, 0, 0
OFFSET[R], 846, 1260, 0
SVTCA[Y]
CALL[], 35, 11, 1, 1, 172, 86
SHC[2], 5
SVTCA[X]
CALL[], 35, 38, 30, 31, 29, 87
SHC[2], 5

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="9">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x104 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 1, 0, 0
OFFSET[R], 836, 647, 10
SVTCA[Y]
CALL[], 43, 0, 0, 0, 20, 86
SHC[2], 5
SVTCA[X]
CALL[], 38, 54, 30, 50, 29, 87
SHC[2], 5

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="10">
      <instructions>
        <talk>/* VTTTalk glyph 10, char 0xc5 */
/* GUI generated Thu Jan  9 18:37:50 2020 */

/* Y direction */
YAnchor(11)
YDist(11,24)
YShift(11,31)
YAnchor(42,8)
YShift(42,30)
YShift(42,34)
YShift(42,37)
YIPAnchor(11,0,42)
YLink(0,1,67)
YLink(42,43,65)
YShift(43,38)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 10, char 0xc5 */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MDAP[R], 11
MDRP[m&gt;RBl], 24
SHP[1], 31
MIAP[R], 42, 8
SHP[1], 30
SHP[1], 34
SHP[1], 37
SRP2[], 11
IP[], 0
MDAP[R], 0
MIRP[m&gt;RBl], 1, 67
SRP0[], 42
MIRP[m&gt;RBl], 43, 65
SHP[2], 38
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="11">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xc3 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 1, 0, 0
OFFSET[R], 845, 1259, 0
SVTCA[Y]
CALL[], 35, 11, 1, 1, 117, 86
SHC[2], 5
SVTCA[X]
CALL[], 43, 55, 30, 31, 29, 87
SHC[2], 5
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="12">
      <instructions>
        <talk>/* VTTTalk glyph 12, char 0xc6 */
/* GUI generated Sun Jan 12 12:46:09 2020 */

/* Y direction */
YAnchor(8,2)
YShift(8,32)
YLink(8,7,65)
YShift(7,16)
YAnchor(26,8)
YShift(26,3)
YShift(26,17)
YShift(26,25)
YShift(26,31)
YLink(26,27,65)
YShift(27,1)
YShift(27,18)
YIPAnchor(8,35,26)
YLink(35,36,67)

/* X direction */
XAnchor(40)
XDist(40,41)
XInterpolate(41,37,40)

Smooth()

</talk>
        <assembly>/* TT glyph 12, char 0xc6 */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 8, 2
SHP[1], 32
MIRP[m&gt;RBl], 7, 65
SHP[2], 16
MIAP[R], 26, 8
SHP[1], 3
SHP[1], 17
SHP[1], 25
SHP[1], 31
MIRP[m&gt;RBl], 27, 65
SHP[2], 1
SHP[2], 18
SRP2[], 8
IP[], 35
MDAP[R], 35
MIRP[m&gt;RBl], 36, 67
SVTCA[X]
MDAP[R], 40
MDRP[m&gt;RBl], 41
IP[], 37
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="13">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x1fc */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 12, 0, 0
OFFSET[R], 840, 1938, 0
SVTCA[Y]
CALL[], 43, 8, 1, 1, 110, 86
SHC[2], 5
SVTCA[X]
CALL[], 44, 46, 26, 46, 10, 87
SHC[2], 5

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="14">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x1e2 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 12, 0, 0
OFFSET[R], 846, 1936, 0
SVTCA[Y]
CALL[], 43, 8, 1, 1, 199, 86
SHC[2], 5
SVTCA[X]
CALL[], 43, 46, 26, 46, 10, 87
SHC[2], 5

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="15">
      <instructions>
        <talk>/* VTTTalk glyph 15, char 0x42 (B) */
/* GUI generated Thu Jan  9 18:46:57 2020 */

/* Y direction */
YAnchor(17,8)
YShift(17,0)
YLink(17,18,65)
YShift(18,21)
YAnchor(35,2)
YShift(35,1)
YLink(35,34,65)
YShift(34,45)
YIPAnchor(35,37,17)
YDist(37,32)

/* X direction */

Smooth()


</talk>
        <assembly>/* TT glyph 15, char 0x42 (B) */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 17, 8
SHP[1], 0
MIRP[m&gt;RBl], 18, 65
SHP[2], 21
MIAP[R], 35, 2
SHP[1], 1
MIRP[m&gt;RBl], 34, 65
SHP[2], 45
SRP2[], 17
IP[], 37
MDAP[R], 37
MDRP[m&gt;RBl], 32
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="16">
      <instructions>
        <talk>/* VTTTalk glyph 16, char 0x43 (C) */
/* GUI generated Sun Jan 12 12:47:28 2020 */

/* Y direction */
YAnchor(0,9)
YLink(0,31,68)
YShift(0,38)
YAnchor(10,3)
YShift(10,15)
YLink(10,22,68)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 16, char 0x43 (C) */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 0, 9
MIRP[m&gt;RBl], 31, 68
SHP[1], 38
MIAP[R], 10, 3
SHP[1], 15
MIRP[m&gt;RBl], 22, 68
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="17">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x106 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 16, 0, 0
OFFSET[R], 840, 1422, 0
SVTCA[Y]
CALL[], 43, 10, 1, 1, 83, 86
SHC[2], 1
SVTCA[X]
CALL[], 44, 46, 5, 37, 17, 87
SHC[2], 1
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="18">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x10c */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 16, 0, 0
OFFSET[R], 843, 1418, 0
SVTCA[Y]
CALL[], 43, 10, 1, 1, 86, 86
SHC[2], 1
SVTCA[X]
CALL[], 44, 48, 5, 37, 17, 87
SHC[2], 1
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="19">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xc7 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 16, 0, 0
OFFSET[R], 798, 1140, 0
SVTCA[Y]
CALL[], 62, 0, 0, 0, 27, 86
SHC[2], 1
SVTCA[X]
CALL[], 46, 67, 5, 32, 17, 87
SHC[2], 1
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="20">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x10a */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 16, 0, 0
OFFSET[R], 838, 1417, 0
SVTCA[Y]
CALL[], 43, 10, 1, 1, 113, 86
SHC[2], 1
SVTCA[X]
CALL[], 46, 52, 5, 37, 17, 87
SHC[2], 1

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="21">
      <instructions>
        <talk>/* VTTTalk glyph 21, char 0x44 (D) */
/* GUI generated Thu Jan  9 18:52:39 2020 */

/* Y direction */
YAnchor(26,2)
YShift(26,1)
YLink(26,25,65)
YShift(25,23)
YAnchor(28,8)
YShift(28,0)
YLink(28,29,65)
YShift(29,11)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 21, char 0x44 (D) */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 26, 2
SHP[1], 1
MIRP[m&gt;RBl], 25, 65
SHP[2], 23
MIAP[R], 28, 8
SHP[1], 0
MIRP[m&gt;RBl], 29, 65
SHP[2], 11
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="22">
      <instructions>
        <talk>/* VTTTalk glyph 22, char 0xd0 */
/* GUI generated Thu Jan  9 18:55:17 2020 */

/* Y direction */
YAnchor(26,2)
YShift(26,1)
YLink(26,25,65)
YShift(25,23)
YAnchor(28,8)
YShift(28,0)
YLink(28,29,65)
YShift(29,11)
YIPAnchor(26,32,28)
YLink(32,33,67)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 22, char 0xd0 */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 26, 2
SHP[1], 1
MIRP[m&gt;RBl], 25, 65
SHP[2], 23
MIAP[R], 28, 8
SHP[1], 0
MIRP[m&gt;RBl], 29, 65
SHP[2], 11
SRP2[], 26
IP[], 32
MDAP[R], 32
MIRP[m&gt;RBl], 33, 67
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="23">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x10e */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 21, 0, 0
OFFSET[R], 843, 1301, 0
SVTCA[Y]
CALL[], 32, 1, 1, 1, 113, 86
SHC[2], 4
SVTCA[X]
CALL[], 33, 37, 25, 28, 6, 87
SHC[2], 4
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="24">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x110 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 22, 0, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="25">
      <instructions>
        <talk>/* VTTTalk glyph 25, char 0x45 (E) */
/* GUI generated Sun Jan 12 05:22:35 2020 */

/* Y direction */
YAnchor(32,2)
YShift(32,1)
YShift(32,19)
YLink(32,31,65)
YShift(31,18)
YAnchor(34,8)
YShift(34,0)
YShift(34,4)
YIPAnchor(32,22,34)
YShift(22,26)
YLink(22,23,67)
YShift(23,27)
YLink(34,35,65)
YShift(35,5)

/* X direction */
XAnchor(27)
XDist(27,28)
XInterpolate(28,24,27)

Smooth()

</talk>
        <assembly>/* TT glyph 25, char 0x45 (E) */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 32, 2
SHP[1], 1
SHP[1], 19
MIRP[m&gt;RBl], 31, 65
SHP[2], 18
MIAP[R], 34, 8
SHP[1], 0
SHP[1], 4
SRP2[], 32
IP[], 22
MDAP[R], 22
SHP[1], 26
MIRP[m&gt;RBl], 23, 67
SHP[2], 27
SRP0[], 34
MIRP[m&gt;RBl], 35, 65
SHP[2], 5
SVTCA[X]
MDAP[R], 27
MDRP[m&gt;RBl], 28
IP[], 24
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="26">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xc9 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 25, 0, 0
OFFSET[R], 840, 1326, 0
SVTCA[Y]
CALL[], 38, 32, 1, 1, 110, 86
SHC[2], 7
SVTCA[X]
CALL[], 39, 41, 31, 34, 11, 87
SHC[2], 7

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="27">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x114 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 25, 0, 0
OFFSET[R], 844, 1322, 0
SVTCA[Y]
CALL[], 38, 32, 1, 1, 170, 86
SHC[2], 7
SVTCA[X]
CALL[], 40, 48, 31, 34, 11, 87
SHC[2], 7
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="28">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x11a */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 25, 0, 0
OFFSET[R], 843, 1322, 0
SVTCA[Y]
CALL[], 38, 32, 1, 1, 113, 86
SHC[2], 7
SVTCA[X]
CALL[], 39, 43, 31, 34, 11, 87
SHC[2], 7
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="29">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xca */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 25, 0, 0
OFFSET[R], 842, 1323, 0
SVTCA[Y]
CALL[], 38, 32, 1, 1, 117, 86
SHC[2], 7
SVTCA[X]
CALL[], 39, 42, 31, 34, 11, 87
SHC[2], 7

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="30">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xcb */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 25, 0, 0
OFFSET[R], 837, 1322, 0
SVTCA[Y]
CALL[], 38, 32, 1, 1, 144, 86
SHC[2], 7
SHC[2], 8
SVTCA[X]
CALL[], 53, 47, 31, 34, 11, 87
SHC[2], 7
SHC[2], 8

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="31">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x116 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 25, 0, 0
OFFSET[R], 838, 1321, 0
SVTCA[Y]
CALL[], 38, 32, 1, 1, 140, 86
SHC[2], 7
SVTCA[X]
CALL[], 41, 47, 31, 34, 11, 87
SHC[2], 7
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="32">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xc8 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 25, 0, 0
OFFSET[R], 839, 1327, 0
SVTCA[Y]
CALL[], 38, 32, 1, 1, 108, 86
SHC[2], 7
SVTCA[X]
CALL[], 39, 41, 31, 34, 11, 87
SHC[2], 7

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="33">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x112 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 25, 0, 0
OFFSET[R], 846, 1324, 0
SVTCA[Y]
CALL[], 38, 32, 1, 1, 199, 86
SHC[2], 7
SVTCA[X]
CALL[], 38, 41, 31, 34, 11, 87
SHC[2], 7
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="34">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x118 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 25, 0, 0
OFFSET[R], 836, 710, 0
SVTCA[Y]
CALL[], 46, 4, 0, 0, 30, 86
SHC[2], 7
SVTCA[X]
CALL[], 41, 57, 31, 54, 11, 87
SHC[2], 7

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="35">
      <instructions>
        <talk>/* VTTTalk glyph 35, char 0x46 (F) */
/* GUI generated Sun Jan 12 05:22:59 2020 */

/* Y direction */
YAnchor(13,8)
YShift(13,0)
YLink(13,14,65)
YAnchor(28,2)
YShift(28,1)
YShift(28,10)
YIPAnchor(28,18,13)
YShift(18,22)
YLink(18,19,67)
YShift(19,23)
YLink(28,27,65)
YShift(27,9)

/* X direction */
XAnchor(23)
XDist(23,24)
XInterpolate(24,20,23)

Smooth()
</talk>
        <assembly>/* TT glyph 35, char 0x46 (F) */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 13, 8
SHP[1], 0
MIRP[m&gt;RBl], 14, 65
MIAP[R], 28, 2
SHP[1], 1
SHP[1], 10
SRP2[], 13
IP[], 18
MDAP[R], 18
SHP[1], 22
MIRP[m&gt;RBl], 19, 67
SHP[2], 23
SRP0[], 28
MIRP[m&gt;RBl], 27, 65
SHP[2], 9
SVTCA[X]
MDAP[R], 23
MDRP[m&gt;RBl], 24
IP[], 20
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="36">
      <instructions>
        <talk>/* VTTTalk glyph 36, char 0x47 (G) */
/* GUI generated Sun Jan 12 05:09:19 2020 */

/* Y direction */
YAnchor(0,9)
YLink(0,29,68)
YAnchor(9,3)
YShift(9,15)
YLink(9,21,68)
YIPAnchor(9,37,0)
YShift(37,40)
YShift(37,41)
YLink(37,38,65)
YShift(38,35)
YShift(38,42)

/* X direction */

Smooth()


</talk>
        <assembly>/* TT glyph 36, char 0x47 (G) */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 0, 9
MIRP[m&gt;RBl], 29, 68
MIAP[R], 9, 3
SHP[1], 15
MIRP[m&gt;RBl], 21, 68
SRP2[], 0
IP[], 37
MDAP[R], 37
SHP[1], 40
SHP[1], 41
MIRP[m&gt;RBl], 38, 65
SHP[2], 35
SHP[2], 42
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="37">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x122 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 36, 0, 0
OFFSET[R], 797, 1251, 0
SVTCA[Y]
CALL[], 67, 0, 1, 1, -113, 86
SHC[2], 1
SVTCA[X]
CALL[], 64, 70, 4, 38, 17, 87
SHC[2], 1

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="38">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x120 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 36, 0, 0
OFFSET[R], 838, 1407, 0
SVTCA[Y]
CALL[], 53, 9, 1, 1, 113, 86
SHC[2], 1
SVTCA[X]
CALL[], 56, 62, 4, 37, 17, 87
SHC[2], 1
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="39">
      <instructions>
        <talk>/* VTTTalk glyph 39, char 0x21c */
/* GUI generated Sun Jan 12 12:49:08 2020 */

/* Y direction */
YAnchor(0)
YAnchor(34,3)
YLink(34,21,68)
YShift(34,28)
YInterpolate(34,13,0)
YShift(13,14)

/* X direction */
XAnchor(27)
XDist(27,28)

Smooth()
</talk>
        <assembly>/* TT glyph 39, char 0x21c */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MDAP[R], 0
MIAP[R], 34, 3
MIRP[m&gt;RBl], 21, 68
SHP[1], 28
SRP2[], 0
IP[], 13
SRP1[], 13
SHP[1], 14
SVTCA[X]
MDAP[R], 27
MDRP[m&gt;RBl], 28
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="40">
      <instructions>
        <talk>/* VTTTalk glyph 40, char 0x48 (H) */
/* GUI generated Thu Jan  9 19:14:19 2020 */

/* Y direction */
YAnchor(12,8)
YShift(12,0)
YShift(12,4)
YShift(12,17)
YLink(12,13,65)
YShift(13,18)
YAnchor(24,2)
YShift(24,1)
YShift(24,5)
YShift(24,29)
YIPAnchor(24,8,12)
YLink(8,9,67)
YLink(24,23,65)
YShift(23,28)

/* X direction */

Smooth()


</talk>
        <assembly>/* TT glyph 40, char 0x48 (H) */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 12, 8
SHP[1], 0
SHP[1], 4
SHP[1], 17
MIRP[m&gt;RBl], 13, 65
SHP[2], 18
MIAP[R], 24, 2
SHP[1], 1
SHP[1], 5
SHP[1], 29
SRP2[], 12
IP[], 8
MDAP[R], 8
MIRP[m&gt;RBl], 9, 67
SRP0[], 24
MIRP[m&gt;RBl], 23, 65
SHP[2], 28
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="41">
      <instructions>
        <talk>/* VTTTalk glyph 41, char 0x49 (I) */
/* GUI generated Thu Jan  9 19:16:26 2020 */

/* Y direction */
YAnchor(6,2)
YShift(6,1)
YLink(6,5,65)
YAnchor(9,8)
YShift(9,0)
YLink(9,10,65)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 41, char 0x49 (I) */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 6, 2
SHP[1], 1
MIRP[m&gt;RBl], 5, 65
MIAP[R], 9, 8
SHP[1], 0
MIRP[m&gt;RBl], 10, 65
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="42">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x132 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

OFFSET[R], 41, 0, 0
OFFSET[R], 51, 714, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="43">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xcd */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 41, 0, 0
OFFSET[R], 840, 954, 0
SVTCA[Y]
CALL[], 14, 6, 1, 1, 110, 86
SHC[2], 3
SVTCA[X]
CALL[], 15, 17, 5, 31, 13, 87
SHC[2], 3
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="44">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x12c */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 41, 0, 0
OFFSET[R], 844, 950, 0
SVTCA[Y]
CALL[], 14, 6, 1, 1, 170, 86
SHC[2], 3
SVTCA[X]
CALL[], 16, 24, 5, 30, 13, 87
SHC[2], 3

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="45">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xce */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 41, 0, 0
OFFSET[R], 842, 951, 0
SVTCA[Y]
CALL[], 14, 6, 1, 1, 117, 86
SHC[2], 3
SVTCA[X]
CALL[], 15, 18, 5, 30, 13, 87
SHC[2], 3
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="46">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xcf */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 41, 0, 0
OFFSET[R], 837, 950, 0
SVTCA[Y]
CALL[], 14, 6, 1, 1, 144, 86
SHC[2], 3
SHC[2], 4
SVTCA[X]
CALL[], 29, 23, 5, 30, 13, 87
SHC[2], 3
SHC[2], 4
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="47">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x130 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 41, 0, 0
OFFSET[R], 838, 949, 0
SVTCA[Y]
CALL[], 14, 6, 1, 1, 140, 86
SHC[2], 3
SVTCA[X]
CALL[], 17, 23, 5, 30, 13, 87
SHC[2], 3

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="48">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xcc */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 41, 0, 0
OFFSET[R], 839, 955, 0
SVTCA[Y]
CALL[], 14, 6, 1, 1, 108, 86
SHC[2], 3
SVTCA[X]
CALL[], 15, 17, 5, 31, 13, 87
SHC[2], 3
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="49">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x12a */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 41, 0, 0
OFFSET[R], 846, 952, 0
SVTCA[Y]
CALL[], 14, 6, 1, 1, 199, 86
SHC[2], 3
SVTCA[X]
CALL[], 14, 17, 5, 30, 13, 87
SHC[2], 3

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="50">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x12e */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 41, 0, 0
OFFSET[R], 836, 12, 10
SVTCA[Y]
CALL[], 22, 9, 0, 0, 40, 86
SHC[2], 3
SVTCA[X]
CALL[], 17, 33, 5, 36, 13, 87
SHC[2], 3
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="51">
      <instructions>
        <talk>/* VTTTalk glyph 51, char 0x4a (J) */
/* GUI generated Sun Jan 12 05:12:53 2020 */

/* Y direction */
YAnchor(0)
YDist(0,6)
YShift(0,10)
YAnchor(26,2)
YShift(26,18)
YLink(26,25,65)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 51, char 0x4a (J) */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MDAP[R], 0
MDRP[m&gt;RBl], 6
SHP[1], 10
MIAP[R], 26, 2
SHP[1], 18
MIRP[m&gt;RBl], 25, 65
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="52">
      <instructions>
        <talk>/* VTTTalk glyph 52, char 0x4b (K) */
/* GUI generated Thu Jan  9 19:20:27 2020 */

/* Y direction */
YAnchor(30,8)
YShift(30,0)
YLink(30,31,65)
YShift(30,29)
YDist(29,28)
YAnchor(37,2)
YShift(37,1)
YShift(37,18)
YShift(37,42)
YIPAnchor(37,11,30)
YDist(11,12)
YLink(37,36,65)
YShift(36,41)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 52, char 0x4b (K) */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 30, 8
SHP[1], 0
MIRP[m&gt;RBl], 31, 65
SHP[1], 29
SRP0[], 29
MDRP[m&gt;RBl], 28
MIAP[R], 37, 2
SHP[1], 1
SHP[1], 18
SHP[1], 42
SRP2[], 30
IP[], 11
MDAP[R], 11
MDRP[m&gt;RBl], 12
SRP0[], 37
MIRP[m&gt;RBl], 36, 65
SHP[2], 41
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="53">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x136 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 52, 0, 0
OFFSET[R], 797, 1126, 0
SVTCA[Y]
CALL[], 59, 30, 1, 1, -140, 86
SHC[2], 5
SVTCA[X]
CALL[], 56, 62, 30, 36, 44, 87
SHC[2], 5

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="54">
      <instructions>
        <talk>/* VTTTalk glyph 54, char 0x4c (L) */
/* GUI generated Thu Jan  9 19:21:45 2020 */

/* Y direction */
YAnchor(15,2)
YShift(15,1)
YLink(15,14,65)
YAnchor(18,8)
YShift(18,0)
YShift(18,4)
YLink(18,19,65)
YShift(19,5)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 54, char 0x4c (L) */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 15, 2
SHP[1], 1
MIRP[m&gt;RBl], 14, 65
MIAP[R], 18, 8
SHP[1], 0
SHP[1], 4
MIRP[m&gt;RBl], 19, 65
SHP[2], 5
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="55">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x139 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 54, 0, 0
OFFSET[R], 840, 973, 0
SVTCA[Y]
CALL[], 22, 15, 1, 1, 110, 86
SHC[2], 4
SVTCA[X]
CALL[], 23, 25, 14, 16, 11, 87
SHC[2], 4

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="56">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x13d */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 54, 0, 0
OFFSET[R], 776, 1081, -46
SVTCA[Y]
CALL[], 28, 15, 0, 0, 28, 86
SHC[2], 4
SVTCA[X]
CALL[], 25, 29, 14, 44, 11, 87
SHC[2], 4

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="57">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x13b */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 54, 0, 0
OFFSET[R], 797, 1106, 0
SVTCA[Y]
CALL[], 36, 4, 1, 1, -140, 86
SHC[2], 4
SVTCA[X]
CALL[], 33, 39, 14, 33, 11, 87
SHC[2], 4
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="58">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x141 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 54, 0, 0
OFFSET[R], 847, 363, 194
SVTCA[Y]
CALL[], 24, 13, 1, 0, -441, 86
SHC[2], 4
SVTCA[X]
CALL[], 23, 25, 14, 16, 11, 87
SHC[2], 4
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="59">
      <instructions>
        <talk>/* VTTTalk glyph 59, char 0x4d (M) */
/* GUI generated Thu Jan  9 19:25:04 2020 */

/* Y direction */
YAnchor(9,2)
YShift(9,20)
YShift(9,23)
YLink(9,8,65)
YShift(8,39)
YShift(9,37)
YShift(37,1)
YAnchor(26,8)
YShift(26,4)
YShift(26,21)
YShift(26,22)
YShift(26,31)
YLink(26,27,65)
YShift(27,32)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 59, char 0x4d (M) */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 9, 2
SHP[1], 20
SHP[1], 23
MIRP[m&gt;RBl], 8, 65
SHP[2], 39
SHP[1], 37
SRP1[], 37
SHP[1], 1
MIAP[R], 26, 8
SHP[1], 4
SHP[1], 21
SHP[1], 22
SHP[1], 31
MIRP[m&gt;RBl], 27, 65
SHP[2], 32
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="60">
      <instructions>
        <talk>/* VTTTalk glyph 60, char 0x4e (N) */
/* GUI generated Thu Jan  9 19:26:48 2020 */

/* Y direction */
YAnchor(6,2)
YShift(6,14)
YShift(6,17)
YShift(6,27)
YLink(6,5,65)
YShift(5,26)
YAnchor(20,8)
YShift(20,0)
YShift(20,16)
YLink(20,21,65)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 60, char 0x4e (N) */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 6, 2
SHP[1], 14
SHP[1], 17
SHP[1], 27
MIRP[m&gt;RBl], 5, 65
SHP[2], 26
MIAP[R], 20, 8
SHP[1], 0
SHP[1], 16
MIRP[m&gt;RBl], 21, 65
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="61">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x143 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 60, 0, 0
OFFSET[R], 840, 1402, 0
SVTCA[Y]
CALL[], 30, 27, 1, 1, 110, 86
SHC[2], 4
SVTCA[X]
CALL[], 31, 33, 20, 32, 29, 87
SHC[2], 4
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="62">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x147 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 60, 0, 0
OFFSET[R], 843, 1398, 0
SVTCA[Y]
CALL[], 30, 27, 1, 1, 113, 86
SHC[2], 4
SVTCA[X]
CALL[], 31, 35, 20, 32, 29, 87
SHC[2], 4
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="63">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x145 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 60, 0, 0
OFFSET[R], 797, 1218, 0
SVTCA[Y]
CALL[], 44, 20, 1, 1, -140, 86
SHC[2], 4
SVTCA[X]
CALL[], 41, 47, 20, 32, 29, 87
SHC[2], 4

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="64">
      <instructions>
        <talk>/* VTTTalk glyph 64, char 0x14a */
/* GUI generated Sun Jan 12 05:15:46 2020 */

/* Y direction */
YAnchor(0)
YDist(0,12)
YAnchor(23,2)
YShift(23,31)
YShift(23,37)
YShift(23,47)
YLink(23,22,65)
YShift(22,46)
YAnchor(40,8)
YShift(40,36)
YLink(40,41,65)

/* X direction */
XAnchor(31)
XDist(31,30)
XShift(30,17)
XAnchor(37)
XDist(37,38)

Smooth()

</talk>
        <assembly>/* TT glyph 64, char 0x14a */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MDAP[R], 0
MDRP[m&gt;RBl], 12
MIAP[R], 23, 2
SHP[1], 31
SHP[1], 37
SHP[1], 47
MIRP[m&gt;RBl], 22, 65
SHP[2], 46
MIAP[R], 40, 8
SHP[1], 36
MIRP[m&gt;RBl], 41, 65
SVTCA[X]
MDAP[R], 31
MDRP[m&gt;RBl], 30
SHP[2], 17
MDAP[R], 37
MDRP[m&gt;RBl], 38
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="65">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xd1 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 60, 0, 0
OFFSET[R], 845, 1399, 0
SVTCA[Y]
CALL[], 30, 27, 1, 1, 144, 86
SHC[2], 4
SVTCA[X]
CALL[], 38, 50, 20, 32, 29, 87
SHC[2], 4

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="66">
      <instructions>
        <talk>/* VTTTalk Unicode 0x4f (O) */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 0 9 */
/* CVT 10 3 */
/* Min and Max */
YAnchor(0,9)	/* min, CVT */
YAnchor(10,3)	/* max, CVT */

/* CVTs - beginning */
/* CVTs - end */


/* YDir: Stroke #0 */
YLink(10,30,68) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YLink(0,20,68) /*perpendicular to the stroke*/

Smooth()
</talk>
        <assembly>/* TT glyph 66, char 0x4f (O) */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 0, 9
MIAP[R], 10, 3
MIRP[m&gt;RBl], 30, 68
SRP0[], 0
MIRP[m&gt;RBl], 20, 68
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="67">
      <instructions>
        <talk>/* VTTTalk glyph 67, char 0xa74e */
/* GUI generated Thu Jan  9 19:34:23 2020 */

/* Y direction */
YAnchor(0,9)
YShift(0,26)
YLink(0,32,68)
YShift(32,49)
YAnchor(10,3)
YShift(10,16)
YLink(10,39,68)
YShift(39,59)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 67, char 0xa74e */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 0, 9
SHP[2], 26
MIRP[m&gt;RBl], 32, 68
SHP[2], 49
MIAP[R], 10, 3
SHP[1], 16
MIRP[m&gt;RBl], 39, 68
SHP[2], 59
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="68">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xd3 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 66, 0, 0
OFFSET[R], 840, 1362, 0
SVTCA[Y]
CALL[], 40, 10, 1, 1, 83, 86
SHC[2], 2
SVTCA[X]
CALL[], 41, 43, 5, 32, 15, 87
SHC[2], 2

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="69">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x14e */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 66, 0, 0
OFFSET[R], 844, 1358, 0
SVTCA[Y]
CALL[], 40, 10, 1, 1, 143, 86
SHC[2], 2
SVTCA[X]
CALL[], 42, 50, 5, 31, 15, 87
SHC[2], 2

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="70">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xd4 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 66, 0, 0
OFFSET[R], 842, 1359, 0
SVTCA[Y]
CALL[], 40, 10, 1, 1, 90, 86
SHC[2], 2
SVTCA[X]
CALL[], 41, 44, 5, 31, 15, 87
SHC[2], 2

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="71">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xd6 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 66, 0, 0
OFFSET[R], 837, 1358, 0
SVTCA[Y]
CALL[], 40, 10, 1, 1, 117, 86
SHC[2], 2
SHC[2], 3
SVTCA[X]
CALL[], 55, 49, 5, 31, 15, 87
SHC[2], 2
SHC[2], 3
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="72">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xd2 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 66, 0, 0
OFFSET[R], 839, 1363, 0
SVTCA[Y]
CALL[], 40, 10, 1, 1, 81, 86
SHC[2], 2
SVTCA[X]
CALL[], 41, 43, 5, 32, 15, 87
SHC[2], 2

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="73">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x150 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 66, 0, 0
OFFSET[R], 841, 1358, 0
SVTCA[Y]
CALL[], 40, 10, 1, 1, 83, 86
SHC[2], 2
SHC[2], 3
SVTCA[X]
CALL[], 41, 47, 5, 31, 15, 87
SHC[2], 2
SHC[2], 3
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="74">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x14c */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 66, 0, 0
OFFSET[R], 846, 1360, 0
SVTCA[Y]
CALL[], 40, 10, 1, 1, 172, 86
SHC[2], 2
SVTCA[X]
CALL[], 40, 43, 5, 31, 15, 87
SHC[2], 2

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="75">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x1ea */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 66, 0, 0
OFFSET[R], 799, 1193, -44
SVTCA[Y]
CALL[], 46, 0, 0, 0, 23, 86
SHC[2], 2
SVTCA[X]
CALL[], 43, 55, 5, 32, 15, 87
SHC[2], 2

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="76">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xd8 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 66, 0, 0
OFFSET[R], 848, 758, 6
SVTCA[Y]
CALL[], 40, 0, 2, 0, 34, 86
SHC[2], 2
SVTCA[X]
CALL[], 41, 43, 5, 32, 15, 87
SHC[2], 2

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="77">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x1fe */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 76, 0, 0
OFFSET[R], 840, 1362, 0
SVTCA[Y]
CALL[], 44, 10, 1, 1, 83, 86
SHC[2], 3
SVTCA[X]
CALL[], 45, 47, 5, 32, 15, 87
SHC[2], 3
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="78">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xd5 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 66, 0, 0
OFFSET[R], 845, 1359, 0
SVTCA[Y]
CALL[], 40, 10, 1, 1, 117, 86
SHC[2], 2
SVTCA[X]
CALL[], 48, 60, 5, 31, 15, 87
SHC[2], 2
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="79">
      <instructions>
        <talk>/* VTTTalk glyph 79, char 0x152 */
/* GUI generated Sun Jan 12 05:21:35 2020 */

/* Y direction */
YAnchor(0,8)
YShift(0,40)
YLink(40,41,65)
YShift(41,13)
YAnchor(10,2)
YShift(10,37)
YLink(37,36,65)
YShift(36,21)
YIPAnchor(10,49,0)
YShift(49,53)
YLink(49,50,67)
YShift(50,54)

/* X direction */
XAnchor(54)
XDist(54,55)
XInterpolate(55,51,54)

Smooth()

</talk>
        <assembly>/* TT glyph 79, char 0x152 */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 0, 8
SHP[2], 40
SRP0[], 40
MIRP[m&gt;RBl], 41, 65
SHP[2], 13
MIAP[R], 10, 2
SHP[1], 37
SRP0[], 37
MIRP[m&gt;RBl], 36, 65
SHP[2], 21
SRP1[], 10
SRP2[], 0
IP[], 49
MDAP[R], 49
SHP[1], 53
MIRP[m&gt;RBl], 50, 67
SHP[2], 54
SVTCA[X]
MDAP[R], 54
MDRP[m&gt;RBl], 55
IP[], 51
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="80">
      <instructions>
        <talk>/* VTTTalk glyph 80, char 0x50 (P) */
/* GUI generated Thu Jan  9 19:38:11 2020 */

/* Y direction */
YAnchor(31,2)
YShift(31,1)
YLink(31,30,65)
YShift(30,24)
YAnchor(33,8)
YShift(33,15)
YLink(33,34,65)
YIPAnchor(31,10,33)
YLink(10,16,68)

/* X direction */

Smooth()


</talk>
        <assembly>/* TT glyph 80, char 0x50 (P) */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 31, 2
SHP[1], 1
MIRP[m&gt;RBl], 30, 65
SHP[2], 24
MIAP[R], 33, 8
SHP[1], 15
MIRP[m&gt;RBl], 34, 65
SRP2[], 31
IP[], 10
MDAP[R], 10
MIRP[m&gt;RBl], 16, 68
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="81">
      <instructions>
        <talk>/* VTTTalk glyph 81, char 0xde */
/* GUI generated Thu Jan  9 19:43:23 2020 */

/* Y direction */
YAnchor(31,8)
YShift(31,17)
YLink(31,32,65)
YAnchor(38,2)
YShift(38,2)
YLink(38,37,65)
YIPAnchor(38,12,31)
YInterpolate(38,3,12)
YLink(3,30,65)
YLink(12,22,67)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 81, char 0xde */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 31, 8
SHP[1], 17
MIRP[m&gt;RBl], 32, 65
MIAP[R], 38, 2
SHP[1], 2
MIRP[m&gt;RBl], 37, 65
SRP2[], 31
IP[], 12
MDAP[R], 12
SRP2[], 38
IP[], 3
SRP0[], 3
MIRP[m&gt;RBl], 30, 65
SRP0[], 12
MIRP[m&gt;RBl], 22, 67
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="82">
      <instructions>
        <talk>/* VTTTalk glyph 82, char 0x51 (Q) */
/* GUI generated Sun Jan 12 05:48:20 2020 */

/* Y direction */
YAnchor(11,3)
YLink(11,37,68)
YAnchor(21,9)
YLink(21,27,68)
YDelta(27,1@10..17)
YShift(21,0)
YDist(0,51)

/* X direction */

Smooth()


</talk>
        <assembly>/* TT glyph 82, char 0x51 (Q) */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 11, 3
MIRP[m&gt;RBl], 37, 68
MIAP[R], 21, 9
MIRP[m&lt;RWh], 27, 68
CALL[], 27, 64, 10, 17, 72
SHP[1], 0
SRP0[], 0
MDRP[m&gt;RBl], 51
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="83">
      <instructions>
        <talk>/* VTTTalk glyph 83, char 0x52 (R) */
/* GUI generated Thu Jan  9 19:55:20 2020 */

/* Y direction */
YAnchor(40,8)
YShift(40,22)
YShift(40,39)
YLink(40,41,65)
YAnchor(47,2)
YShift(47,23)
YInterpolate(40,6,47)
YLink(6,11,68)
YLink(47,46,65)
YShift(46,20)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 83, char 0x52 (R) */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 40, 8
SHP[1], 22
SHP[1], 39
MIRP[m&gt;RBl], 41, 65
MIAP[R], 47, 2
SHP[1], 23
SRP2[], 40
IP[], 6
SRP0[], 6
MIRP[m&gt;RBl], 11, 68
SRP0[], 47
MIRP[m&gt;RBl], 46, 65
SHP[2], 20
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="84">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x154 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 83, 0, 0
OFFSET[R], 840, 1211, 0
SVTCA[Y]
CALL[], 49, 47, 1, 1, 110, 86
SHC[2], 3
SVTCA[X]
CALL[], 50, 52, 40, 60, 44, 87
SHC[2], 3
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="85">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x158 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 83, 0, 0
OFFSET[R], 843, 1207, 0
SVTCA[Y]
CALL[], 49, 47, 1, 1, 113, 86
SHC[2], 3
SVTCA[X]
CALL[], 50, 54, 40, 60, 44, 87
SHC[2], 3
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="86">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x156 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 83, 0, 0
OFFSET[R], 797, 1097, 0
SVTCA[Y]
CALL[], 63, 40, 1, 1, -140, 86
SHC[2], 3
SVTCA[X]
CALL[], 60, 66, 40, 67, 44, 87
SHC[2], 3

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="87">
      <instructions>
        <talk>/* VTTTalk glyph 87, char 0x53 (S) */
/* GUI generated Sun Jan 12 12:53:27 2020 */

/* Y direction */
YAnchor(0,9)
YLink(0,9,68)
YAnchor(25,3)
YShift(25,30)
YLink(25,37,68)
YInterpolate(0,44,25)
YShift(44,17)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 87, char 0x53 (S) */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 0, 9
MIRP[m&gt;RBl], 9, 68
MIAP[R], 25, 3
SHP[1], 30
MIRP[m&gt;RBl], 37, 68
SRP2[], 0
IP[], 44
SRP1[], 44
SHP[1], 17
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="88">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x15a */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 87, 0, 0
OFFSET[R], 840, 1177, 0
SVTCA[Y]
CALL[], 53, 25, 1, 1, 83, 86
SHC[2], 1
SVTCA[X]
CALL[], 54, 56, 21, 33, 49, 87
SHC[2], 1

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="89">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x160 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 87, 0, 0
OFFSET[R], 843, 1173, 0
SVTCA[Y]
CALL[], 53, 25, 1, 1, 86, 86
SHC[2], 1
SVTCA[X]
CALL[], 54, 58, 21, 32, 49, 87
SHC[2], 1

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="90">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x15e */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 87, 0, 0
OFFSET[R], 798, 903, 0
SVTCA[Y]
CALL[], 72, 0, 0, 0, 27, 86
SHC[2], 1
SVTCA[X]
CALL[], 56, 77, 21, 25, 49, 87
SHC[2], 1

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="91">
      <instructions>
        <talk>/* VTTTalk glyph 91, char 0x1e9e */
/* GUI generated Thu Jan  9 19:59:25 2020 */

/* Y direction */
YAnchor(39,3)
YLink(39,25,68)
YAnchor(53,8)
YShift(53,33)
YLink(53,54,65)
YShift(53,0)
YLink(0,10,68)
YInterpolate(39,18,53)
YShift(18,19)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 91, char 0x1e9e */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 39, 3
MIRP[m&gt;RBl], 25, 68
MIAP[R], 53, 8
SHP[1], 33
MIRP[m&gt;RBl], 54, 65
SHP[1], 0
SRP0[], 0
MIRP[m&gt;RBl], 10, 68
SRP1[], 39
SRP2[], 53
IP[], 18
SRP1[], 18
SHP[1], 19
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="92">
      <instructions>
        <talk>/* VTTTalk glyph 92, char 0x54 (T) */
/* GUI generated Thu Jan  9 20:02:00 2020 */

/* Y direction */
YAnchor(12,2)
YShift(12,8)
YShift(12,16)
YLink(12,2,67)
YShift(2,30)
YAnchor(32,8)
YShift(32,31)
YLink(32,33,65)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 92, char 0x54 (T) */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 12, 2
SHP[1], 8
SHP[1], 16
MIRP[m&gt;RBl], 2, 67
SHP[2], 30
MIAP[R], 32, 8
SHP[1], 31
MIRP[m&gt;RBl], 33, 65
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="93">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x166 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 92, 0, 0
OFFSET[R], 806, 760, 172
SVTCA[Y]
CALL[], 38, 7, 1, 1, -315, 86
SHC[2], 2
SVTCA[X]
CALL[], 37, 40, 7, 34, 20, 87
SHC[2], 2
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="94">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x164 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 92, 0, 0
OFFSET[R], 843, 1359, 0
SVTCA[Y]
CALL[], 37, 12, 1, 1, 113, 86
SHC[2], 2
SVTCA[X]
CALL[], 38, 42, 7, 33, 20, 87
SHC[2], 2

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="95">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x162 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 92, 0, 0
OFFSET[R], 798, 1125, 0
SVTCA[Y]
CALL[], 56, 0, 1, 0, -20, 86
SHC[2], 2
SVTCA[X]
CALL[], 40, 61, 7, 31, 20, 87
SHC[2], 2
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="96">
      <instructions>
        <talk>/* VTTTalk glyph 96, char 0x55 (U) */
/* GUI generated Thu Jan  9 20:03:31 2020 */

/* Y direction */
YAnchor(0,9)
YLink(0,13,68)
YAnchor(29,2)
YShift(29,9)
YShift(29,19)
YShift(29,34)
YLink(29,28,65)
YShift(28,33)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 96, char 0x55 (U) */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 0, 9
MIRP[m&gt;RBl], 13, 68
MIAP[R], 29, 2
SHP[1], 9
SHP[1], 19
SHP[1], 34
MIRP[m&gt;RBl], 28, 65
SHP[2], 33
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="97">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xda */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 96, 0, 0
OFFSET[R], 840, 1431, 0
SVTCA[Y]
CALL[], 37, 34, 1, 1, 110, 86
SHC[2], 3
SVTCA[X]
CALL[], 38, 40, 28, 36, 36, 87
SHC[2], 3

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="98">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x16c */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 96, 0, 0
OFFSET[R], 844, 1427, 0
SVTCA[Y]
CALL[], 37, 34, 1, 1, 170, 86
SHC[2], 3
SVTCA[X]
CALL[], 39, 47, 28, 35, 36, 87
SHC[2], 3
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="99">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xdb */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 96, 0, 0
OFFSET[R], 842, 1428, 0
SVTCA[Y]
CALL[], 37, 8, 1, 0, 155, 86
SHC[2], 3
SVTCA[X]
CALL[], 38, 41, 28, 35, 36, 87
SHC[2], 3
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="100">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xdc */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 96, 0, 0
OFFSET[R], 837, 1427, 0
SVTCA[Y]
CALL[], 37, 34, 1, 1, 144, 86
SHC[2], 3
SHC[2], 4
SVTCA[X]
CALL[], 52, 46, 28, 35, 36, 87
SHC[2], 3
SHC[2], 4

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="101">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xd9 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 96, 0, 0
OFFSET[R], 839, 1432, 0
SVTCA[Y]
CALL[], 37, 34, 1, 1, 108, 86
SHC[2], 3
SVTCA[X]
CALL[], 38, 40, 28, 36, 36, 87
SHC[2], 3

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="102">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x170 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 96, 0, 0
OFFSET[R], 841, 1427, 0
SVTCA[Y]
CALL[], 37, 8, 1, 0, 148, 86
SHC[2], 3
SHC[2], 4
SVTCA[X]
CALL[], 38, 44, 28, 35, 36, 87
SHC[2], 3
SHC[2], 4

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="103">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x16a */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 96, 0, 0
OFFSET[R], 846, 1429, 0
SVTCA[Y]
CALL[], 37, 8, 1, 0, 237, 86
SHC[2], 3
SVTCA[X]
CALL[], 37, 40, 28, 35, 36, 87
SHC[2], 3

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="104">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x172 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 96, 0, 0
OFFSET[R], 799, 1450, 62
SVTCA[Y]
CALL[], 43, 0, 0, 0, 129, 86
SHC[2], 3
SVTCA[X]
CALL[], 40, 52, 28, 44, 36, 87
SHC[2], 3
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="105">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x16e */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 96, 0, 0
OFFSET[R], 780, 1246, 467
SVTCA[Y]
CALL[], 37, 34, 1, 1, 177, 86
SHC[2], 3
SHC[2], 4
SVTCA[X]
CALL[], 41, 47, 28, 35, 36, 87
SHC[2], 3
SHC[2], 4
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="106">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x168 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 96, 0, 0
OFFSET[R], 845, 1428, 0
SVTCA[Y]
CALL[], 37, 34, 1, 1, 144, 86
SHC[2], 3
SVTCA[X]
CALL[], 45, 57, 28, 35, 36, 87
SHC[2], 3
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="107">
      <instructions>
        <talk>/* VTTTalk glyph 107, char 0x56 (V) */
/* GUI generated Thu Jan  9 20:05:26 2020 */

/* Y direction */
YAnchor(0,9)
YAnchor(10,2)
YShift(10,2)
YShift(10,6)
YShift(10,15)
YLink(10,9,65)
YShift(9,14)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 107, char 0x56 (V) */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 0, 9
MIAP[R], 10, 2
SHP[1], 2
SHP[1], 6
SHP[1], 15
MIRP[m&gt;RBl], 9, 65
SHP[2], 14
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="108">
      <instructions>
        <talk>/* VTTTalk glyph 108, char 0x57 (W) */
/* GUI generated Thu Jan  9 20:31:10 2020 */

/* Y direction */
YAnchor(0,9)
YShift(0,8)
YAnchor(18,2)
YShift(18,2)
YShift(18,9)
YShift(18,14)
YShift(18,23)
YShift(18,28)
YLink(18,17,65)
YShift(17,5)
YShift(17,22)
YShift(17,27)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 108, char 0x57 (W) */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 0, 9
SHP[2], 8
MIAP[R], 18, 2
SHP[1], 2
SHP[1], 9
SHP[1], 14
SHP[1], 23
SHP[1], 28
MIRP[m&gt;RBl], 17, 65
SHP[2], 5
SHP[2], 22
SHP[2], 27
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="109">
      <instructions>
        <talk>/* VTTTalk glyph 109, char 0xa760 */
/* GUI generated Thu Jan  9 20:34:02 2020 */

/* Y direction */
YAnchor(0,9)
YShift(0,8)
YAnchor(15)
YShift(15,1)
YShift(15,9)
YShift(15,20)
YShift(15,25)
YShift(15,45)
YLink(15,14,65)
YShift(14,5)
YShift(14,19)
YShift(14,24)
YAnchor(28)
YDist(28,34)
YShift(28,39)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 109, char 0xa760 */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 0, 9
SHP[2], 8
MDAP[R], 15
SHP[1], 1
SHP[1], 9
SHP[1], 20
SHP[1], 25
SHP[1], 45
MIRP[m&gt;RBl], 14, 65
SHP[2], 5
SHP[2], 19
SHP[2], 24
MDAP[R], 28
MDRP[m&gt;RBl], 34
SHP[1], 39
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="110">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x1e82 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 108, 0, 0
OFFSET[R], 840, 1603, 0
SVTCA[Y]
CALL[], 31, 23, 1, 1, 110, 86
SHC[2], 5
SVTCA[X]
CALL[], 32, 34, 17, 31, 30, 87
SHC[2], 5
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="111">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x174 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 108, 0, 0
OFFSET[R], 842, 1600, 0
SVTCA[Y]
CALL[], 31, 23, 1, 1, 117, 86
SHC[2], 5
SVTCA[X]
CALL[], 32, 35, 17, 31, 30, 87
SHC[2], 5

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="112">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x1e84 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 108, 0, 0
OFFSET[R], 837, 1599, 0
SVTCA[Y]
CALL[], 31, 28, 1, 1, 144, 86
SHC[2], 5
SHC[2], 6
SVTCA[X]
CALL[], 46, 40, 17, 31, 30, 87
SHC[2], 5
SHC[2], 6
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="113">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x1e80 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 108, 0, 0
OFFSET[R], 839, 1604, 0
SVTCA[Y]
CALL[], 31, 28, 1, 1, 108, 86
SHC[2], 5
SVTCA[X]
CALL[], 32, 34, 17, 32, 30, 87
SHC[2], 5
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="114">
      <instructions>
        <talk>/* VTTTalk glyph 114, char 0x1f7 */
/* GUI generated Thu Jan  9 20:36:02 2020 */

/* Y direction */
YAnchor(27,8)
YShift(27,0)
YLink(27,28,65)
YAnchor(34,2)
YShift(34,1)
YShift(34,16)
YInterpolate(27,4,34)
YDist(4,5)
YLink(34,33,65)
YShift(33,15)

/* X direction */

Smooth()


</talk>
        <assembly>/* TT glyph 114, char 0x1f7 */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 27, 8
SHP[1], 0
MIRP[m&gt;RBl], 28, 65
MIAP[R], 34, 2
SHP[1], 1
SHP[1], 16
SRP2[], 27
IP[], 4
SRP0[], 4
MDRP[m&gt;RBl], 5
SRP0[], 34
MIRP[m&gt;RBl], 33, 65
SHP[2], 15
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="115">
      <instructions>
        <talk>/* VTTTalk glyph 115, char 0x58 (X) */
/* GUI generated Thu Jan  9 20:38:32 2020 */

/* Y direction */
YAnchor(10,2)
YShift(10,1)
YShift(10,5)
YShift(10,15)
YLink(10,9,65)
YShift(9,14)
YAnchor(23,8)
YShift(23,0)
YShift(23,4)
YShift(23,18)
YLink(23,24,65)
YShift(24,19)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 115, char 0x58 (X) */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 10, 2
SHP[1], 1
SHP[1], 5
SHP[1], 15
MIRP[m&gt;RBl], 9, 65
SHP[2], 14
MIAP[R], 23, 8
SHP[1], 0
SHP[1], 4
SHP[1], 18
MIRP[m&gt;RBl], 24, 65
SHP[2], 19
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="116">
      <instructions>
        <talk>/* VTTTalk glyph 116, char 0x59 (Y) */
/* GUI generated Thu Jan  9 20:40:00 2020 */

/* Y direction */
YAnchor(19,2)
YShift(19,3)
YShift(19,8)
YShift(19,14)
YLink(19,18,65)
YShift(18,13)
YAnchor(22,8)
YShift(22,0)
YLink(22,23,65)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 116, char 0x59 (Y) */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 19, 2
SHP[1], 3
SHP[1], 8
SHP[1], 14
MIRP[m&gt;RBl], 18, 65
SHP[2], 13
MIAP[R], 22, 8
SHP[1], 0
MIRP[m&gt;RBl], 23, 65
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="117">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xdd */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 116, 0, 0
OFFSET[R], 840, 1407, 0
SVTCA[Y]
CALL[], 27, 14, 1, 1, 110, 86
SHC[2], 4
SVTCA[X]
CALL[], 28, 30, 18, 34, 16, 87
SHC[2], 4
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="118">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x176 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 116, 0, 0
OFFSET[R], 842, 1404, 0
SVTCA[Y]
CALL[], 27, 19, 1, 1, 117, 86
SHC[2], 4
SVTCA[X]
CALL[], 28, 31, 18, 34, 16, 87
SHC[2], 4

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="119">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x178 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 116, 0, 0
OFFSET[R], 837, 1403, 0
SVTCA[Y]
CALL[], 27, 14, 1, 1, 144, 86
SHC[2], 4
SHC[2], 5
SVTCA[X]
CALL[], 42, 36, 18, 34, 16, 87
SHC[2], 4
SHC[2], 5

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="120">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x1ef2 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 116, 0, 0
OFFSET[R], 839, 1408, 0
SVTCA[Y]
CALL[], 27, 14, 1, 1, 108, 86
SHC[2], 4
SVTCA[X]
CALL[], 28, 30, 18, 34, 16, 87
SHC[2], 4
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="121">
      <instructions>
        <talk>/* VTTTalk glyph 121, char 0x5a (Z) */
/* GUI generated Thu Jan  9 20:41:38 2020 */

/* Y direction */
YAnchor(5,8)
YShift(5,0)
YLink(5,28,67)
YAnchor(24,2)
YShift(24,7)
YLink(24,9,67)
YShift(24,21)
YShift(24,26)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 121, char 0x5a (Z) */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 5, 8
SHP[1], 0
MIRP[m&gt;RBl], 28, 67
MIAP[R], 24, 2
SHP[1], 7
MIRP[m&gt;RBl], 9, 67
SHP[1], 21
SHP[1], 26
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="122">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x179 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 121, 0, 0
OFFSET[R], 840, 1260, 0
SVTCA[Y]
CALL[], 42, 24, 1, 1, 110, 86
SHC[2], 1
SVTCA[X]
CALL[], 43, 45, 5, 32, 38, 87
SHC[2], 1
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="123">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x17d */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 121, 0, 0
OFFSET[R], 843, 1256, 0
SVTCA[Y]
CALL[], 42, 24, 1, 1, 113, 86
SHC[2], 1
SVTCA[X]
CALL[], 43, 47, 5, 32, 38, 87
SHC[2], 1
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="124">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x17b */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 121, 0, 0
OFFSET[R], 838, 1255, 0
SVTCA[Y]
CALL[], 42, 24, 1, 1, 140, 86
SHC[2], 1
SVTCA[X]
CALL[], 45, 51, 5, 32, 38, 87
SHC[2], 1
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="125">
      <instructions>
        <talk>/* VTTTalk glyph 125, char 0x126 */
/* GUI generated Thu Jan  9 21:43:16 2020 */

/* Y direction */
YAnchor(12,8)
YShift(12,0)
YShift(12,4)
YShift(12,17)
YLink(12,13,65)
YShift(13,18)
YAnchor(24,2)
YShift(24,1)
YShift(24,5)
YShift(24,29)
YIPAnchor(24,33,8,12)
YLink(33,32,67)
YLink(8,9,67)
YLink(24,23,65)
YShift(23,28)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 125, char 0x126 */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 12, 8
SHP[1], 0
SHP[1], 4
SHP[1], 17
MIRP[m&gt;RBl], 13, 65
SHP[2], 18
MIAP[R], 24, 2
SHP[1], 1
SHP[1], 5
SHP[1], 29
SRP2[], 12
IP[], 33
IP[], 8
MDAP[R], 33
MDAP[R], 8
SRP0[], 33
MIRP[m&gt;RBl], 32, 67
SRP0[], 8
MIRP[m&gt;RBl], 9, 67
SRP0[], 24
MIRP[m&gt;RBl], 23, 65
SHP[2], 28
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="126">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x1b5 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 121, 0, 0
OFFSET[R], 864, 637, 167
SVTCA[Y]
CALL[], 42, 37, 1, 0, 290, 86
SHC[2], 1
SVTCA[X]
CALL[], 42, 45, 5, 31, 38, 87
SHC[2], 1

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="127">
      <instructions>
        <talk>/* VTTTalk glyph 127, char 0x1f6 */
/* GUI generated Sun Jan 12 12:56:53 2020 */

/* Y direction */
YAnchor(41,8)
YShift(41,37)
YLink(41,42,65)
YShift(41,0)
YLink(0,13,68)
YAnchor(54,2)
YShift(54,6)
YShift(54,39)
YShift(54,48)
YInterpolate(41,33,24,54)
YLink(33,34,67)
YLink(54,55,65)
YShift(55,47)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 127, char 0x1f6 */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 41, 8
SHP[1], 37
MIRP[m&gt;RBl], 42, 65
SHP[1], 0
SRP0[], 0
MIRP[m&gt;RBl], 13, 68
MIAP[R], 54, 2
SHP[1], 6
SHP[1], 39
SHP[1], 48
SRP2[], 41
IP[], 33
IP[], 24
SRP0[], 33
MIRP[m&gt;RBl], 34, 67
SRP0[], 54
MIRP[m&gt;RBl], 55, 65
SHP[2], 47
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="128">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x1fa */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 10, 0, 0
OFFSET[R], 840, 1693, 0
SVTCA[Y]
CALL[], 49, 11, 0, 0, 133, 86
SHC[2], 6
SVTCA[X]
CALL[], 48, 50, 42, 53, 41, 87
SHC[2], 6
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="129">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x232 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 116, 0, 0
OFFSET[R], 846, 1405, 0
SVTCA[Y]
CALL[], 27, 19, 1, 1, 199, 86
SHC[2], 4
SVTCA[X]
CALL[], 27, 30, 18, 34, 16, 87
SHC[2], 4

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="130">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x23d */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 54, 0, 0
OFFSET[R], 806, 344, 173
SVTCA[Y]
CALL[], 22, 10, 1, 0, 262, 86
SHC[2], 4
SVTCA[X]
CALL[], 22, 25, 14, 15, 11, 87
SHC[2], 4

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="131">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x1e8e */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 116, 0, 0
OFFSET[R], 838, 1402, 0
SVTCA[Y]
CALL[], 27, 14, 1, 1, 140, 86
SHC[2], 4
SVTCA[X]
CALL[], 30, 36, 18, 34, 16, 87
SHC[2], 4
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="132">
      <instructions>
        <talk>/* VTTTalk glyph 132, char 0x2c62 */
/* GUI generated Mon Jan 13 17:02:31 2020 */

/* Y direction */
YAnchor(4,8)
YShift(4,0)
YLink(4,19,65)
YShift(4,21)
YAnchor(15,2)
YShift(15,1)
YLink(15,14,65)
YIPAnchor(15,22,4)
YShift(22,26)
YDist(22,38)
YShift(38,33)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 132, char 0x2c62 */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 4, 8
SHP[1], 0
MIRP[m&gt;RBl], 19, 65
SHP[1], 21
MIAP[R], 15, 2
SHP[1], 1
MIRP[m&gt;RBl], 14, 65
SRP2[], 4
IP[], 22
MDAP[R], 22
SHP[1], 26
MDRP[m&gt;RBl], 38
SHP[2], 33
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="133">
      <instructions>
        <talk>/* VTTTalk glyph 133, char 0xa732 */
/* GUI generated Thu Jan  9 21:54:04 2020 */

/* Y direction */
YAnchor(15,3)
YShift(15,1)
YShift(15,23)
YShift(15,36)
YAnchor(50,8)
YShift(50,0)
YShift(50,4)
YShift(50,25)
YShift(50,55)
YShift(50,60)
YInterpolate(50,42,15)
YShift(42,46)
YLink(42,43,67)
YShift(43,47)
YLink(50,51,65)
YShift(51,56)
YShift(51,61)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 133, char 0xa732 */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 15, 3
SHP[1], 1
SHP[1], 23
SHP[1], 36
MIAP[R], 50, 8
SHP[1], 0
SHP[1], 4
SHP[1], 25
SHP[1], 55
SHP[1], 60
SRP2[], 15
IP[], 42
SRP1[], 42
SHP[1], 46
SRP0[], 42
MIRP[m&gt;RBl], 43, 67
SHP[2], 47
SRP0[], 50
MIRP[m&gt;RBl], 51, 65
SHP[2], 56
SHP[2], 61
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="134">
      <instructions>
        <talk>/* VTTTalk glyph 134, char 0xa734 */
/* GUI generated Thu Jan  9 21:57:53 2020 */

/* Y direction */
YAnchor(34,3)
YShift(34,60)
YShift(34,10)
YLink(10,49,68)
YAnchor(72,8)
YShift(72,20)
YShift(72,59)
YShift(72,67)
YShift(72,0)
YLink(0,40,68)
YInterpolate(72,63,34)
YLink(63,64,67)
YLink(72,73,65)
YShift(73,68)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 134, char 0xa734 */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 34, 3
SHP[1], 60
SHP[1], 10
SRP0[], 10
MIRP[m&gt;RBl], 49, 68
MIAP[R], 72, 8
SHP[1], 20
SHP[1], 59
SHP[1], 67
SHP[1], 0
SRP0[], 0
MIRP[m&gt;RBl], 40, 68
SRP1[], 72
SRP2[], 34
IP[], 63
SRP0[], 63
MIRP[m&gt;RBl], 64, 67
SRP0[], 72
MIRP[m&gt;RBl], 73, 65
SHP[2], 68
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="135">
      <instructions>
        <talk>/* VTTTalk glyph 135, char 0xa736 */
/* GUI generated Sun Jan 12 05:55:03 2020 */

/* Y direction */
YAnchor(4,8)
YShift(4,0)
YLink(4,5,65)
YShift(4,23)
YLink(23,36,68)
YAnchor(15,2)
YShift(15,1)
YShift(15,20)
YShift(15,32)
YShift(15,41)
YInterpolate(4,9,15)
YLink(9,10,67)
YLink(15,14,65)
YShift(14,19)

/* X direction */
XAnchor(42)
XDist(42,41)

Smooth()
</talk>
        <assembly>/* TT glyph 135, char 0xa736 */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 4, 8
SHP[1], 0
MIRP[m&gt;RBl], 5, 65
SHP[1], 23
SRP0[], 23
MIRP[m&gt;RBl], 36, 68
MIAP[R], 15, 2
SHP[1], 1
SHP[1], 20
SHP[1], 32
SHP[1], 41
SRP2[], 4
IP[], 9
SRP0[], 9
MIRP[m&gt;RBl], 10, 67
SRP0[], 15
MIRP[m&gt;RBl], 14, 65
SHP[2], 19
SVTCA[X]
MDAP[R], 42
MDRP[m&gt;RBl], 41
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="136">
      <instructions>
        <talk>/* VTTTalk glyph 136, char 0xa738 */
/* GUI generated Thu Jan  9 22:02:48 2020 */

/* Y direction */
YAnchor(20,8)
YShift(20,0)
YLink(20,21,65)
YShift(20,30)
YShift(20,34)
YAnchor(27,2)
YLink(27,26,65)
YShift(27,35)
YShift(27,10)
YShift(10,31)
YInterpolate(20,16,27)
YLink(16,17,67)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 136, char 0xa738 */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 20, 8
SHP[1], 0
MIRP[m&gt;RBl], 21, 65
SHP[1], 30
SHP[1], 34
MIAP[R], 27, 2
MIRP[m&gt;RBl], 26, 65
SHP[1], 35
SHP[1], 10
SRP1[], 10
SHP[1], 31
SRP1[], 20
SRP2[], 27
IP[], 16
SRP0[], 16
MIRP[m&gt;RBl], 17, 67
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="137">
      <instructions>
        <talk>/* VTTTalk glyph 137, char 0xa73a */
/* GUI generated Sun Jan 12 12:58:05 2020 */

/* Y direction */
YAnchor(16,8)
YShift(16,0)
YLink(16,17,65)
YShift(16,26)
YShift(16,30)
YAnchor(23,2)
YLink(23,22,65)
YShift(23,31)
YShift(23,10)
YShift(10,27)
YInterpolate(16,34,23)
YLink(34,35,67)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 137, char 0xa73a */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 16, 8
SHP[1], 0
MIRP[m&gt;RBl], 17, 65
SHP[1], 26
SHP[1], 30
MIAP[R], 23, 2
MIRP[m&gt;RBl], 22, 65
SHP[1], 31
SHP[1], 10
SRP1[], 10
SHP[1], 27
SRP1[], 16
SRP2[], 23
IP[], 34
SRP0[], 34
MIRP[m&gt;RBl], 35, 67
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="138">
      <instructions>
        <talk>/* VTTTalk Unicode 0xa74a */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 4 19  DISABLED for a NON-LATIN glyph */
/* CVT 14 16  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(4,9)	/* min */
YAnchor(14,3)	/* max */

/* YDir: Stroke #0 */
YLink(14,34,68) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YInterpolate(14,0,4)
YAnchor(0)
YLink(0,1,67) /*perpendicular to the stroke*/

/* YDir: Stroke #2 */
YLink(4,24,68) /*perpendicular to the stroke*/

Smooth()



</talk>
        <assembly>/* TT glyph 138, char 0xa74a */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 4, 9
MIAP[R], 14, 3
MIRP[m&gt;RBl], 34, 68
SRP2[], 4
IP[], 0
MDAP[R], 0
MIRP[m&gt;RBl], 1, 67
SRP0[], 4
MIRP[m&gt;RBl], 24, 68
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="139">
      <instructions>
        <talk>/* VTTTalk glyph 139, char 0xffff */
/* GUI generated Sun Jan 12 06:02:20 2020 */

/* Y direction */
YAnchor(14,3)
YLink(14,41,68)
YAnchor(24,9)
YLink(24,31,68)
YDelta(31,1@10..17)
YShift(24,55)
YDist(55,0)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 139, char 0xffff */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 14, 3
MIRP[m&gt;RBl], 41, 68
MIAP[R], 24, 9
MIRP[m&lt;RWh], 31, 68
CALL[], 31, 64, 10, 17, 72
SHP[1], 55
SRP0[], 55
MDRP[m&gt;RBl], 0
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="140">
      <instructions>
        <talk>/* VTTTalk glyph 140, char 0xffff */
/* GUI generated Sun Jan 12 06:05:07 2020 */

/* Y direction */
YAnchor(0,9)
YLink(0,1,68)
YAnchor(38)
YShift(38,39)
YAnchor(46,3)
YShift(46,26)
YDist(26,13)
YShift(46,45)
YLink(45,44,65)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 140, char 0xffff */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 0, 9
MIRP[m&gt;RBl], 1, 68
MDAP[R], 38
SHP[1], 39
MIAP[R], 46, 3
SHP[1], 26
SRP0[], 26
MDRP[m&gt;RBl], 13
SRP1[], 46
SHP[1], 45
SRP0[], 45
MIRP[m&gt;RBl], 44, 65
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="141">
      <instructions>
        <talk>/* VTTTalk glyph 141, char 0x61 (a) */
/* GUI generated Mon Jan 13 08:14:25 2020 */

/* Y direction */
YAnchor(25,7)
YDist(25,11)
YAnchor(42,11)
YDist(42,57)
YShift(42,0)
YDist(0,35)
YInterpolate(42,48,17,25)
YShift(48,51)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 141, char 0x61 (a) */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 25, 7
MDRP[m&gt;RBl], 11
MIAP[R], 42, 11
MDRP[m&gt;RBl], 57
SHP[1], 0
SRP0[], 0
MDRP[m&gt;RBl], 35
SRP1[], 42
SRP2[], 25
IP[], 48
IP[], 17
SRP1[], 48
SHP[1], 51
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="142">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xe1 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 141, 0, 0
OFFSET[R], 774, 925, 0
SVTCA[Y]
CALL[], 66, 25, 1, 1, 136, 86
SHC[2], 2
SVTCA[X]
CALL[], 67, 69, 45, 33, 39, 87
SHC[2], 2

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="143">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x103 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 141, 0, 0
OFFSET[R], 779, 872, 0
SVTCA[Y]
CALL[], 66, 25, 1, 1, 154, 86
SHC[2], 2
SVTCA[X]
CALL[], 68, 76, 45, 29, 39, 87
SHC[2], 2
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="144">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xe2 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 141, 0, 0
OFFSET[R], 777, 871, 0
SVTCA[Y]
CALL[], 66, 25, 1, 1, 154, 86
SHC[2], 2
SVTCA[X]
CALL[], 67, 70, 45, 29, 39, 87
SHC[2], 2

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="145">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xe4 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 141, 0, 0
OFFSET[R], 771, 872, 0
SVTCA[Y]
CALL[], 66, 25, 1, 1, 154, 86
SHC[2], 2
SHC[2], 3
SVTCA[X]
CALL[], 69, 87, 45, 29, 39, 87
SHC[2], 2
SHC[2], 3

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="146">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xe0 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 141, 0, 0
OFFSET[R], 773, 871, 0
SVTCA[Y]
CALL[], 66, 25, 1, 1, 130, 86
SHC[2], 2
SVTCA[X]
CALL[], 67, 69, 45, 29, 39, 87
SHC[2], 2

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="147">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x101 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 141, 0, 0
OFFSET[R], 782, 871, 0
SVTCA[Y]
CALL[], 66, 25, 1, 1, 176, 86
SHC[2], 2
SVTCA[X]
CALL[], 66, 69, 45, 29, 39, 87
SHC[2], 2
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="148">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x105 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 141, 0, 0
OFFSET[R], 799, 1150, -30
SVTCA[Y]
CALL[], 72, 0, 0, 0, 33, 86
SHC[2], 2
SVTCA[X]
CALL[], 69, 81, 45, 50, 39, 87
SHC[2], 2

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="149">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xe5 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 141, 0, 0
OFFSET[R], 780, 871, 0
SVTCA[Y]
CALL[], 66, 25, 1, 1, 154, 86
SHC[2], 2
SHC[2], 3
SVTCA[X]
CALL[], 70, 76, 45, 29, 39, 87
SHC[2], 2
SHC[2], 3

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="150">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xe3 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 141, 0, 0
OFFSET[R], 781, 871, 0
SVTCA[Y]
CALL[], 75, 25, 1, 1, 175, 86
SHC[2], 2
SVTCA[X]
CALL[], 76, 89, 45, 29, 39, 87
SHC[2], 2

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="151">
      <instructions>
        <talk>/* VTTTalk glyph 151, char 0xa73d */
/* GUI generated Sun Jan 12 06:05:59 2020 */

/* Y direction */
YAnchor(25,7)
YDist(25,11)
YShift(25,72)
YShift(25,79)
YLink(79,78,66)
YAnchor(38,11)
YDist(38,53)
YAnchor(62,14)
YDist(62,68)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 151, char 0xa73d */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 25, 7
MDRP[m&gt;RBl], 11
SHP[1], 72
SHP[1], 79
SRP0[], 79
MIRP[m&gt;RBl], 78, 66
MIAP[R], 38, 11
MDRP[m&gt;RBl], 53
MIAP[R], 62, 14
MDRP[m&gt;RBl], 68
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="152">
      <instructions>
        <talk>/* VTTTalk glyph 152, char 0xe6 */
/* GUI generated Sun Jan 12 06:07:22 2020 */

/* Y direction */
YAnchor(0,11)
YDist(0,68)
YShift(0,25)
YDist(25,18)
YAnchor(49,7)
YDist(49,35)
YShift(49,56)
YDist(56,10)
YInterpolate(0,61,49)
YShift(61,60)
YDist(61,6)
YShift(6,7)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 152, char 0xe6 */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 0, 11
MDRP[m&gt;RBl], 68
SHP[1], 25
SRP0[], 25
MDRP[m&gt;RBl], 18
MIAP[R], 49, 7
MDRP[m&gt;RBl], 35
SHP[1], 56
SRP0[], 56
MDRP[m&gt;RBl], 10
SRP1[], 0
SRP2[], 49
IP[], 61
SRP1[], 61
SHP[1], 60
SRP0[], 61
MDRP[m&lt;RBl], 6
SHP[2], 7
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="153">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x1fd */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 152, 0, 0
OFFSET[R], 774, 1146, 0
SVTCA[Y]
CALL[], 75, 49, 1, 1, 136, 86
SHC[2], 1
SVTCA[X]
CALL[], 76, 78, 3, 35, 60, 87
SHC[2], 1
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="154">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x1e3 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 152, 0, 0
OFFSET[R], 782, 1092, 0
SVTCA[Y]
CALL[], 75, 49, 1, 1, 176, 86
SHC[2], 1
SVTCA[X]
CALL[], 75, 78, 3, 32, 60, 87
SHC[2], 1
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="155">
      <instructions>
        <talk>/* VTTTalk glyph 155, char 0x62 (b) */
/* GUI generated Fri Jan 10 09:50:37 2020 */

/* Y direction */
YAnchor(9,0)
YAnchor(32,7)
YDist(32,26)
YAnchor(40,11)
YShift(40,1)
YDist(40,18)
YShift(40,46)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 155, char 0x62 (b) */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 9, 0
MIAP[R], 32, 7
MDRP[m&gt;RBl], 26
MIAP[R], 40, 11
SHP[1], 1
MDRP[m&gt;RBl], 18
SHP[1], 46
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="156">
      <instructions>
        <talk>/* VTTTalk Unicode 0x63 (c) */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 0 11 */
/* CVT 8 7 */
/* Min and Max */
YAnchor(0,11)	/* min, CVT */
YAnchor(8,7)	/* max, CVT */

/* CVTs - beginning */
/* CVTs - end */


/* YDir: Stroke #0 */
YDist(8,24) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YDist(0,32) /*perpendicular to the stroke*/

Smooth()

</talk>
        <assembly>/* TT glyph 156, char 0x63 (c) */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 0, 11
MIAP[R], 8, 7
MDRP[m&gt;RBl], 24
SRP0[], 0
MDRP[m&gt;RBl], 32
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="157">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x107 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 156, 0, 0
OFFSET[R], 774, 1021, 0
SVTCA[Y]
CALL[], 40, 8, 1, 1, 136, 86
SHC[2], 1
SVTCA[X]
CALL[], 41, 43, 4, 44, 36, 87
SHC[2], 1

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="158">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x10d */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 156, 0, 0
OFFSET[R], 778, 967, 0
SVTCA[Y]
CALL[], 40, 8, 1, 1, 154, 86
SHC[2], 1
SVTCA[X]
CALL[], 41, 46, 4, 40, 36, 87
SHC[2], 1
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="159">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xe7 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 156, 0, 0
OFFSET[R], 798, 835, 0
SVTCA[Y]
CALL[], 59, 0, 0, 0, 23, 86
SHC[2], 1
SVTCA[X]
CALL[], 43, 64, 4, 28, 36, 87
SHC[2], 1
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="160">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x10b */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 156, 0, 0
OFFSET[R], 772, 967, 0
SVTCA[Y]
CALL[], 40, 8, 1, 1, 154, 86
SHC[2], 1
SVTCA[X]
CALL[], 43, 49, 4, 40, 36, 87
SHC[2], 1
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="161">
      <instructions>
        <talk>/* VTTTalk glyph 161, char 0x64 (d) */
/* GUI generated Fri Jan 10 09:51:59 2020 */

/* Y direction */
YAnchor(5,11)
YShift(5,0)
YDist(5,40)
YShift(5,35)
YDist(35,34)
YAnchor(14,7)
YDist(14,47)
YAnchor(23,0)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 161, char 0x64 (d) */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 5, 11
SHP[1], 0
MDRP[m&gt;RBl], 40
SHP[1], 35
SRP0[], 35
MDRP[m&gt;RBl], 34
MIAP[R], 14, 7
MDRP[m&gt;RBl], 47
MIAP[R], 23, 0
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="162">
      <instructions>
        <talk>/* VTTTalk glyph 162, char 0xf0 */
/* GUI generated Sat Jan 11 15:15:03 2020 */

/* Y direction */
YAnchor(0,11)
YDist(0,25)
YAnchor(8,7)
YDist(8,35)
YShift(8,44)
YAnchor(16)
YShift(16,46)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 162, char 0xf0 */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 0, 11
MDRP[m&gt;RBl], 25
MIAP[R], 8, 7
MDRP[m&gt;RBl], 35
SHP[1], 44
MDAP[R], 16
SHP[1], 46
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="163">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x10f */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 161, 0, 0
OFFSET[R], 776, 1311, 0
SVTCA[Y]
CALL[], 61, 23, 2, 0, -55, 86
SHC[2], 2
SVTCA[X]
CALL[], 58, 28, 1, 0, 126, 86
SHC[2], 2
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="164">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x111 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 161, 0, 0
OFFSET[R], 806, 842, 588
SVTCA[Y]
CALL[], 55, 14, 1, 1, 151, 86
SHC[2], 2
SVTCA[X]
CALL[], 55, 58, 10, 48, 35, 87
SHC[2], 2
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="165">
      <instructions>
        <talk>/* VTTTalk Unicode 0x65 (e) */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 0 11 */
/* CVT 8 7 */
/* Min and Max */
YAnchor(0,11)	/* min, CVT */
YAnchor(8,7)	/* max, CVT */

/* CVTs - beginning */
/* CVTs - end */


/* YDir: Stroke #0 */
YDist(8,18) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YInterpolate(8,14,0)
YAnchor(14)
YDist(14,13) /*perpendicular to the stroke*/

/* YDir: Stroke #2 */
YDist(0,26) /*perpendicular to the stroke*/

Smooth()


</talk>
        <assembly>/* TT glyph 165, char 0x65 (e) */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 0, 11
MIAP[R], 8, 7
MDRP[m&gt;RBl], 18
SRP2[], 0
IP[], 14
MDAP[R], 14
MDRP[m&gt;RBl], 13
SRP0[], 0
MDRP[m&gt;RBl], 26
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="166">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xe9 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 165, 0, 0
OFFSET[R], 774, 951, 0
SVTCA[Y]
CALL[], 33, 8, 1, 1, 136, 86
SHC[2], 1
SVTCA[X]
CALL[], 34, 36, 4, 38, 12, 87
SHC[2], 1

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="167">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x115 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 165, 0, 0
OFFSET[R], 779, 898, 0
SVTCA[Y]
CALL[], 33, 8, 1, 1, 154, 86
SHC[2], 1
SVTCA[X]
CALL[], 35, 43, 4, 33, 12, 87
SHC[2], 1
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="168">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x11b */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 165, 0, 0
OFFSET[R], 778, 897, 0
SVTCA[Y]
CALL[], 33, 8, 1, 1, 154, 86
SHC[2], 1
SVTCA[X]
CALL[], 34, 39, 4, 33, 12, 87
SHC[2], 1
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="169">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xea */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 165, 0, 0
OFFSET[R], 777, 897, 0
SVTCA[Y]
CALL[], 33, 8, 1, 1, 154, 86
SHC[2], 1
SVTCA[X]
CALL[], 34, 37, 4, 33, 12, 87
SHC[2], 1

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="170">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xeb */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 165, 0, 0
OFFSET[R], 771, 898, 0
SVTCA[Y]
CALL[], 33, 8, 1, 1, 154, 86
SHC[2], 1
SHC[2], 2
SVTCA[X]
CALL[], 36, 54, 4, 33, 12, 87
SHC[2], 1
SHC[2], 2

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="171">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x117 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 165, 0, 0
OFFSET[R], 772, 897, 0
SVTCA[Y]
CALL[], 33, 8, 1, 1, 154, 86
SHC[2], 1
SVTCA[X]
CALL[], 36, 42, 4, 33, 12, 87
SHC[2], 1
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="172">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xe8 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 165, 0, 0
OFFSET[R], 773, 897, 0
SVTCA[Y]
CALL[], 33, 8, 1, 1, 130, 86
SHC[2], 1
SVTCA[X]
CALL[], 34, 36, 4, 33, 12, 87
SHC[2], 1

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="173">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x113 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 165, 0, 0
OFFSET[R], 782, 897, 0
SVTCA[Y]
CALL[], 33, 8, 1, 1, 176, 86
SHC[2], 1
SVTCA[X]
CALL[], 33, 36, 4, 33, 12, 87
SHC[2], 1
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="174">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x119 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 165, 0, 0
OFFSET[R], 834, 1044, 41
SVTCA[Y]
CALL[], 40, 0, 1, 0, 188, 86
SHC[2], 1
SVTCA[X]
CALL[], 36, 50, 4, 54, 12, 87
SHC[2], 1
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="175">
      <instructions>
        <talk>/* VTTTalk glyph 175, char 0xa76b */
/* GUI generated Fri Jan 10 09:53:11 2020 */

/* Y direction */
YAnchor(0)
YAnchor(22,7)
YDist(22,15)

/* X direction */

Smooth()


</talk>
        <assembly>/* TT glyph 175, char 0xa76b */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MDAP[R], 0
MIAP[R], 22, 7
MDRP[m&gt;RBl], 15
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="176">
      <instructions>
        <talk>/* VTTTalk Unicode 0x259 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 0 11 */
/* CVT 25 7 */
/* Min and Max */
YAnchor(0,11)	/* min, CVT */
YAnchor(25,7)	/* max, CVT */

/* CVTs - beginning */
/* CVTs - end */


/* YDir: Stroke #0 */
YDist(25,18) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YInterpolate(25,7,0)
YAnchor(7)
YDist(7,4) /*perpendicular to the stroke*/

/* YDir: Stroke #2 */
YDist(0,10) /*perpendicular to the stroke*/

Smooth()

</talk>
        <assembly>/* TT glyph 176, char 0x259 */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 0, 11
MIAP[R], 25, 7
MDRP[m&gt;RBl], 18
SRP2[], 0
IP[], 7
MDAP[R], 7
MDRP[m&gt;RBl], 4
SRP0[], 0
MDRP[m&gt;RBl], 10
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="177">
      <instructions>
        <talk>/* VTTTalk glyph 177, char 0x25a */
/* GUI generated Fri Jan 10 09:54:12 2020 */

/* Y direction */
YAnchor(0,11)
YDist(0,31)
YAnchor(44,7)
YDist(44,37)
YIPAnchor(44,19,0)
YDist(19,12)

/* X direction */

Smooth()


</talk>
        <assembly>/* TT glyph 177, char 0x25a */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 0, 11
MDRP[m&gt;RBl], 31
MIAP[R], 44, 7
MDRP[m&gt;RBl], 37
SRP2[], 0
IP[], 19
MDAP[R], 19
MDRP[m&gt;RBl], 12
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="178">
      <instructions>
        <talk>/* VTTTalk glyph 178, char 0x66 (f) */
/* GUI generated Fri Jan 10 09:55:16 2020 */

/* Y direction */
YAnchor(10,1)
YDist(10,26)
YAnchor(31,6)
YDist(31,34)
YShift(34,2)
YAnchor(36,10)
YShift(36,35)
YDist(36,37)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 178, char 0x66 (f) */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 10, 1
MDRP[m&gt;RBl], 26
MIAP[R], 31, 6
MDRP[m&gt;RBl], 34
SHP[2], 2
MIAP[R], 36, 10
SHP[1], 35
MDRP[m&gt;RBl], 37
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="179">
      <instructions>
        <talk>/* VTTTalk Unicode 0x67 (g) */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 0 15 */
/* CVT 51 7 */
/* CVT 75 6 */
/* Min and Max */
YAnchor(0,15)	/* min, CVT */
YAnchor(51,7)	/* max, CVT */

/* CVTs - beginning */
YAnchor(75,6)  /*knot, CVT*/ 
/* CVTs - end */


/* YDir: Stroke #0 */
YDist(51,65) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YDist(75,90) /*perpendicular to the stroke*/

/* YDir: Stroke #2 */
YInterpolate(51,59,0)
YAnchor(59)
YDist(59,43) /*perpendicular to the stroke*/

/* YDir: Stroke #3 */
YInterpolate(51,21,0)
YAnchor(21)
YDist(21,35) /*perpendicular to the stroke*/

/* YDir: Stroke #4 */
YDist(0,14) /*perpendicular to the stroke*/

Smooth()

</talk>
        <assembly>/* TT glyph 179, char 0x67 (g) */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 0, 15
MIAP[R], 51, 7
MIAP[R], 75, 6
SRP0[], 51
MDRP[m&gt;RBl], 65
SRP0[], 75
MDRP[m&gt;RBl], 90
SRP1[], 51
SRP2[], 0
IP[], 59
MDAP[R], 59
MDRP[m&gt;RBl], 43
SRP1[], 51
SRP2[], 0
IP[], 21
MDAP[R], 21
MDRP[m&gt;RBl], 35
SRP0[], 0
MDRP[m&gt;RBl], 14
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="180">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x123 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 179, 0, 0
OFFSET[R], 784, 1205, 0
SVTCA[Y]
CALL[], 93, 51, 1, 1, 154, 86
SHC[2], 4
SVTCA[X]
CALL[], 96, 110, 3, 32, 40, 87
SHC[2], 4

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="181">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x121 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 179, 0, 0
OFFSET[R], 772, 920, 0
SVTCA[Y]
CALL[], 93, 51, 1, 1, 154, 86
SHC[2], 4
SVTCA[X]
CALL[], 96, 102, 3, 32, 40, 87
SHC[2], 4
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="182">
      <instructions>
        <talk>/* VTTTalk glyph 182, char 0x21d */
/* GUI generated Sat Jan 11 15:21:14 2020 */

/* Y direction */
YAnchor(0,15)
YDist(0,12)
YAnchor(46,7)
YDist(46,33)
YShift(46,39)
YInterpolate(0,22,46)
YShift(22,23)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 182, char 0x21d */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 0, 15
MDRP[m&gt;RBl], 12
MIAP[R], 46, 7
MDRP[m&gt;RBl], 33
SHP[1], 39
SRP2[], 0
IP[], 22
SRP1[], 22
SHP[1], 23
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="183">
      <instructions>
        <talk>/* VTTTalk glyph 183, char 0x68 (h) */
/* GUI generated Fri Jan 10 11:51:17 2020 */

/* Y direction */
YAnchor(5,0)
YAnchor(28,7)
YDist(28,20)
YAnchor(38,10)
YShift(38,10)
YShift(38,37)
YShift(38,43)
YLink(38,39,66)
YShift(39,44)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 183, char 0x68 (h) */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 5, 0
MIAP[R], 28, 7
MDRP[m&gt;RBl], 20
MIAP[R], 38, 10
SHP[1], 10
SHP[1], 37
SHP[1], 43
MIRP[m&gt;RBl], 39, 66
SHP[2], 44
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="184">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x69 (i) */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 185, 0, 0
OFFSET[R], 772, 674, 0
SVTCA[Y]
CALL[], 17, 8, 1, 1, 154, 86
SHC[2], 1
SVTCA[X]
CALL[], 20, 26, 3, 26, 13, 87
SHC[2], 1

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="185">
      <instructions>
        <talk>/* VTTTalk glyph 185, char 0x131 */
/* GUI generated Fri Jan 10 11:52:31 2020 */

/* Y direction */
YAnchor(0,10)
YShift(0,3)
YShift(0,13)
YLink(0,1,66)
YShift(1,15)
YAnchor(8,7)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 185, char 0x131 */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 0, 10
SHP[2], 3
SHP[2], 13
MIRP[m&gt;RBl], 1, 66
SHP[2], 15
MIAP[R], 8, 7
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="186">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xed */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 185, 0, 0
OFFSET[R], 774, 728, 0
SVTCA[Y]
CALL[], 17, 8, 1, 1, 136, 86
SHC[2], 1
SVTCA[X]
CALL[], 18, 20, 3, 47, 13, 87
SHC[2], 1

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="187">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x12d */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 185, 0, 0
OFFSET[R], 779, 675, 0
SVTCA[Y]
CALL[], 17, 8, 1, 1, 154, 86
SHC[2], 1
SVTCA[X]
CALL[], 19, 27, 3, 26, 13, 87
SHC[2], 1
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="188">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xee */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 185, 0, 0
OFFSET[R], 777, 674, 0
SVTCA[Y]
CALL[], 17, 8, 1, 1, 154, 86
SHC[2], 1
SVTCA[X]
CALL[], 18, 21, 3, 26, 13, 87
SHC[2], 1

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="189">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xef */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 185, 0, 0
OFFSET[R], 771, 675, 0
SVTCA[Y]
CALL[], 17, 8, 1, 1, 154, 86
SHC[2], 1
SHC[2], 2
SVTCA[X]
CALL[], 20, 38, 3, 26, 13, 87
SHC[2], 1
SHC[2], 2

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="190">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xec */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 185, 0, 0
OFFSET[R], 773, 674, 0
SVTCA[Y]
CALL[], 17, 8, 1, 1, 130, 86
SHC[2], 1
SVTCA[X]
CALL[], 18, 20, 3, 26, 13, 87
SHC[2], 1

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="191">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x133 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

OFFSET[R], 184, 0, 0
OFFSET[R], 194, 528, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="192">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x12b */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 185, 0, 0
OFFSET[R], 782, 674, 0
SVTCA[Y]
CALL[], 17, 8, 1, 1, 176, 86
SHC[2], 1
SVTCA[X]
CALL[], 17, 20, 3, 25, 13, 87
SHC[2], 1
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="193">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x12f */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 184, 0, 0
OFFSET[R], 799, 754, -35
SVTCA[Y]
CALL[], 35, 0, 0, 0, 5, 86
SHC[2], 2
SVTCA[X]
CALL[], 32, 44, 20, 55, 26, 87
SHC[2], 2

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="194">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x6a (j) */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 195, 0, 0
OFFSET[R], 772, 674, 0
SVTCA[Y]
CALL[], 32, 21, 1, 1, 154, 86
SHC[2], 1
SVTCA[X]
CALL[], 35, 41, 3, 49, 26, 87
SHC[2], 1
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="195">
      <instructions>
        <talk>/* VTTTalk Unicode 0x237 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 0 15 */
/* CVT 21 7 */
/* Min and Max */
YAnchor(0,15)	/* min, CVT */
YAnchor(21,7)	/* max, CVT */

/* CVTs - beginning */
/* CVTs - end */


/* YDir: Stroke #0 */
YDist(0,12) /*perpendicular to the stroke*/

Smooth()

</talk>
        <assembly>/* TT glyph 195, char 0x237 */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 0, 15
MIAP[R], 21, 7
SRP0[], 0
MDRP[m&gt;RBl], 12
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="196">
      <instructions>
        <talk>/* VTTTalk glyph 196, char 0x6b (k) */
/* GUI generated Mon Jan 13 06:12:37 2020 */

/* Y direction */
YAnchor(5,0)
YAnchor(27,10)
YShift(27,10)
YShift(27,26)
YShift(27,32)
YIPAnchor(5,16,27)
YDist(16,17)
YLink(27,28,66)
YShift(28,33)
YAnchor(39,6)
YShift(39,22)
YLink(39,38,66)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 196, char 0x6b (k) */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 5, 0
MIAP[R], 27, 10
SHP[1], 10
SHP[1], 26
SHP[1], 32
SRP2[], 5
IP[], 16
MDAP[R], 16
MDRP[m&gt;RBl], 17
SRP0[], 27
MIRP[m&gt;RBl], 28, 66
SHP[2], 33
MIAP[R], 39, 6
SHP[1], 22
MIRP[m&gt;RBl], 38, 66
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="197">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x137 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 196, 0, 0
OFFSET[R], 797, 941, 0
SVTCA[Y]
CALL[], 56, 32, 1, 1, -140, 86
SHC[2], 5
SVTCA[X]
CALL[], 53, 59, 0, 25, 36, 87
SHC[2], 5
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="198">
      <instructions>
        <talk>/* VTTTalk glyph 198, char 0x6c (l) */
/* GUI generated Fri Jan 10 11:54:54 2020 */

/* Y direction */
YAnchor(5,0)
YAnchor(11,10)
YShift(11,10)
YLink(11,12,66)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 198, char 0x6c (l) */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 5, 0
MIAP[R], 11, 10
SHP[1], 10
MIRP[m&gt;RBl], 12, 66
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="199">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x13a */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 198, 0, 0
OFFSET[R], 840, 870, 127
SVTCA[Y]
CALL[], 16, 5, 1, 1, 108, 86
SHC[2], 2
SVTCA[X]
CALL[], 17, 19, 0, 34, 10, 87
SHC[2], 2
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="200">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x13e */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 198, 0, 0
OFFSET[R], 776, 759, 0
SVTCA[Y]
CALL[], 22, 5, 2, 0, -55, 86
SHC[2], 2
SVTCA[X]
CALL[], 19, 10, 1, 0, 171, 86
SHC[2], 2
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="201">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x13c */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 198, 0, 0
OFFSET[R], 797, 686, 0
SVTCA[Y]
CALL[], 30, 0, 1, 0, -160, 86
SHC[2], 2
SVTCA[X]
CALL[], 27, 33, 0, 32, 10, 87
SHC[2], 2

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="202">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x142 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 198, 0, 0
OFFSET[R], 807, 257, 272
SVTCA[Y]
CALL[], 18, 2, 1, 0, -470, 86
SHC[2], 2
SVTCA[X]
CALL[], 17, 19, 0, 33, 10, 87
SHC[2], 2

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="203">
      <instructions>
        <talk>/* VTTTalk glyph 203, char 0x6d (m) */
/* GUI generated Fri Jan 10 12:05:02 2020 */

/* Y direction */
YAnchor(27,7)
YShift(27,5)
YShift(27,54)
YDist(27,18)
YShift(18,45)
YAnchor(64,10)
YShift(64,10)
YShift(64,34)
YShift(64,63)
YShift(64,69)
YShift(64,74)
YLink(64,65,66)
YShift(65,70)
YShift(65,75)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 203, char 0x6d (m) */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 27, 7
SHP[1], 5
SHP[1], 54
MDRP[m&gt;RBl], 18
SHP[2], 45
MIAP[R], 64, 10
SHP[1], 10
SHP[1], 34
SHP[1], 63
SHP[1], 69
SHP[1], 74
MIRP[m&gt;RBl], 65, 66
SHP[2], 70
SHP[2], 75
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="204">
      <instructions>
        <talk>/* VTTTalk glyph 204, char 0x6e (n) */
/* GUI generated Fri Jan 10 12:08:55 2020 */

/* Y direction */
YAnchor(18,7)
YDist(18,9)
YShift(18,43)
YAnchor(28,10)
YShift(28,27)
YShift(28,33)
YShift(28,48)
YLink(28,29,66)
YShift(29,34)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 204, char 0x6e (n) */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 18, 7
MDRP[m&gt;RBl], 9
SHP[1], 43
MIAP[R], 28, 10
SHP[1], 27
SHP[1], 33
SHP[1], 48
MIRP[m&gt;RBl], 29, 66
SHP[2], 34
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="205">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x144 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 204, 0, 0
OFFSET[R], 774, 1064, 0
SVTCA[Y]
CALL[], 49, 43, 1, 1, 136, 86
SHC[2], 4
SVTCA[X]
CALL[], 50, 52, 38, 33, 37, 87
SHC[2], 4

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="206">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x148 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 204, 0, 0
OFFSET[R], 778, 1010, 0
SVTCA[Y]
CALL[], 49, 43, 1, 1, 154, 86
SHC[2], 4
SVTCA[X]
CALL[], 50, 55, 38, 29, 37, 87
SHC[2], 4

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="207">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x146 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 204, 0, 0
OFFSET[R], 797, 981, 0
SVTCA[Y]
CALL[], 63, 33, 1, 1, -140, 86
SHC[2], 4
SVTCA[X]
CALL[], 60, 66, 38, 27, 37, 87
SHC[2], 4

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="208">
      <instructions>
        <talk>/* VTTTalk glyph 208, char 0x14b */
/* GUI generated Fri Jan 10 12:11:30 2020 */

/* Y direction */
YAnchor(0,15)
YDist(0,6)
YShift(0,10)
YAnchor(35,7)
YDist(35,26)
YShift(35,63)
YAnchor(53,10)
YLink(53,54,66)
YShift(53,58)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 208, char 0x14b */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 0, 15
MDRP[m&gt;RBl], 6
SHP[1], 10
MIAP[R], 35, 7
MDRP[m&gt;RBl], 26
SHP[1], 63
MIAP[R], 53, 10
MIRP[m&gt;RBl], 54, 66
SHP[1], 58
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="209">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xf1 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 204, 0, 0
OFFSET[R], 781, 1010, 0
SVTCA[Y]
CALL[], 58, 43, 1, 1, 175, 86
SHC[2], 4
SVTCA[X]
CALL[], 59, 72, 38, 29, 37, 87
SHC[2], 4
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="210">
      <instructions>
        <talk>/* VTTTalk Unicode 0x6f (o) */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 0 11 */
/* CVT 8 7 */
/* Min and Max */
YAnchor(0,11)	/* min, CVT */
YAnchor(8,7)	/* max, CVT */

/* CVTs - beginning */
/* CVTs - end */


/* YDir: Stroke #0 */
YLink(8,24,69) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YLink(0,16,69) /*perpendicular to the stroke*/

Smooth()

</talk>
        <assembly>/* TT glyph 210, char 0x6f (o) */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 0, 11
MIAP[R], 8, 7
MIRP[m&gt;RBl], 24, 69
SRP0[], 0
MIRP[m&gt;RBl], 16, 69
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="211">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xf3 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 210, 0, 0
OFFSET[R], 774, 1006, 0
SVTCA[Y]
CALL[], 32, 8, 1, 1, 136, 86
SHC[2], 2
SVTCA[X]
CALL[], 33, 35, 4, 36, 12, 87
SHC[2], 2
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="212">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x14f */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 210, 0, 0
OFFSET[R], 779, 953, 0
SVTCA[Y]
CALL[], 32, 8, 1, 1, 154, 86
SHC[2], 2
SVTCA[X]
CALL[], 34, 42, 4, 32, 12, 87
SHC[2], 2
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="213">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xf4 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 210, 0, 0
OFFSET[R], 777, 952, 0
SVTCA[Y]
CALL[], 32, 8, 1, 1, 154, 86
SHC[2], 2
SVTCA[X]
CALL[], 33, 36, 4, 32, 12, 87
SHC[2], 2

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="214">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xf6 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 210, 0, 0
OFFSET[R], 771, 953, 0
SVTCA[Y]
CALL[], 32, 8, 1, 1, 154, 86
SHC[2], 2
SHC[2], 3
SVTCA[X]
CALL[], 35, 53, 4, 32, 12, 87
SHC[2], 2
SHC[2], 3

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="215">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xf2 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 210, 0, 0
OFFSET[R], 773, 952, 0
SVTCA[Y]
CALL[], 32, 8, 1, 1, 130, 86
SHC[2], 2
SVTCA[X]
CALL[], 33, 35, 4, 32, 12, 87
SHC[2], 2

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="216">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x151 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 210, 0, 0
OFFSET[R], 775, 990, 0
SVTCA[Y]
CALL[], 35, 8, 1, 1, 154, 86
SHC[2], 2
SHC[2], 3
SVTCA[X]
CALL[], 32, 38, 4, 35, 12, 87
SHC[2], 2
SHC[2], 3
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="217">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x14d */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 210, 0, 0
OFFSET[R], 782, 952, 0
SVTCA[Y]
CALL[], 32, 8, 1, 1, 176, 86
SHC[2], 2
SVTCA[X]
CALL[], 32, 35, 4, 32, 12, 87
SHC[2], 2
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="218">
      <instructions>
        <talk>/* VTTTalk glyph 218, char 0xa74f */
/* GUI generated Fri Jan 10 12:15:09 2020 */

/* Y direction */
YAnchor(0,11)
YShift(0,22)
YLink(0,28,69)
YShift(28,43)
YAnchor(8,7)
YShift(8,14)
YLink(8,35,69)
YShift(35,51)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 218, char 0xa74f */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 0, 11
SHP[2], 22
MIRP[m&gt;RBl], 28, 69
SHP[2], 43
MIAP[R], 8, 7
SHP[1], 14
MIRP[m&gt;RBl], 35, 69
SHP[2], 51
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="219">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x1eb */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 210, 0, 0
OFFSET[R], 799, 979, -30
SVTCA[Y]
CALL[], 38, 0, 0, 0, 34, 86
SHC[2], 2
SVTCA[X]
CALL[], 35, 47, 4, 34, 12, 87
SHC[2], 2

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="220">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xf8 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 210, 0, 0
OFFSET[R], 808, 521, -221
SVTCA[Y]
CALL[], 34, 8, 0, 0, 22, 86
SHC[2], 2
SVTCA[X]
CALL[], 33, 35, 4, 32, 12, 87
SHC[2], 2

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="221">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x1ff */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 220, 0, 0
OFFSET[R], 774, 1006, 0
SVTCA[Y]
CALL[], 36, 8, 1, 1, 136, 86
SHC[2], 3
SVTCA[X]
CALL[], 37, 39, 4, 36, 12, 87
SHC[2], 3

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="222">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xf5 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 210, 0, 0
OFFSET[R], 781, 952, 0
SVTCA[Y]
CALL[], 41, 8, 1, 1, 175, 86
SHC[2], 2
SVTCA[X]
CALL[], 42, 55, 4, 32, 12, 87
SHC[2], 2

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="223">
      <instructions>
        <talk>/* VTTTalk glyph 223, char 0x153 */
/* GUI generated Fri Jan 10 12:19:37 2020 */

/* Y direction */
YAnchor(0,11)
YLink(0,47,69)
YShift(0,40)
YDist(40,33)
YAnchor(8,7)
YLink(8,55,69)
YShift(8,15)
YLink(15,25,69)
YIPAnchor(8,21,0)
YDist(21,20)

/* X direction */

Smooth()


</talk>
        <assembly>/* TT glyph 223, char 0x153 */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 0, 11
MIRP[m&gt;RBl], 47, 69
SHP[1], 40
SRP0[], 40
MDRP[m&gt;RBl], 33
MIAP[R], 8, 7
MIRP[m&gt;RBl], 55, 69
SHP[1], 15
SRP0[], 15
MIRP[m&gt;RBl], 25, 69
SRP1[], 8
SRP2[], 0
IP[], 21
MDAP[R], 21
MDRP[m&gt;RBl], 20
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="224">
      <instructions>
        <talk>/* VTTTalk glyph 224, char 0x70 (p) */
/* GUI generated Fri Jan 10 12:22:29 2020 */

/* Y direction */
YAnchor(11,11)
YLink(11,19,69)
YAnchor(35,7)
YShift(35,5)
YDist(35,27)
YAnchor(43,14)
YShift(43,10)
YLink(43,44,66)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 224, char 0x70 (p) */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 11, 11
MIRP[m&gt;RBl], 19, 69
MIAP[R], 35, 7
SHP[1], 5
MDRP[m&gt;RBl], 27
MIAP[R], 43, 14
SHP[1], 10
MIRP[m&gt;RBl], 44, 66
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="225">
      <instructions>
        <talk>/* VTTTalk glyph 225, char 0xfe */
/* GUI generated Fri Jan 10 12:23:27 2020 */

/* Y direction */
YAnchor(5,0)
YAnchor(11,14)
YShift(11,10)
YLink(11,12,66)
YAnchor(16,11)
YLink(16,24,69)
YAnchor(40,7)
YDist(40,32)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 225, char 0xfe */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 5, 0
MIAP[R], 11, 14
SHP[1], 10
MIRP[m&gt;RBl], 12, 66
MIAP[R], 16, 11
MIRP[m&gt;RBl], 24, 69
MIAP[R], 40, 7
MDRP[m&gt;RBl], 32
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="226">
      <instructions>
        <talk>/* VTTTalk glyph 226, char 0x71 (q) */
/* GUI generated Fri Jan 10 12:32:26 2020 */

/* Y direction */
YAnchor(5,11)
YLink(5,24,69)
YAnchor(13,7)
YShift(13,17)
YLink(13,33,69)
YAnchor(41,14)
YShift(41,23)
YLink(41,42,66)

/* X direction */

Smooth()


</talk>
        <assembly>/* TT glyph 226, char 0x71 (q) */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 5, 11
MIRP[m&gt;RBl], 24, 69
MIAP[R], 13, 7
SHP[1], 17
MIRP[m&gt;RBl], 33, 69
MIAP[R], 41, 14
SHP[1], 23
MIRP[m&gt;RBl], 42, 66
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="227">
      <instructions>
        <talk>/* VTTTalk glyph 227, char 0x72 (r) */
/* GUI generated Fri Jan 10 12:33:36 2020 */

/* Y direction */
YAnchor(8,7)
YDist(8,23)
YShift(8,37)
YAnchor(27,10)
YLink(27,28,66)
YShift(27,42)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 227, char 0x72 (r) */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 8, 7
MDRP[m&gt;RBl], 23
SHP[1], 37
MIAP[R], 27, 10
MIRP[m&gt;RBl], 28, 66
SHP[1], 42
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="228">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x155 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 227, 0, 0
OFFSET[R], 774, 895, 0
SVTCA[Y]
CALL[], 43, 37, 1, 1, 136, 86
SHC[2], 3
SVTCA[X]
CALL[], 44, 46, 27, 56, 31, 87
SHC[2], 3
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="229">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x159 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 227, 0, 0
OFFSET[R], 778, 841, 0
SVTCA[Y]
CALL[], 43, 37, 1, 1, 154, 86
SHC[2], 3
SVTCA[X]
CALL[], 44, 49, 27, 49, 31, 87
SHC[2], 3
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="230">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x157 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 227, 0, 0
OFFSET[R], 797, 710, 0
SVTCA[Y]
CALL[], 57, 32, 1, 0, -160, 86
SHC[2], 3
SVTCA[X]
CALL[], 54, 60, 27, 30, 31, 87
SHC[2], 3

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="231">
      <instructions>
        <talk>/* VTTTalk glyph 231, char 0xa75b */
/* GUI generated Fri Jan 10 12:34:42 2020 */

/* Y direction */
YUpToGrid(0)
YAnchor(0,10)
YDist(0,27)
YAnchor(17,7)
YDist(17,9)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 231, char 0xa75b */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
RDTG[]
MIAP[R], 0, 10
RTG[]
MDRP[m&gt;RBl], 27
MIAP[R], 17, 7
MDRP[m&gt;RBl], 9
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="232">
      <instructions>
        <talk>/* VTTTalk glyph 232, char 0x73 (s) */
/* GUI generated Mon Jan 13 12:52:37 2020 */

/* Y direction */
YAnchor(0,11)
YLink(0,10,69)
YAnchor(24,7)
YShift(24,30)
YLink(24,40,69)
YInterpolate(0,48,24)
YShift(48,16)

/* X direction */

Smooth()
YDelta(36,0.5@14..17)
YDelta(35,0.5@14..17)
YDelta(36,0.25@13)
YDelta(35,0.25@13)
YDelta(6,-0.5@13..17)
YDelta(7,-0.5@13..17)
YDelta(34,0.5@12)
YDelta(37,0.5@12)
YDelta(35,1@12)
YDelta(36,1@12)
YDelta(6,-1.5@12)
YDelta(7,-1.5@12)
YDelta(8,-1@12)
YDelta(5,-1@12)

</talk>
        <assembly>/* TT glyph 232, char 0x73 (s) */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 0, 11
MIRP[m&gt;RBl], 10, 69
MIAP[R], 24, 7
SHP[1], 30
MIRP[m&gt;RBl], 40, 69
SRP2[], 0
IP[], 48
SRP1[], 48
SHP[1], 16
IUP[Y]
IUP[X]
CALL[], 36, 32, 14, 17, 72
CALL[], 35, 32, 14, 17, 72
DLTP1[(36 @4 2)]
DLTP1[(35 @4 2)]
CALL[], 6, -32, 13, 17, 72
CALL[], 7, -32, 13, 17, 72
DLTP1[(34 @3 4)]
DLTP1[(37 @3 4)]
DLTP1[(35 @3 8)]
DLTP1[(36 @3 8)]
SDS[], 2
DLTP1[(6 @3 -6)]
DLTP1[(7 @3 -6)]
DLTP1[(8 @3 -4)]
DLTP1[(5 @3 -4)]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="233">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x15b */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 232, 0, 0
OFFSET[R], 774, 896, 0
SVTCA[Y]
CALL[], 54, 24, 1, 1, 135, 86
SHC[2], 1
SVTCA[X]
CALL[], 55, 57, 6, 38, 51, 87
SHC[2], 1

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="234">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x161 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 232, 0, 0
OFFSET[R], 778, 842, 0
SVTCA[Y]
CALL[], 54, 24, 1, 1, 153, 86
SHC[2], 1
SVTCA[X]
CALL[], 55, 60, 6, 32, 51, 87
SHC[2], 1

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="235">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x15f */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 232, 0, 0
OFFSET[R], 798, 789, 0
SVTCA[Y]
CALL[], 73, 0, 0, 0, 23, 86
SHC[2], 1
SVTCA[X]
CALL[], 57, 78, 6, 26, 51, 87
SHC[2], 1

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="236">
      <instructions>
        <talk>/* VTTTalk glyph 236, char 0xdf */
/* GUI generated Fri Jan 10 12:38:45 2020 */

/* Y direction */
YAnchor(53,0)
YDist(53,32)
YAnchor(75,10)
YShift(75,40)
YLink(75,76,66)
YShift(75,0)
YLink(0,10,69)
YInterpolate(75,42,53)
YDist(42,43)

/* X direction */

Smooth()


</talk>
        <assembly>/* TT glyph 236, char 0xdf */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 53, 0
MDRP[m&gt;RBl], 32
MIAP[R], 75, 10
SHP[1], 40
MIRP[m&gt;RBl], 76, 66
SHP[1], 0
SRP0[], 0
MIRP[m&gt;RBl], 10, 69
SRP1[], 75
SRP2[], 53
IP[], 42
SRP0[], 42
MDRP[m&gt;RBl], 43
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="237">
      <instructions>
        <talk>/* VTTTalk glyph 237, char 0x17f */
/* GUI generated Fri Jan 10 12:40:00 2020 */

/* Y direction */
YAnchor(10,1)
YDist(10,26)
YAnchor(33,10)
YShift(33,32)
YLink(33,34,66)
YInterpolate(10,2,33)
YDist(2,3)

/* X direction */

Smooth()


</talk>
        <assembly>/* TT glyph 237, char 0x17f */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 10, 1
MDRP[m&gt;RBl], 26
MIAP[R], 33, 10
SHP[1], 32
MIRP[m&gt;RBl], 34, 66
SRP2[], 10
IP[], 2
SRP0[], 2
MDRP[m&gt;RBl], 3
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="238">
      <instructions>
        <talk>/* VTTTalk Unicode 0x74 (t) */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 0 11 */
/* CVT 16 6 */
/* Min and Max */
YAnchor(0,11)	/* min, CVT */
YAnchor(14)	/* max */

/* CVTs - beginning */
YAnchor(16,6)  /*knot, CVT*/ 
/* CVTs - end */


/* YDir: Stroke #0 */
YDist(16,19) /*perpendicular to the stroke*/
YShift(19,9) /*along bottom edge*/

/* YDir: Stroke #1 */
YDist(0,27) /*perpendicular to the stroke*/

Smooth()
</talk>
        <assembly>/* TT glyph 238, char 0x74 (t) */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 0, 11
MDAP[R], 14
MIAP[R], 16, 6
MDRP[m&gt;RBl], 19
SHP[2], 9
SRP0[], 0
MDRP[m&gt;RBl], 27
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="239">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x167 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 238, 0, 0
OFFSET[R], 806, 318, 60
SVTCA[Y]
CALL[], 35, 30, 1, 0, 413, 86
SHC[2], 1
SVTCA[X]
CALL[], 35, 38, 9, 29, 18, 87
SHC[2], 1
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="240">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x165 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 238, 0, 0
OFFSET[R], 776, 773, 0
SVTCA[Y]
CALL[], 45, 14, 1, 1, -63, 86
SHC[2], 1
SVTCA[X]
CALL[], 38, 42, 9, 56, 18, 87
SHC[2], 1

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="241">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x163 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 238, 0, 0
OFFSET[R], 798, 766, 0
SVTCA[Y]
CALL[], 54, 0, 0, 0, 24, 86
SHC[2], 1
SVTCA[X]
CALL[], 38, 59, 9, 31, 18, 87
SHC[2], 1

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="242">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xa765 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 225, 0, 0
OFFSET[R], 806, 249, 573
SVTCA[Y]
CALL[], 49, 1, 2, 0, -292, 86
SHC[2], 3
SVTCA[X]
CALL[], 48, 51, 11, 31, 15, 87
SHC[2], 3

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="243">
      <instructions>
        <talk>/* VTTTalk glyph 243, char 0x75 (u) */
/* GUI generated Fri Jan 10 12:41:16 2020 */

/* Y direction */
YAnchor(0,11)
YDist(0,15)
YShift(0,22)
YAnchor(7,6)
YShift(7,4)
YShift(7,24)
YShift(7,27)
YLink(7,6,66)
YShift(6,26)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 243, char 0x75 (u) */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 0, 11
MDRP[m&gt;RBl], 15
SHP[1], 22
MIAP[R], 7, 6
SHP[1], 4
SHP[1], 24
SHP[1], 27
MIRP[m&gt;RBl], 6, 66
SHP[2], 26
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="244">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xfa */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 243, 0, 0
OFFSET[R], 774, 1037, 0
SVTCA[Y]
CALL[], 44, 27, 1, 1, 159, 86
SHC[2], 2
SVTCA[X]
CALL[], 45, 47, 6, 35, 39, 87
SHC[2], 2

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="245">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x16d */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 243, 0, 0
OFFSET[R], 779, 984, 0
SVTCA[Y]
CALL[], 44, 27, 1, 1, 177, 86
SHC[2], 2
SVTCA[X]
CALL[], 46, 54, 6, 31, 39, 87
SHC[2], 2

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="246">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xfb */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 243, 0, 0
OFFSET[R], 777, 983, 0
SVTCA[Y]
CALL[], 44, 7, 1, 1, 177, 86
SHC[2], 2
SVTCA[X]
CALL[], 45, 48, 6, 31, 39, 87
SHC[2], 2

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="247">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xfc */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 243, 0, 0
OFFSET[R], 771, 984, 0
SVTCA[Y]
CALL[], 44, 27, 1, 1, 177, 86
SHC[2], 2
SHC[2], 3
SVTCA[X]
CALL[], 47, 65, 6, 31, 39, 87
SHC[2], 2
SHC[2], 3
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="248">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xf9 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 243, 0, 0
OFFSET[R], 773, 983, 0
SVTCA[Y]
CALL[], 44, 27, 1, 1, 153, 86
SHC[2], 2
SVTCA[X]
CALL[], 45, 47, 6, 31, 39, 87
SHC[2], 2
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="249">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x171 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 243, 0, 0
OFFSET[R], 775, 1021, 0
SVTCA[Y]
CALL[], 47, 27, 1, 1, 177, 86
SHC[2], 2
SHC[2], 3
SVTCA[X]
CALL[], 44, 50, 6, 34, 39, 87
SHC[2], 2
SHC[2], 3
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="250">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x16b */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 243, 0, 0
OFFSET[R], 782, 983, 0
SVTCA[Y]
CALL[], 44, 7, 1, 1, 199, 86
SHC[2], 2
SVTCA[X]
CALL[], 44, 47, 6, 31, 39, 87
SHC[2], 2
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="251">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x127 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 183, 0, 0
OFFSET[R], 806, 261, 588
SVTCA[Y]
CALL[], 49, 1, 2, 0, -277, 86
SHC[2], 4
SVTCA[X]
CALL[], 48, 51, 0, 6, 47, 87
SHC[2], 4
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="252">
      <instructions>
        <talk>/* VTTTalk glyph 252, char 0x195 */
/* GUI generated Fri Jan 10 12:44:25 2020 */

/* Y direction */
YAnchor(0,11)
YLink(0,30,69)
YAnchor(20,7)
YDist(20,12)
YShift(20,41)
YAnchor(50,10)
YLink(50,51,66)
YShift(50,55)
YAnchor(60,0)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 252, char 0x195 */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 0, 11
MIRP[m&gt;RBl], 30, 69
MIAP[R], 20, 7
MDRP[m&gt;RBl], 12
SHP[1], 41
MIAP[R], 50, 10
MIRP[m&gt;RBl], 51, 66
SHP[1], 55
MIAP[R], 60, 0
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="253">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x19a */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 198, 0, 0
OFFSET[R], 806, 259, 225
SVTCA[Y]
CALL[], 17, 2, 1, 0, -552, 86
SHC[2], 2
SVTCA[X]
CALL[], 16, 19, 0, 33, 10, 87
SHC[2], 2

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="254">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x1b6 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 385, 0, 0
OFFSET[R], 806, 412, -46
SVTCA[Y]
CALL[], 35, 30, 1, 0, 147, 86
SHC[2], 1
SVTCA[X]
CALL[], 35, 38, 4, 30, 31, 87
SHC[2], 1

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="255">
      <instructions>
        <talk>/* VTTTalk glyph 255, char 0x1fb */
/* GUI generated Fri Jan 10 12:47:17 2020 */

/* Y direction */
YAnchor(56,7)
YDist(56,42)
YShift(56,3)
YDist(3,1)
YShift(56,4)
YDist(4,18)
YDist(18,24)
YDist(24,11)
YAnchor(73,11)
YDist(73,88)
YShift(73,30)
YDist(30,66)

/* X direction */

Smooth()


</talk>
        <assembly>/* TT glyph 255, char 0x1fb */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 56, 7
MDRP[m&gt;RBl], 42
SHP[1], 3
SRP0[], 3
MDRP[m&gt;RBl], 1
SRP1[], 56
SHP[1], 4
SRP0[], 4
MDRP[M&gt;RBl], 18
MDRP[M&lt;RWh], 24
MDRP[m&gt;RBl], 11
MIAP[R], 73, 11
MDRP[m&gt;RBl], 88
SHP[1], 30
SRP0[], 30
MDRP[m&gt;RBl], 66
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="256">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x233 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 380, 0, 0
OFFSET[R], 782, 942, 0
SVTCA[Y]
CALL[], 29, 21, 1, 1, 199, 86
SHC[2], 4
SVTCA[X]
CALL[], 29, 32, 3, 30, 28, 87
SHC[2], 4

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="257">
      <instructions>
        <talk>/* VTTTalk glyph 257, char 0x250 */
/* GUI generated Sun Jan 12 10:15:36 2020 */

/* Y direction */
YAnchor(0,11)
YDist(0,29)
YAnchor(60,7)
YDist(60,52)
YShift(60,17)
YDist(17,10)
YInterpolate(0,43,60)
YDist(43,44)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 257, char 0x250 */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 0, 11
MDRP[m&gt;RBl], 29
MIAP[R], 60, 7
MDRP[m&gt;RBl], 52
SHP[1], 17
SRP0[], 17
MDRP[m&gt;RBl], 10
SRP1[], 0
SRP2[], 60
IP[], 43
SRP0[], 43
MDRP[m&gt;RBl], 44
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="258">
      <instructions>
        <talk>/* VTTTalk glyph 258, char 0x251 */
/* GUI generated Sun Jan 12 10:17:18 2020 */

/* Y direction */
YAnchor(0,11)
YLink(0,22,69)
YShift(0,28)
YLink(28,42,69)
YAnchor(8,7)
YLink(8,15,69)
YShift(8,34)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 258, char 0x251 */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 0, 11
MIRP[m&gt;RBl], 22, 69
SHP[1], 28
SRP0[], 28
MIRP[m&gt;RBl], 42, 69
MIAP[R], 8, 7
MIRP[m&gt;RBl], 15, 69
SHP[1], 34
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="259">
      <instructions>
        <talk>/* VTTTalk glyph 259, char 0x252 */
/* GUI generated Sun Jan 12 10:18:33 2020 */

/* Y direction */
YAnchor(0,11)
YLink(0,7,69)
YShift(0,30)
YAnchor(22,7)
YLink(22,14,69)
YShift(22,45)
YLink(45,38,69)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 259, char 0x252 */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 0, 11
MIRP[m&gt;RBl], 7, 69
SHP[1], 30
MIAP[R], 22, 7
MIRP[m&gt;RBl], 14, 69
SHP[1], 45
SRP0[], 45
MIRP[m&gt;RBl], 38, 69
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="260">
      <instructions>
        <talk>/* VTTTalk glyph 260, char 0x253 */
/* GUI generated Sun Jan 12 17:44:04 2020 */

/* Y direction */
YAnchor(13,1)
YDist(13,20)
YShift(13,23)
YShift(13,25)
YAnchor(48,7)
YLink(48,42,69)
YAnchor(56,11)
YLink(56,34,69)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 260, char 0x253 */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 13, 1
MDRP[m&gt;RBl], 20
SHP[1], 23
SHP[1], 25
MIAP[R], 48, 7
MIRP[m&gt;RBl], 42, 69
MIAP[R], 56, 11
MIRP[m&gt;RBl], 34, 69
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="261">
      <instructions>
        <talk>/* VTTTalk glyph 261, char 0x254 */
/* GUI generated Sun Jan 12 10:24:43 2020 */

/* Y direction */
YAnchor(0,11)
YLink(0,16,69)
YAnchor(32,7)
YLink(32,24,69)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 261, char 0x254 */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 0, 11
MIRP[m&gt;RBl], 16, 69
MIAP[R], 32, 7
MIRP[m&gt;RBl], 24, 69
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="262">
      <instructions>
        <talk>/* VTTTalk glyph 262, char 0x255 */
/* GUI generated Sun Jan 12 17:44:22 2020 */

/* Y direction */
YAnchor(0,11)
YLink(0,31,69)
YShift(0,41)
YAnchor(8,7)
YLink(8,23,69)
YIPAnchor(8,38,0)
YLink(38,45,69)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 262, char 0x255 */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 0, 11
MIRP[m&gt;RBl], 31, 69
SHP[1], 41
MIAP[R], 8, 7
MIRP[m&gt;RBl], 23, 69
SRP2[], 0
IP[], 38
MDAP[R], 38
MIRP[m&gt;RBl], 45, 69
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="263">
      <instructions>
        <talk>/* VTTTalk glyph 263, char 0x256 */
/* GUI generated Sun Jan 12 10:27:19 2020 */

/* Y direction */
YAnchor(0,11)
YRound(0,28)
YLink(0,28,69)
YAnchor(9,7)
YLink(9,35,69)
YAnchor(18,0)
YAnchor(43,14)
YDist(43,57)
YShift(43,58)
YDist(43,61)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 263, char 0x256 */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 0, 11
MIRP[m&gt;RBl], 28, 69
MIAP[R], 9, 7
MIRP[m&gt;RBl], 35, 69
MIAP[R], 18, 0
MIAP[R], 43, 14
MDRP[m&gt;RBl], 57
SHP[1], 58
MDRP[m&gt;RBl], 61
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="264">
      <instructions>
        <talk>/* VTTTalk glyph 264, char 0x257 */
/* GUI generated Sun Jan 12 10:30:10 2020 */

/* Y direction */
YAnchor(5,11)
YShift(5,0)
YLink(5,54,69)
YAnchor(14,7)
YLink(14,61,69)
YAnchor(26,0)
YDist(26,32)
YShift(26,35)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 264, char 0x257 */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 5, 11
SHP[1], 0
MIRP[m&gt;RBl], 54, 69
MIAP[R], 14, 7
MIRP[m&gt;RBl], 61, 69
MIAP[R], 26, 0
MDRP[m&gt;RBl], 32
SHP[1], 35
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="265">
      <instructions>
        <talk>/* VTTTalk glyph 265, char 0x258 */
/* GUI generated Sun Jan 12 10:30:58 2020 */

/* Y direction */
YAnchor(0,11)
YLink(0,7,69)
YAnchor(25,7)
YLink(25,15,69)
YIPAnchor(25,18,0)
YDist(18,21)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 265, char 0x258 */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 0, 11
MIRP[m&gt;RBl], 7, 69
MIAP[R], 25, 7
MIRP[m&gt;RBl], 15, 69
SRP2[], 0
IP[], 18
MDAP[R], 18
MDRP[m&gt;RBl], 21
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="266">
      <instructions>
        <talk>/* VTTTalk glyph 266, char 0x25b */
/* GUI generated Sun Jan 12 10:31:47 2020 */

/* Y direction */
YAnchor(0,11)
YLink(0,41,69)
YAnchor(12,7)
YRound(12,26)
YLink(12,26,69)
YIPAnchor(12,32,0)
YDist(32,35)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 266, char 0x25b */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 0, 11
MIRP[m&gt;RBl], 41, 69
MIAP[R], 12, 7
MIRP[m&gt;RBl], 26, 69
SRP2[], 0
IP[], 32
MDAP[R], 32
MDRP[m&gt;RBl], 35
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="267">
      <instructions>
        <talk>/* VTTTalk glyph 267, char 0x25c */
/* GUI generated Sun Jan 12 10:34:05 2020 */

/* Y direction */
YAnchor(0,11)
YLink(0,6,69)
YAnchor(35,7)
YLink(35,21,69)
YIPAnchor(35,14,0)
YDist(14,13)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 267, char 0x25c */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 0, 11
MIRP[m&gt;RBl], 6, 69
MIAP[R], 35, 7
MIRP[m&gt;RBl], 21, 69
SRP2[], 0
IP[], 14
MDAP[R], 14
MDRP[m&gt;RBl], 13
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="268">
      <instructions>
        <talk>/* VTTTalk glyph 268, char 0x25d */
/* GUI generated Sun Jan 12 10:35:15 2020 */

/* Y direction */
YAnchor(0,11)
YLink(0,6,69)
YAnchor(35,7)
YRound(35,21)
YLink(35,21,69)
YIPAnchor(35,14,47,0)
YDist(14,13)
YDist(47,65)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 268, char 0x25d */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 0, 11
MIRP[m&gt;RBl], 6, 69
MIAP[R], 35, 7
MIRP[m&gt;RBl], 21, 69
SRP2[], 0
IP[], 14
IP[], 47
MDAP[R], 14
MDAP[R], 47
SRP0[], 14
MDRP[m&gt;RBl], 13
SRP0[], 47
MDRP[m&gt;RBl], 65
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="269">
      <instructions>
        <talk>/* VTTTalk glyph 269, char 0x25e */
/* GUI generated Sun Jan 12 10:36:48 2020 */

/* Y direction */
YAnchor(0,11)
YLink(0,24,69)
YAnchor(9,7)
YLink(9,39,69)
YIPAnchor(9,32,0)
YDist(32,31)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 269, char 0x25e */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 0, 11
MIRP[m&gt;RBl], 24, 69
MIAP[R], 9, 7
MIRP[m&gt;RBl], 39, 69
SRP2[], 0
IP[], 32
MDAP[R], 32
MDRP[m&gt;RBl], 31
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="270">
      <instructions>
        <talk>/* VTTTalk glyph 270, char 0x25f */
/* GUI generated Sun Jan 12 10:38:28 2020 */

/* Y direction */
YAnchor(0,14)
YLink(0,15,69)
YAnchor(39,6)
YShift(39,26)
YLink(39,38,66)
YIPAnchor(39,22,0)
YDist(22,23)
YShift(23,27)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 270, char 0x25f */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 0, 14
MIRP[m&gt;RBl], 15, 69
MIAP[R], 39, 6
SHP[1], 26
MIRP[m&gt;RBl], 38, 66
SRP2[], 0
IP[], 22
MDAP[R], 22
MDRP[m&gt;RBl], 23
SHP[2], 27
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="271">
      <instructions>
        <talk>/* VTTTalk glyph 271, char 0x260 */
/* GUI generated Sun Jan 12 10:53:16 2020 */

/* Y direction */
YAnchor(0,14)
YLink(0,13,69)
YAnchor(26)
YDist(26,33)
YShift(26,36)
YAnchor(47,11)
YLink(47,69,69)
YAnchor(55,7)
YLink(55,62,69)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 271, char 0x260 */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 0, 14
MIRP[m&gt;RBl], 13, 69
MDAP[R], 26
MDRP[m&gt;RBl], 33
SHP[1], 36
MIAP[R], 47, 11
MIRP[m&gt;RBl], 69, 69
MIAP[R], 55, 7
MIRP[m&gt;RBl], 62, 69
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="272">
      <instructions>
        <talk>/* VTTTalk glyph 272, char 0x261 */
/* GUI generated Sun Jan 12 10:55:20 2020 */

/* Y direction */
YAnchor(0,14)
YLink(0,13,69)
YAnchor(28,11)
YLink(28,50,69)
YAnchor(36,7)
YShift(36,19)
YLink(36,43,69)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 272, char 0x261 */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 0, 14
MIRP[m&gt;RBl], 13, 69
MIAP[R], 28, 11
MIRP[m&gt;RBl], 50, 69
MIAP[R], 36, 7
SHP[1], 19
MIRP[m&gt;RBl], 43, 69
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="273">
      <instructions>
        <talk>/* VTTTalk glyph 273, char 0x262 */
/* GUI generated Sun Jan 12 10:57:50 2020 */

/* Y direction */
YAnchor(0,11)
YLink(0,29,69)
YAnchor(8,7)
YShift(8,14)
YLink(8,21,69)
YInterpolate(0,37,8)
YShift(37,34)
YShift(37,41)
YLink(37,36,66)
YShift(36,39)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 273, char 0x262 */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 0, 11
MIRP[m&gt;RBl], 29, 69
MIAP[R], 8, 7
SHP[1], 14
MIRP[m&gt;RBl], 21, 69
SRP2[], 0
IP[], 37
SRP1[], 37
SHP[1], 34
SHP[1], 41
SRP0[], 37
MIRP[m&gt;RBl], 36, 66
SHP[2], 39
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="274">
      <instructions>
        <talk>/* VTTTalk glyph 274, char 0x263 */
/* GUI generated Sun Jan 12 11:00:57 2020 */

/* Y direction */
YAnchor(0,14)
YLink(0,15,69)
YAnchor(33,6)
YShift(33,7)
YShift(33,22)
YShift(33,38)
YLink(33,32,66)
YShift(32,37)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 274, char 0x263 */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 0, 14
MIRP[m&gt;RBl], 15, 69
MIAP[R], 33, 6
SHP[1], 7
SHP[1], 22
SHP[1], 38
MIRP[m&gt;RBl], 32, 66
SHP[2], 37
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="275">
      <instructions>
        <talk>/* VTTTalk glyph 275, char 0x264 */
/* GUI generated Sun Jan 12 11:03:39 2020 */

/* Y direction */
YAnchor(0,11)
YLink(0,26,69)
YAnchor(43,7)
YShift(43,9)
YLink(43,34,69)
YShift(34,18)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 275, char 0x264 */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 0, 11
MIRP[m&gt;RBl], 26, 69
MIAP[R], 43, 7
SHP[1], 9
MIRP[m&gt;RBl], 34, 69
SHP[2], 18
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="276">
      <instructions>
        <talk>/* VTTTalk glyph 276, char 0x265 */
/* GUI generated Sun Jan 12 11:05:50 2020 */

/* Y direction */
YAnchor(0,11)
YLink(0,19,69)
YAnchor(27,14)
YAnchor(40,6)
YShift(40,9)
YShift(40,32)
YShift(40,45)
YLink(40,39,66)
YShift(39,44)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 276, char 0x265 */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 0, 11
MIRP[m&gt;RBl], 19, 69
MIAP[R], 27, 14
MIAP[R], 40, 6
SHP[1], 9
SHP[1], 32
SHP[1], 45
MIRP[m&gt;RBl], 39, 66
SHP[2], 44
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="277">
      <instructions>
        <talk>/* VTTTalk glyph 277, char 0x266 */
/* GUI generated Sun Jan 12 11:09:47 2020 */

/* Y direction */
YAnchor(9,0)
YDist(9,16)
YShift(9,19)
YAnchor(44,7)
YLink(44,36,69)
YAnchor(54,10)
YShift(54,26)
YShift(54,53)
YShift(54,59)
YLink(54,55,66)
YShift(55,60)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 277, char 0x266 */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 9, 0
MDRP[m&gt;RBl], 16
SHP[1], 19
MIAP[R], 44, 7
MIRP[m&gt;RBl], 36, 69
MIAP[R], 54, 10
SHP[1], 26
SHP[1], 53
SHP[1], 59
MIRP[m&gt;RBl], 55, 66
SHP[2], 60
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="278">
      <instructions>
        <talk>/* VTTTalk glyph 278, char 0x267 */
/* GUI generated Sun Jan 12 11:13:33 2020 */

/* Y direction */
YAnchor(0,14)
YDist(0,11)
YAnchor(34,7)
YLink(34,25,69)
YAnchor(60,0)
YDist(60,67)
YShift(60,70)
YAnchor(78,10)
YShift(78,51)
YLink(78,79,66)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 278, char 0x267 */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 0, 14
MDRP[m&gt;RBl], 11
MIAP[R], 34, 7
MIRP[m&gt;RBl], 25, 69
MIAP[R], 60, 0
MDRP[m&gt;RBl], 67
SHP[1], 70
MIAP[R], 78, 10
SHP[1], 51
MIRP[m&gt;RBl], 79, 66
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="279">
      <instructions>
        <talk>/* VTTTalk glyph 279, char 0x268 */
/* GUI generated Sun Jan 12 11:32:02 2020 */

/* Y direction */
YAnchor(9,7)
YNoRound(20)
YDist(9,20)
YDist(20,26)
YAnchor(15,10)
YShift(15,4)
YLink(15,16,66)
YInterpolate(15,0,9)
YDist(0,1)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 279, char 0x268 */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 9, 7
MDRP[M&lt;rWh], 20
MDRP[m&gt;RBl], 26
MIAP[R], 15, 10
SHP[1], 4
MIRP[m&gt;RBl], 16, 66
SRP2[], 9
IP[], 0
SRP0[], 0
MDRP[m&gt;RBl], 1
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="280">
      <instructions>
        <talk>/* VTTTalk glyph 280, char 0x26a */
/* GUI generated Sun Jan 12 11:33:06 2020 */

/* Y direction */
YAnchor(4,10)
YShift(4,0)
YLink(4,5,66)
YAnchor(11,6)
YShift(11,1)
YLink(11,10,66)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 280, char 0x26a */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 4, 10
SHP[1], 0
MIRP[m&gt;RBl], 5, 66
MIAP[R], 11, 6
SHP[1], 1
MIRP[m&gt;RBl], 10, 66
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="281">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x26b */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 198, 0, 0
OFFSET[R], 805, 684, -453
SVTCA[Y]
CALL[], 29, 2, 1, 0, -519, 86
SHC[2], 2
SVTCA[X]
CALL[], 26, 39, 0, 32, 10, 87
SHC[2], 2
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="282">
      <instructions>
        <talk>/* VTTTalk glyph 282, char 0x26c */
/* GUI generated Sun Jan 12 11:34:45 2020 */

/* Y direction */
YAnchor(5,0)
YAnchor(42,6)
YShift(42,10)
YLink(42,43,66)
YIPAnchor(5,37,30,42)
YDist(37,16)
YDist(30,22)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 282, char 0x26c */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 5, 0
MIAP[R], 42, 6
SHP[1], 10
MIRP[m&gt;RBl], 43, 66
SRP2[], 5
IP[], 37
IP[], 30
MDAP[R], 37
MDAP[R], 30
SRP0[], 37
MDRP[m&gt;RBl], 16
SRP0[], 30
MDRP[m&gt;RBl], 22
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="283">
      <instructions>
        <talk>/* VTTTalk Unicode 0x26d */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(0,14)	/* min */
YAnchor(12,0)	/* max */

/* YDir: Stroke #0 */
YDist(0,26) /*perpendicular to the stroke*/

/* Extreme Min */
YShift(0,23)

Smooth()

</talk>
        <assembly>/* TT glyph 283, char 0x26d */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 0, 14
MIAP[R], 12, 0
SRP0[], 0
MDRP[m&gt;RBl], 26
SHP[1], 23
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="284">
      <instructions>
        <talk>/* VTTTalk glyph 284, char 0x26e */
/* GUI generated Sun Jan 12 11:42:20 2020 */

/* Y direction */
YAnchor(5,0)
YAnchor(11,6)
YShift(11,0)
YLink(11,12,66)
YAnchor(20,6)
YLink(20,19,66)
YAnchor(24,14)
YLink(24,40,69)
YInterpolate(24,56,20)
YLink(56,49,69)
YShift(56,53)
YShift(53,16)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 284, char 0x26e */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 5, 0
MIAP[R], 11, 6
SHP[1], 0
MIRP[m&gt;RBl], 12, 66
MIAP[R], 20, 6
MIRP[m&gt;RBl], 19, 66
MIAP[R], 24, 14
MIRP[m&gt;RBl], 40, 69
SRP2[], 20
IP[], 56
SRP0[], 56
MIRP[m&gt;RBl], 49, 69
SHP[1], 53
SRP1[], 53
SHP[1], 16
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="285">
      <instructions>
        <talk>/* VTTTalk glyph 285, char 0x26f */
/* GUI generated Sun Jan 12 11:45:01 2020 */

/* Y direction */
YAnchor(0,11)
YShift(0,29)
YShift(0,53)
YLink(0,20,69)
YShift(20,44)
YAnchor(71,6)
YShift(71,10)
YShift(71,36)
YShift(71,58)
YShift(71,67)
YShift(71,76)
YLink(71,70,66)
YShift(70,68)
YShift(70,75)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 285, char 0x26f */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 0, 11
SHP[2], 29
SHP[2], 53
MIRP[m&gt;RBl], 20, 69
SHP[2], 44
MIAP[R], 71, 6
SHP[1], 10
SHP[1], 36
SHP[1], 58
SHP[1], 67
SHP[1], 76
MIRP[m&gt;RBl], 70, 66
SHP[2], 68
SHP[2], 75
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="286">
      <instructions>
        <talk>/* VTTTalk glyph 286, char 0x270 */
/* GUI generated Sun Jan 12 11:47:37 2020 */

/* Y direction */
YAnchor(0,14)
YAnchor(11,11)
YShift(11,40)
YLink(11,31,69)
YShift(31,55)
YAnchor(71,6)
YShift(71,5)
YShift(71,21)
YShift(71,47)
YShift(71,67)
YShift(71,76)
YLink(71,70,66)
YShift(70,68)
YShift(70,75)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 286, char 0x270 */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 0, 14
MIAP[R], 11, 11
SHP[1], 40
MIRP[m&gt;RBl], 31, 69
SHP[2], 55
MIAP[R], 71, 6
SHP[1], 5
SHP[1], 21
SHP[1], 47
SHP[1], 67
SHP[1], 76
MIRP[m&gt;RBl], 70, 66
SHP[2], 68
SHP[2], 75
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="287">
      <instructions>
        <talk>/* VTTTalk glyph 287, char 0x271 */
/* GUI generated Sun Jan 12 11:51:16 2020 */

/* Y direction */
YAnchor(0,14)
YDist(0,7)
YShift(0,10)
YShift(0,11)
YAnchor(78,7)
YShift(78,34)
YShift(78,56)
YLink(78,69,69)
YShift(69,25)
YAnchor(91,10)
YShift(91,61)
YShift(91,62)
YShift(91,90)
YLink(91,92,66)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 287, char 0x271 */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 0, 14
MDRP[m&gt;RBl], 7
SHP[1], 10
SHP[1], 11
MIAP[R], 78, 7
SHP[1], 34
SHP[1], 56
MIRP[m&gt;RBl], 69, 69
SHP[2], 25
MIAP[R], 91, 10
SHP[1], 61
SHP[1], 62
SHP[1], 90
MIRP[m&gt;RBl], 92, 66
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="288">
      <instructions>
        <talk>/* VTTTalk glyph 288, char 0x272 */
/* GUI generated Sun Jan 12 11:53:51 2020 */

/* Y direction */
YAnchor(0,14)
YDist(0,7)
YShift(0,10)
YShift(0,11)
YAnchor(51,7)
YShift(51,21)
YLink(51,42,69)
YAnchor(61,6)
YShift(61,33)
YLink(61,62,66)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 288, char 0x272 */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 0, 14
MDRP[m&gt;RBl], 7
SHP[1], 10
SHP[1], 11
MIAP[R], 51, 7
SHP[1], 21
MIRP[m&gt;RBl], 42, 69
MIAP[R], 61, 6
SHP[1], 33
MIRP[m&gt;RBl], 62, 66
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="289">
      <instructions>
        <talk>/* VTTTalk glyph 289, char 0x273 */
/* GUI generated Sun Jan 12 11:56:37 2020 */

/* Y direction */
YAnchor(0,14)
YShift(0,38)
YShift(0,39)
YDist(0,42)
YAnchor(24,7)
YLink(24,16,69)
YShift(24,59)
YAnchor(49,10)
YLink(49,50,66)
YShift(49,54)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 289, char 0x273 */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 0, 14
SHP[2], 38
SHP[2], 39
MDRP[m&gt;RBl], 42
MIAP[R], 24, 7
MIRP[m&gt;RBl], 16, 69
SHP[1], 59
MIAP[R], 49, 10
MIRP[m&gt;RBl], 50, 66
SHP[1], 54
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="290">
      <instructions>
        <talk>/* VTTTalk glyph 290, char 0x274 */
/* GUI generated Sun Jan 12 11:59:53 2020 */

/* Y direction */
YAnchor(19,10)
YShift(19,0)
YShift(19,11)
YShift(19,15)
YLink(19,20,66)
YAnchor(26,6)
YShift(26,5)
YShift(26,12)
YShift(26,16)
YLink(26,25,66)
YShift(25,4)

/* X direction */
XAnchor(13)
XDist(13,12)
XAnchor(16)
XDist(16,17)

Smooth()

</talk>
        <assembly>/* TT glyph 290, char 0x274 */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 19, 10
SHP[1], 0
SHP[1], 11
SHP[1], 15
MIRP[m&gt;RBl], 20, 66
MIAP[R], 26, 6
SHP[1], 5
SHP[1], 12
SHP[1], 16
MIRP[m&gt;RBl], 25, 66
SHP[2], 4
SVTCA[X]
MDAP[R], 13
MDRP[m&gt;RBl], 12
MDAP[R], 16
MDRP[m&gt;RBl], 17
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="291">
      <instructions>
        <talk>/* VTTTalk glyph 291, char 0x275 */
/* GUI generated Sun Jan 12 12:01:09 2020 */

/* Y direction */
YAnchor(0,11)
YLink(0,16,69)
YAnchor(8,7)
YLink(8,24,69)
YIPAnchor(8,32,0)
YDist(32,33)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 291, char 0x275 */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 0, 11
MIRP[m&gt;RBl], 16, 69
MIAP[R], 8, 7
MIRP[m&gt;RBl], 24, 69
SRP2[], 0
IP[], 32
MDAP[R], 32
MDRP[m&gt;RBl], 33
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="292">
      <instructions>
        <talk>/* VTTTalk glyph 292, char 0x276 */
/* GUI generated Sun Jan 12 12:04:27 2020 */

/* Y direction */
YAnchor(33,6)
YLink(33,32,66)
YShift(33,8)
YLink(8,18,69)
YAnchor(36,10)
YLink(36,37,66)
YShift(36,0)
YLink(0,11,69)
YInterpolate(36,45,33)
YDist(45,46)

/* X direction */
XAnchor(51)
XDist(51,50)
XInterpolate(51,47,50)

Smooth()
</talk>
        <assembly>/* TT glyph 292, char 0x276 */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 33, 6
MIRP[m&gt;RBl], 32, 66
SHP[1], 8
SRP0[], 8
MIRP[m&gt;RBl], 18, 69
MIAP[R], 36, 10
MIRP[m&gt;RBl], 37, 66
SHP[1], 0
SRP0[], 0
MIRP[m&gt;RBl], 11, 69
SRP1[], 36
SRP2[], 33
IP[], 45
SRP0[], 45
MDRP[m&gt;RBl], 46
SVTCA[X]
MDAP[R], 51
MDRP[m&gt;RBl], 50
IP[], 47
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="293">
      <instructions>
        <talk>/* VTTTalk glyph 293, char 0x278 */
/* GUI generated Sun Jan 12 17:49:11 2020 */

/* Y direction */
YAnchor(4)
YShift(4,0)
YLink(4,5,66)
YDist(5,14)
YLink(14,31,69)
YDelta(31,1@10..17)
YAnchor(11)
YShift(11,1)
YLink(11,10,66)
YDist(10,23)
YLink(23,39,69)
YDelta(39,-1@10..17)


/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 293, char 0x278 */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MDAP[R], 4
SHP[1], 0
MIRP[M&gt;RBl], 5, 66
MDRP[M&lt;RGr], 14
MIRP[m&lt;RWh], 31, 69
CALL[], 31, 64, 10, 17, 72
MDAP[R], 11
SHP[1], 1
MIRP[M&gt;RBl], 10, 66
MDRP[M&lt;RGr], 23
MIRP[m&lt;RWh], 39, 69
CALL[], 39, -64, 10, 17, 72
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="294">
      <instructions>
        <talk>/* VTTTalk glyph 294, char 0x279 */
/* GUI generated Sun Jan 12 12:09:51 2020 */

/* Y direction */
YAnchor(0,11)
YDist(0,15)
YShift(0,32)
YAnchor(29,6)
YLink(29,28,66)
YShift(29,37)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 294, char 0x279 */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 0, 11
MDRP[m&gt;RBl], 15
SHP[1], 32
MIAP[R], 29, 6
MIRP[m&gt;RBl], 28, 66
SHP[1], 37
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="295">
      <instructions>
        <talk>/* VTTTalk glyph 295, char 0x27a */
/* GUI generated Sun Jan 12 13:48:55 2020 */

/* Y direction */
YAnchor(11,10)
YShift(11,0)
YDist(11,25)
YAnchor(39)
YShift(39,5)
YLink(39,38,66)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 295, char 0x27a */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 11, 10
SHP[1], 0
MDRP[m&gt;RBl], 25
MDAP[R], 39
SHP[1], 5
MIRP[m&gt;RBl], 38, 66
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="296">
      <instructions>
        <talk>/* VTTTalk glyph 296, char 0x27b */
/* GUI generated Sun Jan 12 13:51:26 2020 */

/* Y direction */
YAnchor(0,11)
YDist(0,14)
YAnchor(28,0)
YLink(28,27,66)
YShift(28,39)
YAnchor(31,14)
YShift(31,45)
YShift(31,47)
YDist(31,50)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 296, char 0x27b */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 0, 11
MDRP[m&gt;RBl], 14
MIAP[R], 28, 0
MIRP[m&gt;RBl], 27, 66
SHP[1], 39
MIAP[R], 31, 14
SHP[1], 45
SHP[1], 47
MDRP[m&gt;RBl], 50
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="297">
      <instructions>
        <talk>/* VTTTalk glyph 297, char 0x27d */
/* GUI generated Sun Jan 12 13:52:46 2020 */

/* Y direction */
YAnchor(9,7)
YDist(9,24)
YShift(9,40)
YAnchor(28,14)
YShift(28,49)
YShift(28,51)
YDist(28,54)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 297, char 0x27d */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 9, 7
MDRP[m&gt;RBl], 24
SHP[1], 40
MIAP[R], 28, 14
SHP[1], 49
SHP[1], 51
MDRP[m&gt;RBl], 54
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="298">
      <instructions>
        <talk>/* VTTTalk glyph 298, char 0x27e */
/* GUI generated Sun Jan 12 13:54:15 2020 */

/* Y direction */
YAnchor(6,7)
YDist(6,21)
YAnchor(27,10)
YShift(27,26)
YLink(27,28,66)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 298, char 0x27e */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 6, 7
MDRP[m&gt;RBl], 21
MIAP[R], 27, 10
SHP[1], 26
MIRP[m&gt;RBl], 28, 66
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="299">
      <instructions>
        <talk>/* VTTTalk glyph 299, char 0x27f */
/* GUI generated Sun Jan 12 13:57:12 2020 */

/* Y direction */
YAnchor(0,14)
YLink(0,1,66)
YShift(0,31)
YAnchor(22,7)
YShift(22,11)
YShift(22,12)
YDist(22,15)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 299, char 0x27f */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 0, 14
MIRP[m&gt;RBl], 1, 66
SHP[1], 31
MIAP[R], 22, 7
SHP[1], 11
SHP[1], 12
MDRP[m&gt;RBl], 15
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="300">
      <instructions>
        <talk>/* VTTTalk glyph 300, char 0x280 */
/* GUI generated Sun Jan 12 13:59:46 2020 */

/* Y direction */
YAnchor(44,10)
YShift(44,0)
YShift(44,19)
YLink(44,43,66)
YAnchor(47,6)
YShift(47,21)
YInterpolate(44,6,47)
YDist(6,11)
YLink(47,46,66)
YShift(46,18)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 300, char 0x280 */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 44, 10
SHP[1], 0
SHP[1], 19
MIRP[m&gt;RBl], 43, 66
MIAP[R], 47, 6
SHP[1], 21
SRP2[], 44
IP[], 6
SRP0[], 6
MDRP[m&gt;RBl], 11
SRP0[], 47
MIRP[m&gt;RBl], 46, 66
SHP[2], 18
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="301">
      <instructions>
        <talk>/* VTTTalk glyph 301, char 0x281 */
/* GUI generated Sun Jan 12 14:01:45 2020 */

/* Y direction */
YAnchor(43,10)
YShift(43,39)
YLink(43,42,66)
YShift(42,35)
YAnchor(46,6)
YShift(46,18)
YShift(46,37)
YLink(46,45,66)
YInterpolate(43,24,46)
YDist(24,29)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 301, char 0x281 */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 43, 10
SHP[1], 39
MIRP[m&gt;RBl], 42, 66
SHP[2], 35
MIAP[R], 46, 6
SHP[1], 18
SHP[1], 37
MIRP[m&gt;RBl], 45, 66
SRP2[], 43
IP[], 24
SRP0[], 24
MDRP[m&gt;RBl], 29
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="302">
      <instructions>
        <talk>/* VTTTalk glyph 302, char 0x282 */
/* GUI generated Sun Jan 12 14:04:10 2020 */

/* Y direction */
YAnchor(0,14)
YShift(0,63)
YShift(0,64)
YDist(0,67)
YAnchor(24,7)
YLink(24,40,69)
YAnchor(54,11)
YNoRound(10)
YLink(54,10,69)
YInterpolate(54,48,24)
YShift(48,16)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 302, char 0x282 */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 0, 14
SHP[2], 63
SHP[2], 64
MDRP[m&gt;RBl], 67
MIAP[R], 24, 7
MIRP[m&gt;RBl], 40, 69
MIAP[R], 54, 11
MIRP[m&lt;rBl], 10, 69
SRP2[], 24
IP[], 48
SRP1[], 48
SHP[1], 16
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="303">
      <instructions>
        <talk>/* VTTTalk Unicode 0x283 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(0)	/* min */
YAnchor(28)	/* max */

/* YDir: Stroke #0 */
YDist(28,41) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YDist(0,13) /*perpendicular to the stroke*/

Smooth()
</talk>
        <assembly>/* TT glyph 303, char 0x283 */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 28
MDRP[m&gt;RBl], 41
SRP0[], 0
MDRP[m&gt;RBl], 13
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="304">
      <instructions>
        <talk>/* VTTTalk glyph 304, char 0x284 */
/* GUI generated Sun Jan 12 14:06:48 2020 */

/* Y direction */
YAnchor(0)
YDist(0,6)
YShift(0,8)
YShift(0,9)
YAnchor(22)
YDist(22,29)
YShift(22,32)
YShift(22,33)
YIPAnchor(22,45,0)
YDist(45,46)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 304, char 0x284 */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MDAP[R], 0
MDRP[m&gt;RBl], 6
SHP[1], 8
SHP[1], 9
MDAP[R], 22
MDRP[m&gt;RBl], 29
SHP[1], 32
SHP[1], 33
SRP2[], 0
IP[], 45
MDAP[R], 45
MDRP[m&gt;RBl], 46
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="305">
      <instructions>
        <talk>/* VTTTalk Unicode 0x285 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(0)	/* min */
YAnchor(29)	/* max */

/* YDir: Stroke #0 */
YDist(29,16) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YDist(0,45) /*perpendicular to the stroke*/

Smooth()
</talk>
        <assembly>/* TT glyph 305, char 0x285 */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 29
MDRP[m&gt;RBl], 16
SRP0[], 0
MDRP[m&gt;RBl], 45
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="306">
      <instructions>
        <talk>/* VTTTalk Unicode 0x286 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 6 19  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(0)	/* min */
YAnchor(37)	/* max */

/* YDir: Stroke #0 */
YDist(37,50) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YInterpolate(37,15,0)
YAnchor(15)
YDist(15,6) /*perpendicular to the stroke*/

/* YDir: Stroke #2 */
YDist(0,22) /*perpendicular to the stroke*/

/* Extreme Min */
YShift(0,11)

Smooth()


</talk>
        <assembly>/* TT glyph 306, char 0x286 */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 37
MDRP[m&gt;RBl], 50
SRP2[], 0
IP[], 15
MDAP[R], 15
MDRP[m&gt;RBl], 6
SRP0[], 0
MDRP[m&gt;RBl], 22
SHP[1], 11
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="307">
      <instructions>
        <talk>/* VTTTalk Unicode 0x287 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 3 18  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(0)	/* min */
YAnchor(16,7)	/* max */

/* YDir: Stroke #0 */
YDist(16,9) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YInterpolate(16,3,0)
YAnchor(3)
YDist(3,4) /*perpendicular to the stroke*/
YShift(4,21) /*along top edge*/

Smooth()

</talk>
        <assembly>/* TT glyph 307, char 0x287 */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MDAP[R], 0
MIAP[R], 16, 7
MDRP[m&gt;RBl], 9
SRP2[], 0
IP[], 3
MDAP[R], 3
MDRP[m&gt;RBl], 4
SHP[2], 21
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="308">
      <instructions>
        <talk>/* VTTTalk glyph 308, char 0x288 */
/* GUI generated Sun Jan 12 14:09:48 2020 */

/* Y direction */
YAnchor(0,14)
YShift(0,24)
YShift(0,26)
YDist(0,29)
YAnchor(14)
YAnchor(16,6)
YDist(16,19)
YShift(19,8)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 308, char 0x288 */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 0, 14
SHP[2], 24
SHP[2], 26
MDRP[m&gt;RBl], 29
MDAP[R], 14
MIAP[R], 16, 6
MDRP[m&gt;RBl], 19
SHP[2], 8
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="309">
      <instructions>
        <talk>/* VTTTalk glyph 309, char 0x289 */
/* GUI generated Sun Jan 12 14:12:07 2020 */

/* Y direction */
YAnchor(0,11)
YDist(0,15)
YShift(0,22)
YAnchor(27,6)
YShift(27,7)
YLink(27,26,66)
YShift(26,6)
YInterpolate(0,44,27)
YDist(44,45)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 309, char 0x289 */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 0, 11
MDRP[m&gt;RBl], 15
SHP[1], 22
MIAP[R], 27, 6
SHP[1], 7
MIRP[m&gt;RBl], 26, 66
SHP[2], 6
SRP2[], 0
IP[], 44
SRP0[], 44
MDRP[m&gt;RBl], 45
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="310">
      <instructions>
        <talk>/* VTTTalk glyph 310, char 0x28a */
/* GUI generated Sun Jan 12 14:14:46 2020 */

/* Y direction */
YAnchor(0,11)
YLink(0,22,69)
YAnchor(11,6)
YShift(11,8)
YShift(11,33)
YShift(11,36)
YLink(11,10,66)
YShift(10,34)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 310, char 0x28a */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 0, 11
MIRP[m&gt;RBl], 22, 69
MIAP[R], 11, 6
SHP[1], 8
SHP[1], 33
SHP[1], 36
MIRP[m&gt;RBl], 10, 66
SHP[2], 34
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="311">
      <instructions>
        <talk>/* VTTTalk Unicode 0x28b */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 0 19  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(0,11)	/* min */
YAnchor(9,7)	/* max */

/* YDir: Stroke #0 */
YLink(0,18,69) /*perpendicular to the stroke*/

/* Extreme Max */
YShift(9,32)

Smooth()


</talk>
        <assembly>/* TT glyph 311, char 0x28b */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 0, 11
MIAP[R], 9, 7
SRP0[], 0
MIRP[m&gt;RBl], 18, 69
SRP1[], 9
SHP[1], 32
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="312">
      <instructions>
        <talk>/* VTTTalk glyph 312, char 0x28c */
/* GUI generated Sun Jan 12 14:17:52 2020 */

/* Y direction */
YAnchor(1,7)
YAnchor(8,10)
YShift(8,4)
YShift(8,7)
YShift(8,13)
YLink(8,9,66)
YShift(9,14)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 312, char 0x28c */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 1, 7
MIAP[R], 8, 10
SHP[1], 4
SHP[1], 7
SHP[1], 13
MIRP[m&gt;RBl], 9, 66
SHP[2], 14
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="313">
      <instructions>
        <talk>/* VTTTalk glyph 313, char 0x28d */
/* GUI generated Sun Jan 12 14:23:06 2020 */

/* Y direction */
YAnchor(1,7)
YShift(1,6)
YShift(1,25)
YShift(1,28)
YAnchor(8,10)
YShift(8,4)
YShift(8,7)
YShift(8,13)
YShift(8,18)
YShift(8,23)
YShift(8,26)
YLink(8,9,66)
YShift(9,14)
YShift(9,19)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 313, char 0x28d */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 1, 7
SHP[1], 6
SHP[1], 25
SHP[1], 28
MIAP[R], 8, 10
SHP[1], 4
SHP[1], 7
SHP[1], 13
SHP[1], 18
SHP[1], 23
SHP[1], 26
MIRP[m&gt;RBl], 9, 66
SHP[2], 14
SHP[2], 19
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="314">
      <instructions>
        <talk>/* VTTTalk glyph 314, char 0x28e */
/* GUI generated Sun Jan 12 14:22:59 2020 */

/* Y direction */
YAnchor(4)
YShift(4,27)
YAnchor(15,10)
YShift(15,14)
YShift(15,20)
YShift(15,25)
YLink(15,16,66)
YShift(16,21)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 314, char 0x28e */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MDAP[R], 4
SHP[1], 27
MIAP[R], 15, 10
SHP[1], 14
SHP[1], 20
SHP[1], 25
MIRP[m&gt;RBl], 16, 66
SHP[2], 21
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="315">
      <instructions>
        <talk>/* VTTTalk glyph 315, char 0x28f */
/* GUI generated Sun Jan 12 14:24:51 2020 */

/* Y direction */
YAnchor(12,10)
YShift(12,0)
YLink(12,13,66)
YAnchor(19,6)
YShift(19,3)
YShift(19,8)
YShift(19,24)
YInterpolate(12,2,19)
YShift(2,9)
YLink(19,18,66)
YShift(18,26)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 315, char 0x28f */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 12, 10
SHP[1], 0
MIRP[m&gt;RBl], 13, 66
MIAP[R], 19, 6
SHP[1], 3
SHP[1], 8
SHP[1], 24
SRP2[], 12
IP[], 2
SRP1[], 2
SHP[1], 9
MIRP[m&gt;RBl], 18, 66
SHP[2], 26
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="316">
      <instructions>
        <talk>/* VTTTalk glyph 316, char 0x290 */
/* GUI generated Sun Jan 12 14:26:39 2020 */

/* Y direction */
YAnchor(0)
YShift(0,38)
YShift(0,39)
YDist(0,42)
YAnchor(7,10)
YLink(7,27,66)
YAnchor(23,6)
YShift(23,9)
YLink(23,11,66)
YShift(23,20)
YShift(23,25)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 316, char 0x290 */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MDAP[R], 0
SHP[2], 38
SHP[2], 39
MDRP[m&gt;RBl], 42
MIAP[R], 7, 10
MIRP[m&gt;RBl], 27, 66
MIAP[R], 23, 6
SHP[1], 9
MIRP[m&gt;RBl], 11, 66
SHP[1], 20
SHP[1], 25
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="317">
      <instructions>
        <talk>/* VTTTalk glyph 317, char 0x291 */
/* GUI generated Sun Jan 12 14:31:52 2020 */

/* Y direction */
YAnchor(14,10)
YShift(14,0)
YLink(14,34,66)
YAnchor(30,6)
YShift(30,16)
YLink(30,18,66)
YShift(30,27)
YShift(30,32)
YInterpolate(14,6,30)
YDist(6,41)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 317, char 0x291 */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 14, 10
SHP[1], 0
MIRP[m&gt;RBl], 34, 66
MIAP[R], 30, 6
SHP[1], 16
MIRP[m&gt;RBl], 18, 66
SHP[1], 27
SHP[1], 32
SRP2[], 14
IP[], 6
SRP0[], 6
MDRP[m&gt;RBl], 41
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="318">
      <instructions>
        <talk>/* VTTTalk glyph 318, char 0x292 */
/* GUI generated Sun Jan 12 14:34:24 2020 */

/* Y direction */
YAnchor(0,14)
YLink(0,16,69)
YAnchor(53,6)
YDist(53,43)
YInterpolate(0,32,53)
YDist(32,25)
YShift(32,29)
YShift(29,40)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 318, char 0x292 */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 0, 14
MIRP[m&gt;RBl], 16, 69
MIAP[R], 53, 6
MDRP[m&gt;RBl], 43
SRP2[], 0
IP[], 32
SRP0[], 32
MDRP[m&gt;RBl], 25
SHP[1], 29
SRP1[], 29
SHP[1], 40
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="319">
      <instructions>
        <talk>/* VTTTalk glyph 319, char 0x293 */
/* GUI generated Sun Jan 12 14:43:03 2020 */

/* Y direction */
YAnchor(34,14)
YLink(34,10,69)
YShift(34,43)
YAnchor(57,6)
YDist(57,47)
YShift(57,54)
YShift(57,59)
YInterpolate(34,40,26,57)
YLink(40,3,69)
YLink(26,19,69)
YShift(26,23)
YShift(23,44)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 319, char 0x293 */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 34, 14
MIRP[m&gt;RBl], 10, 69
SHP[1], 43
MIAP[R], 57, 6
MDRP[m&gt;RBl], 47
SHP[1], 54
SHP[1], 59
SRP2[], 34
IP[], 40
IP[], 26
SRP0[], 40
MIRP[m&gt;RBl], 3, 69
SRP0[], 26
MIRP[m&gt;RBl], 19, 69
SHP[1], 23
SRP1[], 23
SHP[1], 44
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="320">
      <instructions>
        <talk>/* VTTTalk glyph 320, char 0x294 */
/* GUI generated Sun Jan 12 14:46:29 2020 */

/* Y direction */
YAnchor(28)
YLink(28,9,69)
YAnchor(39,6)
YShift(39,0)
YShift(39,38)
YLink(39,40,66)
YInterpolate(39,2,28)
YShift(2,36)
YShift(2,37)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 320, char 0x294 */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MDAP[R], 28
MIRP[m&gt;RBl], 9, 69
MIAP[R], 39, 6
SHP[1], 0
SHP[1], 38
MIRP[m&gt;RBl], 40, 66
SRP2[], 28
IP[], 2
SRP1[], 2
SHP[1], 36
SHP[1], 37
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="321">
      <instructions>
        <talk>/* Y direction */
YAnchor(10)
YLink(10,29,69)
YAnchor(39,6)
YShift(39,0)
YShift(39,38)
YLink(39,40,66)
YInterpolate(39,36,10)
YShift(36,2)
YShift(36,1)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 321, char 0x295 */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MDAP[R], 10
MIRP[m&gt;RBl], 29, 69
MIAP[R], 39, 6
SHP[1], 0
SHP[1], 38
MIRP[m&gt;RBl], 40, 66
SRP2[], 10
IP[], 36
SRP1[], 36
SHP[1], 2
SHP[1], 1
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="322">
      <instructions>
        <talk>/* VTTTalk glyph 322, char 0x296 */
/* GUI generated Sun Jan 12 14:51:52 2020 */

/* Y direction */
YAnchor(0,11)
YLink(0,19,69)
YAnchor(41)
YShift(41,29)
YLink(41,40,66)
YInterpolate(0,26,41)
YShift(26,30)
YShift(26,31)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 322, char 0x296 */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 0, 11
MIRP[m&gt;RBl], 19, 69
MDAP[R], 41
SHP[1], 29
MIRP[m&gt;RBl], 40, 66
SRP2[], 0
IP[], 26
SRP1[], 26
SHP[1], 30
SHP[1], 31
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="323">
      <instructions>
        <talk>/* VTTTalk Unicode 0x297 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(0)	/* min */
YAnchor(6,7)	/* max */

/* YDir: Stroke #0 */
YLink(6,22,69) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YLink(0,29,69) /*perpendicular to the stroke*/

Smooth()
</talk>
        <assembly>/* TT glyph 323, char 0x297 */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MDAP[R], 0
MIAP[R], 6, 7
MIRP[m&gt;RBl], 22, 69
SRP0[], 0
MIRP[m&gt;RBl], 29, 69
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="324">
      <instructions>
        <talk>/* VTTTalk glyph 324, char 0x298 */
/* GUI generated Sun Jan 12 14:55:12 2020 */

/* Y direction */
YAnchor(0,11)
YLink(0,20,69)
YAnchor(10)
YLink(10,29,69)
YInterpolate(0,39,45,10)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 324, char 0x298 */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 0, 11
MIRP[m&gt;RBl], 20, 69
MDAP[R], 10
MIRP[m&gt;RBl], 29, 69
SRP2[], 0
IP[], 39
IP[], 45
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="325">
      <instructions>
        <talk>/* VTTTalk glyph 325, char 0x299 */
/* GUI generated Sun Jan 12 14:57:56 2020 */

/* Y direction */
YAnchor(16,10)
YShift(16,0)
YLink(16,17,66)
YShift(17,20)
YAnchor(33,6)
YShift(33,1)
YLink(33,32,66)
YShift(32,41)
YInterpolate(16,35,33)
YDist(35,30)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 325, char 0x299 */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 16, 10
SHP[1], 0
MIRP[m&gt;RBl], 17, 66
SHP[2], 20
MIAP[R], 33, 6
SHP[1], 1
MIRP[m&gt;RBl], 32, 66
SHP[2], 41
SRP2[], 16
IP[], 35
SRP0[], 35
MDRP[m&gt;RBl], 30
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="326">
      <instructions>
        <talk>/* VTTTalk glyph 326, char 0x29b */
/* GUI generated Sun Jan 12 15:00:43 2020 */

/* Y direction */
YAnchor(0,11)
YLink(0,50,69)
YAnchor(8,7)
YLink(8,42,69)
YInterpolate(0,58,8)
YShift(58,55)
YShift(58,62)
YLink(58,57,66)
YShift(57,60)
YAnchor(19)
YDist(19,26)
YShift(19,29)
YShift(19,30)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 326, char 0x29b */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 0, 11
MIRP[m&gt;RBl], 50, 69
MIAP[R], 8, 7
MIRP[m&gt;RBl], 42, 69
SRP2[], 0
IP[], 58
SRP1[], 58
SHP[1], 55
SHP[1], 62
SRP0[], 58
MIRP[m&gt;RBl], 57, 66
SHP[2], 60
MDAP[R], 19
MDRP[m&gt;RBl], 26
SHP[1], 29
SHP[1], 30
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="327">
      <instructions>
        <talk>/* VTTTalk glyph 327, char 0x29c */
/* GUI generated Sun Jan 12 16:15:36 2020 */

/* Y direction */
YAnchor(16,10)
YShift(16,3)
YShift(16,4)
YShift(16,17)
YLink(16,15,66)
YShift(15,18)
YAnchor(25,6)
YShift(25,2)
YShift(25,5)
YShift(25,29)
YInterpolate(16,8,25)
YDist(8,9)
YLink(25,26,66)
YShift(26,28)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 327, char 0x29c */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 16, 10
SHP[1], 3
SHP[1], 4
SHP[1], 17
MIRP[m&gt;RBl], 15, 66
SHP[2], 18
MIAP[R], 25, 6
SHP[1], 2
SHP[1], 5
SHP[1], 29
SRP2[], 16
IP[], 8
SRP0[], 8
MDRP[m&gt;RBl], 9
SRP0[], 25
MIRP[m&gt;RBl], 26, 66
SHP[2], 28
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="328">
      <instructions>
        <talk>/* VTTTalk glyph 328, char 0x29d */
/* GUI generated Sun Jan 12 16:17:27 2020 */

/* Y direction */
YAnchor(0,14)
YShift(0,12)
YLink(0,23,69)
YAnchor(38,7)
YInterpolate(0,7,38)
YLink(7,16,69)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 328, char 0x29d */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 0, 14
SHP[2], 12
MIRP[m&gt;RBl], 23, 69
MIAP[R], 38, 7
SRP2[], 0
IP[], 7
SRP0[], 7
MIRP[m&gt;RBl], 16, 69
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="329">
      <instructions>
        <talk>/* VTTTalk glyph 329, char 0x29f */
/* GUI generated Sun Jan 12 18:48:24 2020 */

/* Y direction */
YAnchor(16,6)
YShift(16,2)
YLink(16,17,66)
YAnchor(18,10)
YShift(18,0)
YShift(18,4)
YLink(18,19,66)
YShift(19,5)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 329, char 0x29f */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 16, 6
SHP[1], 2
MIRP[m&gt;RBl], 17, 66
MIAP[R], 18, 10
SHP[1], 0
SHP[1], 4
MIRP[m&gt;RBl], 19, 66
SHP[2], 5
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="330">
      <instructions>
        <talk>/* VTTTalk glyph 330, char 0x2a0 */
/* GUI generated Sun Jan 12 16:23:44 2020 */

/* Y direction */
YAnchor(6,11)
YLink(6,20,69)
YAnchor(14,7)
YLink(14,29,69)
YAnchor(37,14)
YShift(37,0)
YLink(37,38,66)
YAnchor(51,0)
YDist(51,58)
YShift(51,61)
YShift(51,62)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 330, char 0x2a0 */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 6, 11
MIRP[m&gt;RBl], 20, 69
MIAP[R], 14, 7
MIRP[m&gt;RBl], 29, 69
MIAP[R], 37, 14
SHP[1], 0
MIRP[m&gt;RBl], 38, 66
MIAP[R], 51, 0
MDRP[m&gt;RBl], 58
SHP[1], 61
SHP[1], 62
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="331">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x2a1 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 320, 0, 0
OFFSET[R], 806, 443, 19
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="332">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x2a2 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 321, 0, 0
OFFSET[R], 806, 454, 19
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="333">
      <instructions>
        <talk>/* VTTTalk glyph 333, char 0x2a3 */
/* GUI generated Sun Jan 12 16:48:26 2020 */

/* Y direction */
YAnchor(24,0)
YAnchor(34,6)
YLink(34,76,66)
YShift(34,15)
YLink(15,64,69)
YAnchor(53,11)
YShift(53,0)
YLink(53,38,66)
YShift(53,49)
YShift(53,6)
YLink(6,57,69)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 333, char 0x2a3 */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 24, 0
MIAP[R], 34, 6
MIRP[m&gt;RBl], 76, 66
SHP[1], 15
SRP0[], 15
MIRP[m&gt;RBl], 64, 69
MIAP[R], 53, 11
SHP[1], 0
MIRP[m&gt;RBl], 38, 66
SHP[1], 49
SHP[1], 6
SRP0[], 6
MIRP[m&gt;RBl], 57, 69
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="334">
      <instructions>
        <talk>/* VTTTalk glyph 334, char 0x2a4 */
/* GUI generated Sun Jan 12 17:01:56 2020 */

/* Y direction */
YAnchor(5,11)
YShift(5,0)
YLink(5,40,69)
YAnchor(23,0)
YAnchor(59,6)
YDist(59,58)
YShift(59,14)
YLink(14,47,69)
YAnchor(63,14)
YLink(63,79,69)
YInterpolate(63,95,59)
YLink(95,88,69)
YShift(95,92)
YShift(92,55)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 334, char 0x2a4 */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 5, 11
SHP[1], 0
MIRP[m&gt;RBl], 40, 69
MIAP[R], 23, 0
MIAP[R], 59, 6
MDRP[m&gt;RBl], 58
SHP[1], 14
SRP0[], 14
MIRP[m&gt;RBl], 47, 69
MIAP[R], 63, 14
MIRP[m&gt;RBl], 79, 69
SRP2[], 59
IP[], 95
SRP0[], 95
MIRP[m&gt;RBl], 88, 69
SHP[1], 92
SRP1[], 92
SHP[1], 55
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="335">
      <instructions>
        <talk>/* VTTTalk glyph 335, char 0x2a5 */
/* GUI generated Sun Jan 12 17:08:57 2020 */

/* Y direction */
YAnchor(14,10)
YShift(14,0)
YShift(14,18)
YLink(14,56,66)
YShift(14,24)
YLink(24,72,69)
YAnchor(42,0)
YAnchor(52,6)
YNoRound(91)
YLink(52,91,66)
YDelta(91,-1@10..19)
YInterpolate(14,6,52)
YLink(6,65,69)
YShift(52,33)
YAnchor(33)
YLink(33,79,69)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 335, char 0x2a5 */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 14, 10
SHP[1], 0
SHP[1], 18
MIRP[m&gt;RBl], 56, 66
SHP[1], 24
SRP0[], 24
MIRP[m&gt;RBl], 72, 69
MIAP[R], 42, 0
MIAP[R], 52, 6
MIRP[m&lt;rBl], 91, 66
CALL[], 91, -64, 10, 19, 72
SRP2[], 14
IP[], 6
SRP0[], 6
MIRP[m&gt;RBl], 65, 69
SRP1[], 52
SHP[1], 33
MDAP[R], 33
MIRP[m&gt;RBl], 79, 69
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="336">
      <instructions>
        <talk>/* VTTTalk glyph 336, char 0x2a6 */
/* GUI generated Sun Jan 12 17:14:27 2020 */

/* Y direction */
YAnchor(0,10)
YLink(0,22,69)
YAnchor(12)
YAnchor(37,7)
YLink(37,53,69)
YShift(37,15)
YStem(15,17)
YLink(15,17)
YShift(17,6)
YInterpolate(0,61,37)
YShift(61,29)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 336, char 0x2a6 */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 0, 10
MIRP[m&gt;RBl], 22, 69
MDAP[R], 12
MIAP[R], 37, 7
MIRP[m&gt;RBl], 53, 69
SHP[1], 15
SRP0[], 15
MDRP[m&lt;RGr], 17
SHP[2], 6
SRP1[], 0
SRP2[], 37
IP[], 61
SRP1[], 61
SHP[1], 29
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="337">
      <instructions>
        <talk>/* VTTTalk glyph 337, char 0x2a7 */
/* GUI generated Sun Jan 12 17:16:18 2020 */

/* Y direction */
YAnchor(0,11)
YLink(0,27,69)
YAnchor(14)
YAnchor(16,6)
YLink(16,19,66)
YShift(19,8)
YAnchor(35)
YDist(35,48)
YAnchor(63)
YDist(63,76)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 337, char 0x2a7 */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 0, 11
MIRP[m&gt;RBl], 27, 69
MDAP[R], 14
MIAP[R], 16, 6
MIRP[m&gt;RBl], 19, 66
SHP[2], 8
MDAP[R], 35
MDRP[m&gt;RBl], 48
MDAP[R], 63
MDRP[m&gt;RBl], 76
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="338">
      <instructions>
        <talk>/* VTTTalk glyph 338, char 0x2a8 */
/* GUI generated Sun Jan 12 17:18:55 2020 */

/* Y direction */
YAnchor(0,11)
YLink(0,21,69)
YShift(0,35)
YLink(35,68,69)
YAnchor(11)
YAnchor(13,6)
YLink(13,16,66)
YShift(16,5)
YShift(13,43)
YLink(43,59,69)
YInterpolate(35,28,43)
YLink(28,74,69)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 338, char 0x2a8 */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 0, 11
MIRP[m&gt;RBl], 21, 69
SHP[1], 35
SRP0[], 35
MIRP[m&gt;RBl], 68, 69
MDAP[R], 11
MIAP[R], 13, 6
MIRP[m&gt;RBl], 16, 66
SHP[2], 5
SHP[1], 43
SRP0[], 43
MIRP[m&gt;RBl], 59, 69
SRP2[], 35
IP[], 28
SRP0[], 28
MIRP[m&gt;RBl], 74, 69
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="339">
      <instructions>
        <talk>/* VTTTalk glyph 339, char 0x2a9 */
/* GUI generated Sun Jan 12 17:24:05 2020 */

/* Y direction */
YAnchor(10,0)
YLink(10,26,69)
YAnchor(31,6)
YShift(31,40)
YLink(31,34,66)
YShift(34,1)
YShift(34,39)
YShift(31,83)
YLink(83,74,69)
YAnchor(49,14)
YDist(49,56)
YShift(49,59)
YShift(49,60)
YAnchor(105,10)
YShift(105,35)
YShift(105,36)
YShift(105,104)
YLink(105,106,66)
YShift(106,103)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 339, char 0x2a9 */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 10, 0
MIRP[m&gt;RBl], 26, 69
MIAP[R], 31, 6
SHP[1], 40
MIRP[m&gt;RBl], 34, 66
SHP[2], 1
SHP[2], 39
SHP[1], 83
SRP0[], 83
MIRP[m&gt;RBl], 74, 69
MIAP[R], 49, 14
MDRP[m&gt;RBl], 56
SHP[1], 59
SHP[1], 60
MIAP[R], 105, 10
SHP[1], 35
SHP[1], 36
SHP[1], 104
MIRP[m&gt;RBl], 106, 66
SHP[2], 103
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="340">
      <instructions>
        <talk>/* VTTTalk glyph 340, char 0x2aa */
/* GUI generated Sun Jan 12 18:52:10 2020 */

/* Y direction */
YAnchor(5,0)
YAnchor(11,10)
YShift(11,0)
YLink(11,12,66)
YShift(12,17)
YAnchor(33,7)
YLink(33,49,69)
YInterpolate(11,57,33)
YShift(57,24)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 340, char 0x2aa */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 5, 0
MIAP[R], 11, 10
SHP[1], 0
MIRP[m&gt;RBl], 12, 66
SHP[2], 17
MIAP[R], 33, 7
MIRP[m&gt;RBl], 49, 69
SRP2[], 11
IP[], 57
SRP1[], 57
SHP[1], 24
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="341">
      <instructions>
        <talk>/* VTTTalk glyph 341, char 0x2ab */
/* GUI generated Sun Jan 12 17:31:38 2020 */

/* Y direction */
YAnchor(9,0)
YAnchor(20,6)
YLink(20,41,66)
YAnchor(34,10)
YShift(34,0)
YShift(34,4)
YShift(34,38)
YLink(34,35,66)
YShift(35,24)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 341, char 0x2ab */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 9, 0
MIAP[R], 20, 6
MIRP[m&gt;RBl], 41, 66
MIAP[R], 34, 10
SHP[1], 0
SHP[1], 4
SHP[1], 38
MIRP[m&gt;RBl], 35, 66
SHP[2], 24
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="342">
      <instructions>
        <talk>/* VTTTalk glyph 342, char 0x2ac */
/* GUI generated Sun Jan 12 17:34:20 2020 */

/* Y direction */
YAnchor(7)
YShift(7,15)
YAnchor(23)
YShift(23,2)
YShift(23,5)
YShift(23,9)
YShift(23,13)
YShift(23,19)
YShift(23,28)
YDist(23,22)
YShift(22,20)
YShift(22,27)
YAnchor(38)
YShift(38,46)
YAnchor(54)
YShift(54,33)
YShift(54,36)
YShift(54,40)
YShift(54,44)
YShift(54,50)
YShift(54,59)
YDist(54,53)
YShift(53,51)
YShift(53,58)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 342, char 0x2ac */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MDAP[R], 7
SHP[1], 15
MDAP[R], 23
SHP[1], 2
SHP[1], 5
SHP[1], 9
SHP[1], 13
SHP[1], 19
SHP[1], 28
MDRP[m&gt;RBl], 22
SHP[2], 20
SHP[2], 27
MDAP[R], 38
SHP[1], 46
MDAP[R], 54
SHP[1], 33
SHP[1], 36
SHP[1], 40
SHP[1], 44
SHP[1], 50
SHP[1], 59
MDRP[m&gt;RBl], 53
SHP[2], 51
SHP[2], 58
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="343">
      <instructions>
        <talk>/* VTTTalk glyph 343, char 0x2ad */
/* GUI generated Sun Jan 12 17:36:26 2020 */

/* Y direction */
YAnchor(1,6)
YDist(1,6)
YAnchor(8,10)
YShift(8,12)
YInterpolate(8,9,0,1)
YDist(9,14)
YShift(0,4)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 343, char 0x2ad */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 1, 6
MDRP[m&gt;RBl], 6
MIAP[R], 8, 10
SHP[1], 12
SRP2[], 1
IP[], 9
IP[], 0
SRP0[], 9
MDRP[m&gt;RBl], 14
SRP1[], 0
SHP[1], 4
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="344">
      <instructions>
        <talk>/* VTTTalk glyph 344, char 0x2ae */
/* GUI generated Sun Jan 12 17:38:35 2020 */

/* Y direction */
YAnchor(2,6)
YLink(2,1,66)
YShift(2,10)
YShift(2,40)
YShift(40,29)
YShift(40,30)
YDist(40,33)
YAnchor(5,14)
YAnchor(16,11)
YLink(16,51,69)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 344, char 0x2ae */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 2, 6
MIRP[m&gt;RBl], 1, 66
SHP[1], 10
SHP[1], 40
SRP1[], 40
SHP[1], 29
SHP[1], 30
SRP0[], 40
MDRP[m&gt;RBl], 33
MIAP[R], 5, 14
MIAP[R], 16, 11
MIRP[m&gt;RBl], 51, 69
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="345">
      <instructions>
        <talk>/* VTTTalk glyph 345, char 0x2af */
/* GUI generated Sun Jan 12 17:42:10 2020 */

/* Y direction */
YAnchor(0,11)
YLink(0,35,69)
YAnchor(43,14)
YShift(43,55)
YShift(43,57)
YDist(43,60)
YAnchor(69,6)
YShift(69,49)
YLink(69,68,66)
YShift(69,24)
YShift(24,13)
YShift(24,14)
YDist(24,17)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 345, char 0x2af */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 0, 11
MIRP[m&gt;RBl], 35, 69
MIAP[R], 43, 14
SHP[1], 55
SHP[1], 57
MDRP[m&gt;RBl], 60
MIAP[R], 69, 6
SHP[1], 49
MIRP[m&gt;RBl], 68, 66
SHP[1], 24
SRP1[], 24
SHP[1], 13
SHP[1], 14
SRP0[], 24
MDRP[m&gt;RBl], 17
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="346">
      <instructions>
        <talk>/* VTTTalk glyph 346, char 0x1d79 */
/* GUI generated Mon Jan 13 06:11:20 2020 */

/* Y direction */
YAnchor(0,14)
YLink(0,35,69)
YAnchor(57,6)
YShift(57,19)
YDist(57,51)
YShift(57,54)
YShift(57,61)
YInterpolate(0,43,57)
YShift(43,9)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 346, char 0x1d79 */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 0, 14
MIRP[m&gt;RBl], 35, 69
MIAP[R], 57, 6
SHP[1], 19
MDRP[m&gt;RBl], 51
SHP[1], 54
SHP[1], 61
SRP2[], 0
IP[], 43
SRP1[], 43
SHP[1], 9
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="347">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x1e8f */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 380, 0, 0
OFFSET[R], 772, 942, 0
SVTCA[Y]
CALL[], 29, 26, 1, 1, 177, 86
SHC[2], 4
SVTCA[X]
CALL[], 32, 38, 3, 30, 28, 87
SHC[2], 4
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="348">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x1e9c */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 237, 0, 0
OFFSET[R], 807, 275, 178
SVTCA[Y]
CALL[], 40, 19, 1, 1, -526, 86
SHC[2], 2
SVTCA[X]
CALL[], 39, 41, 0, 8, 14, 87
SHC[2], 2
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="349">
      <instructions>
        <talk>/* VTTTalk glyph 349, char 0x2c71 */
/* GUI generated Sun Jan 12 18:59:48 2020 */

/* Y direction */
YAnchor(0,11)
YAnchor(29,6)
YShift(29,2)
YLink(29,30,66)
YShift(29,9)
YShift(9,18)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 349, char 0x2c71 */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 0, 11
MIAP[R], 29, 6
SHP[1], 2
MIRP[m&gt;RBl], 30, 66
SHP[1], 9
SRP1[], 9
SHP[1], 18
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="350">
      <instructions>
        <talk>/* VTTTalk glyph 350, char 0xa733 */
/* GUI generated Mon Jan 13 08:37:49 2020 */

/* Y direction */
YAnchor(19,7)
YShift(19,71)
YDist(19,5)
YShift(5,63)
YAnchor(89,11)
YShift(89,26)
YInterpolate(89,34,19)
YShift(34,97)
YDist(34,35)
YShift(35,98)
YShift(89,51)
YLink(51,82,69)
YDist(89,106)
YShift(106,43)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 350, char 0xa733 */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 19, 7
SHP[1], 71
MDRP[m&gt;RBl], 5
SHP[2], 63
MIAP[R], 89, 11
SHP[1], 26
SRP2[], 19
IP[], 34
SRP1[], 34
SHP[1], 97
SRP0[], 34
MDRP[m&gt;RBl], 35
SHP[2], 98
SRP1[], 89
SHP[1], 51
SRP0[], 51
MIRP[m&gt;RBl], 82, 69
SRP0[], 89
MDRP[m&gt;RBl], 106
SHP[2], 43
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="351">
      <instructions>
        <talk>/* VTTTalk glyph 351, char 0xa735 */
/* GUI generated Mon Jan 13 08:38:11 2020 */

/* Y direction */
YAnchor(0,11)
YDist(0,18)
YShift(0,51)
YLink(51,68,69)
YAnchor(46,7)
YDist(46,32)
YInterpolate(0,8,46)
YDist(8,9)
YShift(46,60)
YLink(60,76,69)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 351, char 0xa735 */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 0, 11
MDRP[m&gt;RBl], 18
SHP[1], 51
SRP0[], 51
MIRP[m&gt;RBl], 68, 69
MIAP[R], 46, 7
MDRP[m&gt;RBl], 32
SRP2[], 0
IP[], 8
SRP0[], 8
MDRP[m&gt;RBl], 9
SRP1[], 46
SHP[1], 60
SRP0[], 60
MIRP[m&gt;RBl], 76, 69
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="352">
      <instructions>
        <talk>/* VTTTalk glyph 352, char 0xa737 */
/* GUI generated Mon Jan 13 08:38:37 2020 */

/* Y direction */
YAnchor(0,11)
YLink(0,30,69)
YShift(0,63)
YShift(0,39)
YDist(39,54)
YAnchor(68,6)
YLink(68,67,66)
YShift(68,22)
YDist(22,8)
YInterpolate(0,46,68)
YDist(46,47)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 352, char 0xa737 */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 0, 11
MIRP[m&gt;RBl], 30, 69
SHP[1], 63
SHP[1], 39
SRP0[], 39
MDRP[m&gt;RBl], 54
MIAP[R], 68, 6
MIRP[m&gt;RBl], 67, 66
SHP[1], 22
SRP0[], 22
MDRP[m&gt;RBl], 8
SRP1[], 0
SRP2[], 68
IP[], 46
SRP0[], 46
MDRP[m&gt;RBl], 47
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="353">
      <instructions>
        <talk>/* VTTTalk glyph 353, char 0xa739 */
/* GUI generated Mon Jan 13 08:38:58 2020 */

/* Y direction */
YAnchor(26,11)
YShift(26,0)
YDist(26,44)
YShift(26,52)
YAnchor(58,6)
YShift(58,53)
YLink(58,57,66)
YShift(58,19)
YDist(19,5)
YInterpolate(26,34,19)
YDist(34,35)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 353, char 0xa739 */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 26, 11
SHP[1], 0
MDRP[m&gt;RBl], 44
SHP[1], 52
MIAP[R], 58, 6
SHP[1], 53
MIRP[m&gt;RBl], 57, 66
SHP[1], 19
SRP0[], 19
MDRP[m&gt;RBl], 5
SRP2[], 26
IP[], 34
SRP0[], 34
MDRP[m&gt;RBl], 35
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="354">
      <instructions>
        <talk>/* VTTTalk glyph 354, char 0xa73b */
/* GUI generated Mon Jan 13 08:39:19 2020 */

/* Y direction */
YAnchor(0,11)
YDist(0,19)
YShift(0,27)
YShift(0,53)
YAnchor(59,6)
YShift(59,54)
YLink(59,58,69)
YInterpolate(0,8,59)
YLink(8,11,66)
YShift(59,46)
YNoRound(32)
YDist(46,32)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 354, char 0xa73b */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 0, 11
MDRP[m&gt;RBl], 19
SHP[1], 27
SHP[1], 53
MIAP[R], 59, 6
SHP[1], 54
MIRP[m&gt;RBl], 58, 69
SRP2[], 0
IP[], 8
SRP0[], 8
MIRP[m&gt;RBl], 11, 66
SRP1[], 59
SHP[1], 46
SRP0[], 46
MDRP[m&lt;rBl], 32
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="355">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xa741 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 196, 0, 0
OFFSET[R], 806, 256, 573
SVTCA[Y]
CALL[], 42, 39, 1, 0, 159, 86
SHC[2], 5
SVTCA[X]
CALL[], 42, 45, 0, 6, 36, 87
SHC[2], 5

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="356">
      <instructions>
        <talk>/* VTTTalk glyph 356, char 0xa74b */
/* GUI generated Sun Jan 12 19:18:20 2020 */

/* Y direction */
YAnchor(0,11)
YLink(0,17,69)
YAnchor(9,7)
YLink(9,25,69)
YInterpolate(0,33,9)
YLink(33,34,66)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 356, char 0xa74b */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 0, 11
MIRP[m&gt;RBl], 17, 69
MIAP[R], 9, 7
MIRP[m&gt;RBl], 25, 69
SRP2[], 0
IP[], 33
SRP0[], 33
MIRP[m&gt;RBl], 34, 66
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="357">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xa751 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 224, 0, 0
OFFSET[R], 806, 261, -724
SVTCA[Y]
CALL[], 48, 0, 2, 0, 234, 86
SHC[2], 3
SVTCA[X]
CALL[], 48, 51, 0, 16, 47, 87
SHC[2], 3
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="358">
      <instructions>
        <talk>/* VTTTalk glyph 358, char 0xa753 */
/* GUI generated Sun Jan 12 19:21:05 2020 */

/* Y direction */
YAnchor(33,11)
YShift(33,54)
YLink(33,69,69)
YAnchor(42,6)
YShift(42,1)
YLink(42,60,66)
YShift(60,27)
YAnchor(44,14)
YShift(44,0)
YLink(44,45,66)
YInterpolate(44,18,60)
YLink(18,10,69)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 358, char 0xa753 */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 33, 11
SHP[1], 54
MIRP[m&gt;RBl], 69, 69
MIAP[R], 42, 6
SHP[1], 1
MIRP[m&gt;RBl], 60, 66
SHP[2], 27
MIAP[R], 44, 14
SHP[1], 0
MIRP[m&gt;RBl], 45, 66
SRP2[], 60
IP[], 18
SRP0[], 18
MIRP[m&gt;RBl], 10, 69
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="359">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xa757 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 226, 0, 0
OFFSET[R], 806, 835, -712
SVTCA[Y]
CALL[], 47, 5, 1, 1, -150, 86
SHC[2], 3
SVTCA[X]
CALL[], 46, 49, 9, 49, 45, 87
SHC[2], 3

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="360">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xa759 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 226, 0, 0
OFFSET[R], 807, 851, -568
SVTCA[Y]
CALL[], 48, 5, 1, 0, 29, 86
SHC[2], 3
SVTCA[X]
CALL[], 47, 49, 9, 50, 45, 87
SHC[2], 3

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="361">
      <instructions>
        <talk>/* VTTTalk glyph 361, char 0xa75d */
/* GUI generated Sun Jan 12 19:24:04 2020 */

/* Y direction */
YAnchor(17,7)
YLink(17,9,69)
YAnchor(28,10)
YDist(28,27)
YShift(28,29)
YShift(28,31)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 361, char 0xa75d */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 17, 7
MIRP[m&gt;RBl], 9, 69
MIAP[R], 28, 10
MDRP[m&gt;RBl], 27
SHP[1], 29
SHP[1], 31
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="362">
      <instructions>
        <talk>/* VTTTalk glyph 362, char 0xa76f */
/* GUI generated Sun Jan 12 19:25:31 2020 */

/* Y direction */
YAnchor(0)
YAnchor(37,7)
YLink(37,9,69)
YInterpolate(0,29,37)
YDist(29,18)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 362, char 0xa76f */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MDAP[R], 0
MIAP[R], 37, 7
MIRP[m&gt;RBl], 9, 69
SRP2[], 0
IP[], 29
SRP0[], 29
MDRP[m&gt;RBl], 18
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="363">
      <instructions>
        <talk>/* VTTTalk glyph 363, char 0xa77a */
/* GUI generated Sun Jan 12 19:28:09 2020 */

/* Y direction */
YAnchor(0,11)
YLink(0,17,69)
YAnchor(41,7)
YShift(41,33)
YDist(41,25)
YInterpolate(25,9,41)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 363, char 0xa77a */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 0, 11
MIRP[m&gt;RBl], 17, 69
MIAP[R], 41, 7
SHP[1], 33
MDRP[m&lt;RGr], 25
IP[], 9
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="364">
      <instructions>
        <talk>/* VTTTalk glyph 364, char 0xa77c */
/* GUI generated Sun Jan 12 19:29:47 2020 */

/* Y direction */
YAnchor(0,14)
YAnchor(23,7)
YShift(23,8)
YDist(23,38)
YAnchor(45,10)
YLink(45,44,66)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 364, char 0xa77c */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 0, 14
MIAP[R], 23, 7
SHP[1], 8
MDRP[m&gt;RBl], 38
MIAP[R], 45, 10
MIRP[m&gt;RBl], 44, 66
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="365">
      <instructions>
        <talk>/* VTTTalk glyph 365, char 0xa783 */
/* GUI generated Mon Jan 13 10:01:33 2020 */

/* Y direction */
YAnchor(19,7)
YDist(19,10)
YShift(19,37)
YAnchor(29,14)
YInterpolate(29,0,19)
YShift(0,44)
YShift(0,45)
YShift(0,46)
YShift(0,47)
YShift(0,48)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 365, char 0xa783 */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 19, 7
MDRP[m&gt;RBl], 10
SHP[1], 37
MIAP[R], 29, 14
SRP2[], 19
IP[], 0
SRP1[], 0
SHP[1], 44
SHP[1], 45
SHP[1], 46
SHP[1], 47
SHP[1], 48
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="366">
      <instructions>
        <talk>/* VTTTalk glyph 366, char 0xa785 */
/* GUI generated Sun Jan 12 19:33:22 2020 */

/* Y direction */
YAnchor(8,7)
YDist(8,22)
YShift(8,34)
YAnchor(26,14)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 366, char 0xa785 */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 8, 7
MDRP[m&gt;RBl], 22
SHP[1], 34
MIAP[R], 26, 14
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="367">
      <instructions>
        <talk>/* VTTTalk glyph 367, char 0xa787 */
/* GUI generated Mon Jan 13 10:01:08 2020 */

/* Y direction */
YAnchor(0,11)
YNoRound(15)
YDist(0,15)
YAnchor(29,6)
YShift(29,26)
YDist(29,23)
YInterpolate(23,7,29)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 367, char 0xa787 */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 0, 11
MDRP[m&lt;rBl], 15
MIAP[R], 29, 6
SHP[1], 26
MDRP[m&gt;RBl], 23
IP[], 7
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="368">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x173 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 243, 0, 0
OFFSET[R], 799, 1329, -16
SVTCA[Y]
CALL[], 50, 0, 0, 0, 47, 86
SHC[2], 2
SVTCA[X]
CALL[], 47, 59, 6, 52, 39, 87
SHC[2], 2
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="369">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x16f */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 243, 0, 0
OFFSET[R], 780, 983, 0
SVTCA[Y]
CALL[], 44, 27, 1, 1, 177, 86
SHC[2], 2
SHC[2], 3
SVTCA[X]
CALL[], 48, 54, 6, 31, 39, 87
SHC[2], 2
SHC[2], 3

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="370">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x169 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 243, 0, 0
OFFSET[R], 781, 983, 0
SVTCA[Y]
CALL[], 53, 7, 1, 1, 198, 86
SHC[2], 2
SVTCA[X]
CALL[], 54, 67, 6, 31, 39, 87
SHC[2], 2
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="371">
      <instructions>
        <talk>/* VTTTalk glyph 371, char 0x76 (v) */
/* GUI generated Fri Jan 10 12:48:42 2020 */

/* Y direction */
YAnchor(0,11)
YAnchor(10,6)
YShift(10,2)
YShift(10,6)
YShift(10,15)
YLink(10,9,66)
YShift(9,14)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 371, char 0x76 (v) */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 0, 11
MIAP[R], 10, 6
SHP[1], 2
SHP[1], 6
SHP[1], 15
MIRP[m&gt;RBl], 9, 66
SHP[2], 14
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="372">
      <instructions>
        <talk>/* VTTTalk glyph 372, char 0x77 (w) */
/* GUI generated Fri Jan 10 12:50:23 2020 */

/* Y direction */
YAnchor(0,11)
YShift(0,8)
YAnchor(18,6)
YShift(18,2)
YShift(18,9)
YShift(18,14)
YShift(18,23)
YShift(18,28)
YLink(18,17,66)
YShift(17,22)
YShift(17,27)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 372, char 0x77 (w) */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 0, 11
SHP[2], 8
MIAP[R], 18, 6
SHP[1], 2
SHP[1], 9
SHP[1], 14
SHP[1], 23
SHP[1], 28
MIRP[m&gt;RBl], 17, 66
SHP[2], 22
SHP[2], 27
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="373">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x1e83 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 372, 0, 0
OFFSET[R], 774, 1232, 0
SVTCA[Y]
CALL[], 31, 23, 1, 1, 159, 86
SHC[2], 5
SVTCA[X]
CALL[], 32, 34, 17, 34, 30, 87
SHC[2], 5
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="374">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x175 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 372, 0, 0
OFFSET[R], 777, 1178, 0
SVTCA[Y]
CALL[], 31, 23, 1, 1, 177, 86
SHC[2], 5
SVTCA[X]
CALL[], 32, 35, 17, 32, 30, 87
SHC[2], 5

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="375">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x1e85 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 372, 0, 0
OFFSET[R], 771, 1179, 0
SVTCA[Y]
CALL[], 31, 23, 1, 1, 177, 86
SHC[2], 5
SHC[2], 6
SVTCA[X]
CALL[], 34, 52, 17, 32, 30, 87
SHC[2], 5
SHC[2], 6
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="376">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x1e81 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 372, 0, 0
OFFSET[R], 773, 1178, 0
SVTCA[Y]
CALL[], 31, 23, 1, 1, 153, 86
SHC[2], 5
SVTCA[X]
CALL[], 32, 34, 17, 32, 30, 87
SHC[2], 5
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="377">
      <instructions>
        <talk>/* VTTTalk glyph 377, char 0xa761 */
/* GUI generated Sat Jan 11 15:30:20 2020 */

/* Y direction */
YAnchor(7,11)
YShift(7,8)
YAnchor(20,6)
YShift(20,2)
YShift(20,9)
YShift(20,16)
YShift(20,25)
YShift(20,38)
YLink(20,22,66)
YShift(22,17)
YShift(22,24)
YAnchor(28,14)
YDist(28,34)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 377, char 0xa761 */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 7, 11
SHP[1], 8
MIAP[R], 20, 6
SHP[1], 2
SHP[1], 9
SHP[1], 16
SHP[1], 25
SHP[1], 38
MIRP[m&lt;RGr], 22, 66
SHP[2], 17
SHP[2], 24
MIAP[R], 28, 14
MDRP[m&gt;RBl], 34
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="378">
      <instructions>
        <talk>/* VTTTalk glyph 378, char 0x1bf */
/* GUI generated Mon Jan 13 10:02:06 2020 */

/* Y direction */
YAnchor(0,11)
YLink(0,1,69)
YAnchor(15,7)
YLink(15,8,69)
YShift(15,31)
YAnchor(23,14)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 378, char 0x1bf */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 0, 11
MIRP[m&gt;RBl], 1, 69
MIAP[R], 15, 7
MIRP[m&gt;RBl], 8, 69
SHP[1], 31
MIAP[R], 23, 14
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="379">
      <instructions>
        <talk>/* VTTTalk glyph 379, char 0x78 (x) */
/* GUI generated Fri Jan 10 15:40:43 2020 */

/* Y direction */
YAnchor(8,10)
YShift(8,0)
YShift(8,4)
YShift(8,13)
YLink(8,9,66)
YShift(9,14)
YAnchor(20,6)
YShift(20,1)
YShift(20,5)
YShift(20,25)
YLink(20,19,66)
YShift(19,24)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 379, char 0x78 (x) */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 8, 10
SHP[1], 0
SHP[1], 4
SHP[1], 13
MIRP[m&gt;RBl], 9, 66
SHP[2], 14
MIAP[R], 20, 6
SHP[1], 1
SHP[1], 5
SHP[1], 25
MIRP[m&gt;RBl], 19, 66
SHP[2], 24
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="380">
      <instructions>
        <talk>/* VTTTalk glyph 380, char 0x79 (y) */
/* GUI generated Fri Jan 10 15:42:34 2020 */

/* Y direction */
YAnchor(0,14)
YAnchor(21,6)
YShift(21,11)
YShift(21,17)
YShift(21,26)
YInterpolate(0,15,21)
YLink(21,20,66)
YShift(20,25)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 380, char 0x79 (y) */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 0, 14
MIAP[R], 21, 6
SHP[1], 11
SHP[1], 17
SHP[1], 26
IP[], 15
MIRP[m&gt;RBl], 20, 66
SHP[2], 25
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="381">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xfd */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 380, 0, 0
OFFSET[R], 774, 996, 0
SVTCA[Y]
CALL[], 29, 26, 1, 1, 159, 86
SHC[2], 4
SVTCA[X]
CALL[], 30, 32, 3, 34, 28, 87
SHC[2], 4
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="382">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x177 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 380, 0, 0
OFFSET[R], 777, 942, 0
SVTCA[Y]
CALL[], 29, 21, 1, 1, 177, 86
SHC[2], 4
SVTCA[X]
CALL[], 30, 33, 3, 30, 28, 87
SHC[2], 4

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="383">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xff */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 380, 0, 0
OFFSET[R], 771, 943, 0
SVTCA[Y]
CALL[], 29, 21, 1, 1, 177, 86
SHC[2], 4
SHC[2], 5
SVTCA[X]
CALL[], 32, 50, 3, 30, 28, 87
SHC[2], 4
SHC[2], 5
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="384">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x1ef3 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 380, 0, 0
OFFSET[R], 773, 942, 0
SVTCA[Y]
CALL[], 29, 26, 1, 1, 153, 86
SHC[2], 4
SVTCA[X]
CALL[], 30, 32, 3, 30, 28, 87
SHC[2], 4
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="385">
      <instructions>
        <talk>/* VTTTalk glyph 385, char 0x7a (z) */
/* GUI generated Fri Jan 10 15:42:59 2020 */

/* Y direction */
YAnchor(4,10)
YShift(4,23)
YDist(4,24)
YShift(4,34)
YAnchor(20,6)
YShift(20,6)
YDist(20,8)
YShift(20,17)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 385, char 0x7a (z) */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 4, 10
SHP[1], 23
MDRP[m&gt;RBl], 24
SHP[1], 34
MIAP[R], 20, 6
SHP[1], 6
MDRP[m&gt;RBl], 8
SHP[1], 17
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="386">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x17a */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 385, 0, 0
OFFSET[R], 774, 920, 0
SVTCA[Y]
CALL[], 35, 20, 1, 1, 159, 86
SHC[2], 1
SVTCA[X]
CALL[], 36, 38, 4, 37, 31, 87
SHC[2], 1

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="387">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x17e */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 385, 0, 0
OFFSET[R], 778, 866, 0
SVTCA[Y]
CALL[], 35, 20, 1, 1, 177, 86
SHC[2], 1
SVTCA[X]
CALL[], 36, 41, 4, 33, 31, 87
SHC[2], 1

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="388">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x17c */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 385, 0, 0
OFFSET[R], 772, 866, 0
SVTCA[Y]
CALL[], 35, 20, 1, 1, 177, 86
SHC[2], 1
SVTCA[X]
CALL[], 38, 44, 4, 33, 31, 87
SHC[2], 1

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="389">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 198, 0, 0
OFFSET[R], 840, 870, 127
SVTCA[Y]
CALL[], 16, 5, 1, 1, 108, 86
SHC[2], 2
SVTCA[X]
CALL[], 17, 19, 0, 34, 10, 87
SHC[2], 2

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="390">
      <instructions>
        <talk>/* VTTTalk glyph 390, char 0xffff */
/* GUI generated Fri Jan 10 15:44:47 2020 */

/* Y direction */
YAnchor(0,11)
YLink(0,26,69)
YAnchor(8,7)
YLink(8,35,69)
YAnchor(13,0)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 390, char 0xffff */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 0, 11
MIRP[m&gt;RBl], 26, 69
MIAP[R], 8, 7
MIRP[m&gt;RBl], 35, 69
MIAP[R], 13, 0
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="391">
      <instructions>
        <talk>/* VTTTalk glyph 391, char 0xffff */
/* GUI generated Fri Jan 10 15:49:40 2020 */

/* Y direction */
YAnchor(0,11)
YLink(0,25,80)
YAnchor(8,7)
YLink(8,35,69)
YAnchor(50)
YInterpolate(8,45,50)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 391, char 0xffff */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 0, 11
MIRP[m&gt;RBl], 25, 80
MIAP[R], 8, 7
MIRP[m&gt;RBl], 35, 69
MDAP[R], 50
SRP2[], 8
IP[], 45
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="392">
      <instructions>
        <talk>/* VTTTalk glyph 392, char 0xffff */
/* GUI generated Mon Jan 13 10:02:43 2020 */

/* Y direction */
YAnchor(11,1)
YLink(11,26,69)
YAnchor(32,6)
YDist(32,35)
YShift(35,1)
YAnchor(37,10)
YShift(37,0)
YLink(37,38,66)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 392, char 0xffff */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 11, 1
MIRP[m&gt;RBl], 26, 69
MIAP[R], 32, 6
MDRP[m&gt;RBl], 35
SHP[2], 1
MIAP[R], 37, 10
SHP[1], 0
MIRP[m&gt;RBl], 38, 66
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="393">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 231, 0, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="394">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 237, 0, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="395">
      <instructions>
        <talk>/* VTTTalk glyph 395, char 0xffff */
/* GUI generated Fri Jan 10 15:53:11 2020 */

/* Y direction */
YAnchor(0,11)
YLink(0,26,69)
YAnchor(8,7)
YLink(8,35,69)
YAnchor(48)
YInterpolate(8,43,48)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 395, char 0xffff */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 0, 11
MIRP[m&gt;RBl], 26, 69
MIAP[R], 8, 7
MIRP[m&gt;RBl], 35, 69
MDAP[R], 48
SRP2[], 8
IP[], 43
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="396">
      <instructions>
        <talk>/* VTTTalk glyph 396, char 0xffff */
/* GUI generated Mon Jan 13 10:03:27 2020 */

/* Y direction */
YAnchor(0,15)
YAnchor(8,0)
YAnchor(15,11)
YLink(15,16,69)
YAnchor(30,7)
YLink(30,23,69)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 396, char 0xffff */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 0, 15
MIAP[R], 8, 0
MIAP[R], 15, 11
MIRP[m&gt;RBl], 16, 69
MIAP[R], 30, 7
MIRP[m&gt;RBl], 23, 69
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="397">
      <instructions>
        <talk>/* VTTTalk glyph 397, char 0xffff */
/* GUI generated Sun Jan 12 19:42:09 2020 */

/* Y direction */
YAnchor(16,6)
YLink(16,15,66)
YShift(16,42)
YLink(42,52,69)
YAnchor(61,10)
YLink(61,62,66)
YInterpolate(61,0,70,16)
YLink(0,27,69)
YShift(70,74)
YLink(70,71,66)
YShift(71,75)
YShift(61,34)
YLink(34,45,69)

/* X direction */
XAnchor(75)
XDist(75,76)
XInterpolate(76,72,75)

Smooth()

</talk>
        <assembly>/* TT glyph 397, char 0xffff */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 16, 6
MIRP[m&gt;RBl], 15, 66
SHP[1], 42
SRP0[], 42
MIRP[m&gt;RBl], 52, 69
MIAP[R], 61, 10
MIRP[m&gt;RBl], 62, 66
SRP2[], 16
IP[], 0
IP[], 70
SRP0[], 0
MIRP[m&gt;RBl], 27, 69
SRP1[], 70
SHP[1], 74
SRP0[], 70
MIRP[m&gt;RBl], 71, 66
SHP[2], 75
SRP1[], 61
SHP[1], 34
SRP0[], 34
MIRP[m&gt;RBl], 45, 69
SVTCA[X]
MDAP[R], 75
MDRP[m&gt;RBl], 76
IP[], 72
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="398">
      <instructions>
        <talk>/* VTTTalk glyph 398, char 0xffff */
/* GUI generated Sun Jan 12 19:44:14 2020 */

/* Y direction */
YAnchor(43,10)
YShift(43,38)
YLink(43,42,66)
YAnchor(51,6)
YShift(51,4)
YShift(51,7)
YShift(51,47)
YInterpolate(43,25,51)
YLink(25,18,69)
YLink(51,50,66)
YShift(50,48)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 398, char 0xffff */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 43, 10
SHP[1], 38
MIRP[m&gt;RBl], 42, 66
MIAP[R], 51, 6
SHP[1], 4
SHP[1], 7
SHP[1], 47
SRP2[], 43
IP[], 25
SRP0[], 25
MIRP[m&gt;RBl], 18, 69
SRP0[], 51
MIRP[m&gt;RBl], 50, 66
SHP[2], 48
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="399">
      <instructions>
        <talk>/* VTTTalk glyph 399, char 0xffff */
/* GUI generated Mon Jan 13 10:04:56 2020 */

/* Y direction */
YAnchor(0,11)
YDist(0,37)
YShift(0,46)
YDist(46,82)
YAnchor(71,7)
YLink(71,57,69)
YInterpolate(0,21,6,71)
YLink(21,14,69)
YShift(6,30)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 399, char 0xffff */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 0, 11
MDRP[m&gt;RBl], 37
SHP[1], 46
SRP0[], 46
MDRP[m&gt;RBl], 82
MIAP[R], 71, 7
MIRP[m&gt;RBl], 57, 69
SRP2[], 0
IP[], 21
IP[], 6
SRP0[], 21
MIRP[m&gt;RBl], 14, 69
SRP1[], 6
SHP[1], 30
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="400">
      <instructions>
        <talk>/* VTTTalk glyph 400, char 0xffff */
/* GUI generated Mon Jan 13 10:04:44 2020 */

/* Y direction */
YAnchor(0,11)
YDist(0,37)
YShift(0,44)
YDist(44,90)
YAnchor(68,7)
YShift(68,75)
YInterpolate(0,21,6,7,68)
YLink(21,14,69)
YShift(6,30)
YShift(7,29)
YShift(7,78)
YLink(68,54,69)
YShift(54,82)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 400, char 0xffff */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 0, 11
MDRP[m&gt;RBl], 37
SHP[1], 44
SRP0[], 44
MDRP[m&gt;RBl], 90
MIAP[R], 68, 7
SHP[1], 75
SRP2[], 0
SLOOP[], 3
IP[], 21, 6, 7
SRP0[], 21
MIRP[m&gt;RBl], 14, 69
SRP1[], 6
SHP[1], 30
SRP1[], 7
SHP[1], 29
SHP[1], 78
SRP0[], 68
MIRP[m&gt;RBl], 54, 69
SHP[2], 82
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="401">
      <instructions>
        <talk>/* VTTTalk glyph 402, char 0xffff */
/* GUI generated Fri Jan 10 15:59:47 2020 */

/* Y direction */
YAnchor(0,11)
YDist(0,32)
YShift(0,40)
YDist(40,87)
YAnchor(8,7)
YLink(8,24,66)
YInterpolate(24,65,8)
YAnchor(71)
YDist(71,58)
YAnchor(76,6)
YDist(76,79)
YShift(79,48)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 401, char 0xffff */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 0, 11
MDRP[m&gt;RBl], 32
SHP[1], 40
SRP0[], 40
MDRP[m&gt;RBl], 87
MIAP[R], 8, 7
MIRP[m&lt;RGr], 24, 66
IP[], 65
MDAP[R], 71
MDRP[m&gt;RBl], 58
MIAP[R], 76, 6
MDRP[m&gt;RBl], 79
SHP[2], 48
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="402">
      <instructions>
        <talk>/* VTTTalk glyph 402, char 0xffff */
/* GUI generated Sun Jan 12 19:59:43 2020 */

/* Y direction */
YAnchor(0,11)
YDist(0,24)
YAnchor(8,7)
YLink(8,16,69)
YInterpolate(0,31,41,42,8)
YLink(31,49,69)
YShift(41,40)
YShift(42,12)
YShift(42,39)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 402, char 0xffff */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 0, 11
MDRP[m&gt;RBl], 24
MIAP[R], 8, 7
MIRP[m&gt;RBl], 16, 69
SRP2[], 0
SLOOP[], 3
IP[], 31, 41, 42
SRP0[], 31
MIRP[m&gt;RBl], 49, 69
SRP1[], 41
SHP[1], 40
SRP1[], 42
SHP[1], 12
SHP[1], 39
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="403">
      <instructions>
        <talk>/* VTTTalk glyph 403, char 0xffff */
/* GUI generated Mon Jan 13 10:05:12 2020 */

/* Y direction */
YAnchor(0,11)
YDist(0,37)
YAnchor(12,7)
YLink(12,22,69)
YInterpolate(0,43,30,12)
YLink(43,61,69)
YLink(30,29,66)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 403, char 0xffff */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 0, 11
MDRP[m&gt;RBl], 37
MIAP[R], 12, 7
MIRP[m&gt;RBl], 22, 69
SRP2[], 0
IP[], 43
IP[], 30
SRP0[], 43
MIRP[m&gt;RBl], 61, 69
SRP0[], 30
MIRP[m&gt;RBl], 29, 66
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="404">
      <instructions>
        <talk>/* VTTTalk glyph 404, char 0xffff */
/* GUI generated Mon Jan 13 10:05:24 2020 */

/* Y direction */
YAnchor(0,11)
YDist(0,7)
YAnchor(54,7)
YLink(54,15,69)
YInterpolate(0,50,54)
YDelta(50,-1@10..24)
YLink(50,18,66)
YShift(50,37)
YLink(37,30,69)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 404, char 0xffff */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 0, 11
MDRP[m&gt;RBl], 7
MIAP[R], 54, 7
MIRP[m&gt;RBl], 15, 69
SRP2[], 0
IP[], 50
CALL[], 50, -64, 10, 24, 72
SRP0[], 50
MIRP[m&gt;RBl], 18, 66
SHP[1], 37
SRP0[], 37
MIRP[m&gt;RBl], 30, 69
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="405">
      <instructions>
        <talk>/* VTTTalk glyph 405, char 0xffff */
/* GUI generated Sat Jan 11 15:38:21 2020 */

/* Y direction */
YAnchor(0,10)
YLink(0,1,66)
YShift(0,38)
YAnchor(5,15)
YDist(5,11)
YDist(5,16)
YAnchor(48,1)
YDist(48,64)
YAnchor(69,6)
YShift(69,23)
YShift(23,26)
YDist(69,72)
YShift(72,22)
YShift(72,39)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 405, char 0xffff */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 0, 10
MIRP[m&gt;RBl], 1, 66
SHP[1], 38
MIAP[R], 5, 15
MDRP[m&gt;RBl], 11
MDRP[m&gt;RBl], 16
MIAP[R], 48, 1
MDRP[m&gt;RBl], 64
MIAP[R], 69, 6
SHP[1], 23
SRP1[], 23
SHP[1], 26
MDRP[m&gt;RBl], 72
SHP[2], 22
SHP[2], 39
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="406">
      <instructions>
        <talk>/* VTTTalk glyph 407, char 0xffff */
/* GUI generated Fri Jan 10 16:06:21 2020 */

/* Y direction */
YAnchor(21,1)
YDist(21,36)
YAnchor(42,6)
YDist(42,8)
YShift(8,11)
YAnchor(46,7)
YLink(46,67,69)
YDist(46,75)
YShift(75,87)
YDist(75,81)
YShift(81,93)
YAnchor(54,10)
YShift(54,10)
YShift(54,0)
YLink(0,59,69)

/* X direction */

Smooth()</talk>
        <assembly>/* TT glyph 406, char 0xffff */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 21, 1
MDRP[m&gt;RBl], 36
MIAP[R], 42, 6
MDRP[m&gt;RBl], 8
SHP[2], 11
MIAP[R], 46, 7
MIRP[m&gt;RBl], 67, 69
MDRP[M&lt;RWh], 75
SHP[2], 87
MDRP[m&gt;RBl], 81
SHP[2], 93
MIAP[R], 54, 10
SHP[1], 10
SHP[1], 0
SRP0[], 0
MIRP[m&gt;RBl], 59, 69
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="407">
      <instructions>
        <talk>/* VTTTalk glyph 407, char 0xffff */
/* GUI generated Sat Jan 11 15:38:16 2020 */

/* Y direction */
YAnchor(10,7)
YDist(10,30)
YAnchor(18,11)
YLink(18,23,69)
YAnchor(36,14)
YShift(36,0)
YLink(36,37,66)
YAnchor(51,1)
YShift(51,2)
YDist(51,59)
YAnchor(67,6)
YDist(67,66)
YShift(66,43)
YAnchor(70,10)
YShift(70,41)
YLink(70,71,66)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 407, char 0xffff */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 10, 7
MDRP[m&gt;RBl], 30
MIAP[R], 18, 11
MIRP[m&gt;RBl], 23, 69
MIAP[R], 36, 14
SHP[1], 0
MIRP[m&gt;RBl], 37, 66
MIAP[R], 51, 1
SHP[1], 2
MDRP[m&gt;RBl], 59
MIAP[R], 67, 6
MDRP[m&gt;RBl], 66
SHP[2], 43
MIAP[R], 70, 10
SHP[1], 41
MIRP[m&gt;RBl], 71, 66
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="408">
      <instructions>
        <talk>/* VTTTalk glyph 408, char 0xffff */
/* GUI generated Sat Jan 11 15:38:11 2020 */

/* Y direction */
YAnchor(24,11)
YDist(24,38)
YShift(24,47)
YAnchor(69,10)
YLink(69,70,81)
YShift(69,74)
YAnchor(84,1)
YDist(84,100)
YAnchor(105,6)
YShift(105,30)
YDist(105,0)
YShift(0,12)
YDist(0,6)
YShift(6,18)
YShift(105,51)
YLink(51,50,66)
YDist(105,108)
YShift(108,29)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 408, char 0xffff */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 24, 11
MDRP[m&gt;RBl], 38
SHP[1], 47
MIAP[R], 69, 10
MIRP[m&gt;RBl], 70, 81
SHP[1], 74
MIAP[R], 84, 1
MDRP[m&gt;RBl], 100
MIAP[R], 105, 6
SHP[1], 30
MDRP[M&lt;RWh], 0
SHP[2], 12
MDRP[m&gt;RBl], 6
SHP[2], 18
SRP1[], 105
SHP[1], 51
SRP0[], 51
MIRP[m&gt;RBl], 50, 66
SRP0[], 105
MDRP[m&gt;RBl], 108
SHP[2], 29
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="409">
      <instructions>
        <talk>/* VTTTalk glyph 409, char 0xffff */
/* GUI generated Sun Jan 12 20:20:33 2020 */

/* Y direction */
YAnchor(32,10)
YLink(32,33,66)
YShift(33,47)
YAnchor(40,7)
YInterpolate(40,13,32)
YLink(13,12,66)
YShift(12,0)
YLink(0,25,66)
YNoRound(49)
YDist(40,49)
YDist(49,55)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 409, char 0xffff */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 32, 10
MIRP[m&gt;RBl], 33, 66
SHP[2], 47
MIAP[R], 40, 7
SRP2[], 32
IP[], 13
SRP0[], 13
MIRP[m&gt;RBl], 12, 66
SHP[2], 0
SRP0[], 0
MIRP[m&gt;RBl], 25, 66
SRP0[], 40
MDRP[M&lt;rWh], 49
MDRP[m&gt;RBl], 55
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="410">
      <instructions>
        <talk>/* VTTTalk glyph 410, char 0xffff */
/* GUI generated Sun Jan 12 20:24:58 2020 */

/* Y direction */
YAnchor(0)
YLink(0,16,69)
YAnchor(8,7)
YLink(8,24,69)
YInterpolate(0,32,44,8)
YLink(32,57,69)
YLink(44,45,66)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 410, char 0xffff */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MDAP[R], 0
MIRP[m&gt;RBl], 16, 69
MIAP[R], 8, 7
MIRP[m&gt;RBl], 24, 69
SRP2[], 0
IP[], 32
IP[], 44
SRP0[], 32
MIRP[m&gt;RBl], 57, 69
SRP0[], 44
MIRP[m&gt;RBl], 45, 66
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="411">
      <instructions>
        <talk>/* VTTTalk glyph 411, char 0xffff */
/* GUI generated Mon Jan 13 10:05:48 2020 */

/* Y direction */
YAnchor(15,7)
YShift(15,8)
YLink(15,24,69)
YShift(24,54)
YAnchor(39,11)
YDist(39,32)
YShift(39,0)
YLink(0,46,69)
YInterpolate(39,62,66,73,15)
YLink(62,80,69)
YShift(73,19)
YShift(73,70)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 411, char 0xffff */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 15, 7
SHP[1], 8
MIRP[m&gt;RBl], 24, 69
SHP[2], 54
MIAP[R], 39, 11
MDRP[m&gt;RBl], 32
SHP[1], 0
SRP0[], 0
MIRP[m&gt;RBl], 46, 69
SRP1[], 39
SRP2[], 15
SLOOP[], 3
IP[], 62, 66, 73
SRP0[], 62
MIRP[m&gt;RBl], 80, 69
SRP1[], 73
SHP[1], 19
SHP[1], 70
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="412">
      <instructions>
        <talk>/* VTTTalk glyph 412, char 0xffff */
/* GUI generated Mon Jan 13 10:06:01 2020 */

/* Y direction */
YAnchor(0,11)
YLink(0,41,69)
YAnchor(60,7)
YLink(60,50,69)
YShift(60,9)
YShift(9,23)
YLink(23,16,69)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 412, char 0xffff */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 0, 11
MIRP[m&gt;RBl], 41, 69
MIAP[R], 60, 7
MIRP[m&gt;RBl], 50, 69
SHP[1], 9
SRP1[], 9
SHP[1], 23
SRP0[], 23
MIRP[m&gt;RBl], 16, 69
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="413">
      <instructions>
        <talk>/* VTTTalk glyph 413, char 0xffff */
/* GUI generated Mon Jan 13 10:06:37 2020 */

/* Y direction */
YAnchor(31,7)
YRound(31,23)
YLink(31,23)
YAnchor(39,11)
YShift(39,0)
YRound(39,15)
YLink(39,15)
YAnchor(58,1)
YShift(58,6)
YDist(58,66)
YAnchor(77,10)
YShift(77,72)
YLink(77,76,66)
YInterpolate(77,50,58)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 413, char 0xffff */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 31, 7
MDRP[m&gt;RBl], 23
MIAP[R], 39, 11
SHP[1], 0
MDRP[m&gt;RBl], 15
MIAP[R], 58, 1
SHP[1], 6
MDRP[m&gt;RBl], 66
MIAP[R], 77, 10
SHP[1], 72
MIRP[m&gt;RBl], 76, 66
SRP2[], 58
IP[], 50
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="414">
      <instructions>
        <talk>/* VTTTalk glyph 414, char 0xffff */
/* GUI generated Mon Jan 13 10:06:59 2020 */

/* Y direction */
YAnchor(23,7)
YDist(23,15)
YAnchor(31,10)
YShift(31,0)
YShift(31,8)
YShift(31,36)
YShift(31,41)
YShift(31,70)
YLink(31,32,66)
YShift(32,37)
YShift(32,69)
YAnchor(51,1)
YShift(51,2)
YRound(51,59)
YLink(51,59)
YInterpolate(31,43,51)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 414, char 0xffff */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 23, 7
MDRP[m&gt;RBl], 15
MIAP[R], 31, 10
SHP[1], 0
SHP[1], 8
SHP[1], 36
SHP[1], 41
SHP[1], 70
MIRP[m&gt;RBl], 32, 66
SHP[2], 37
SHP[2], 69
MIAP[R], 51, 1
SHP[1], 2
MDRP[m&gt;RBl], 59
SRP2[], 31
IP[], 43
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="415">
      <instructions>
        <talk>/* VTTTalk glyph 415, char 0xffff */
/* GUI generated Mon Jan 13 10:07:07 2020 */

/* Y direction */
YAnchor(10,1)
YRound(10,26)
YLink(10,26)
YAnchor(37,10)
YShift(37,32)
YShift(37,38)
YShift(37,41)
YShift(37,51)
YInterpolate(37,2,10)
YLink(37,36,66)
YShift(36,39)
YAnchor(46,7)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 415, char 0xffff */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 10, 1
MDRP[m&gt;RBl], 26
MIAP[R], 37, 10
SHP[1], 32
SHP[1], 38
SHP[1], 41
SHP[1], 51
SRP2[], 10
IP[], 2
MIRP[m&gt;RBl], 36, 66
SHP[2], 39
MIAP[R], 46, 7
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="416">
      <instructions>
        <talk>/* VTTTalk glyph 416, char 0xffff */
/* GUI generated Mon Jan 13 10:07:14 2020 */

/* Y direction */
YAnchor(25,6)
YShift(25,22)
YShift(25,29)
YLink(25,24,66)
YAnchor(36,10)
YShift(36,0)
YShift(36,8)
YShift(36,11)
YShift(36,65)
YShift(36,70)
YInterpolate(36,16,24)
YDist(16,17)
YLink(36,37,66)
YShift(37,9)
YShift(37,69)
YAnchor(51,1)
YShift(51,2)
YRound(51,59)
YLink(51,59)
YInterpolate(36,43,51)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 416, char 0xffff */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 25, 6
SHP[1], 22
SHP[1], 29
MIRP[m&gt;RBl], 24, 66
MIAP[R], 36, 10
SHP[1], 0
SHP[1], 8
SHP[1], 11
SHP[1], 65
SHP[1], 70
IP[], 16
SRP0[], 16
MDRP[m&gt;RBl], 17
SRP0[], 36
MIRP[m&gt;RBl], 37, 66
SHP[2], 9
SHP[2], 69
MIAP[R], 51, 1
SHP[1], 2
MDRP[m&gt;RBl], 59
SRP2[], 36
IP[], 43
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="417">
      <instructions>
        <talk>/* VTTTalk glyph 417, char 0xffff */
/* GUI generated Mon Jan 13 10:07:33 2020 */

/* Y direction */
YAnchor(23,1)
YShift(23,2)
YLink(23,31,69)
YAnchor(42,10)
YShift(42,0)
YShift(42,8)
YShift(42,37)
YInterpolate(42,15,23)
YLink(42,41,66)
YShift(41,9)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 417, char 0xffff */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 23, 1
SHP[1], 2
MIRP[m&gt;RBl], 31, 69
MIAP[R], 42, 10
SHP[1], 0
SHP[1], 8
SHP[1], 37
SRP2[], 23
IP[], 15
MIRP[m&gt;RBl], 41, 66
SHP[2], 9
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="418">
      <instructions>
        <talk>/* VTTTalk glyph 418, char 0xffff */
/* GUI generated Mon Jan 13 10:07:48 2020 */

/* Y direction */
YAnchor(34,1)
YLink(34,50,69)
YShift(34,10)
YLink(10,17,69)
YAnchor(61,10)
YShift(61,23)
YShift(61,24)
YShift(61,60)
YInterpolate(61,26,34)
YShift(26,2)
YLink(61,62,66)
YShift(62,59)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 418, char 0xffff */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 34, 1
MIRP[m&gt;RBl], 50, 69
SHP[1], 10
SRP0[], 10
MIRP[m&gt;RBl], 17, 69
MIAP[R], 61, 10
SHP[1], 23
SHP[1], 24
SHP[1], 60
SRP2[], 34
IP[], 26
SRP1[], 26
SHP[1], 2
MIRP[m&gt;RBl], 62, 66
SHP[2], 59
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="419">
      <instructions>
        <talk>/* VTTTalk glyph 419, char 0xffff */
/* GUI generated Mon Jan 13 10:07:58 2020 */

/* Y direction */
YAnchor(34,1)
YLink(34,50,69)
YShift(34,10)
YLink(10,17,69)
YAnchor(61,10)
YShift(61,23)
YShift(61,24)
YShift(61,60)
YShift(61,66)
YShift(61,69)
YShift(61,79)
YInterpolate(61,26,34)
YShift(26,3)
YLink(61,62,66)
YShift(62,59)
YShift(62,67)
YAnchor(74,7)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 419, char 0xffff */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 34, 1
MIRP[m&gt;RBl], 50, 69
SHP[1], 10
SRP0[], 10
MIRP[m&gt;RBl], 17, 69
MIAP[R], 61, 10
SHP[1], 23
SHP[1], 24
SHP[1], 60
SHP[1], 66
SHP[1], 69
SHP[1], 79
SRP2[], 34
IP[], 26
SRP1[], 26
SHP[1], 3
MIRP[m&gt;RBl], 62, 66
SHP[2], 59
SHP[2], 67
MIAP[R], 74, 7
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="420">
      <instructions>
        <talk>/* VTTTalk glyph 420, char 0xffff */
/* GUI generated Mon Jan 13 10:08:10 2020 */

/* Y direction */
YAnchor(29,10)
YShift(29,23)
YShift(29,28)
YShift(29,34)
YShift(29,42)
YShift(29,47)
YLink(29,30,66)
YShift(30,27)
YShift(30,43)
YAnchor(57,1)
YShift(57,36)
YLink(57,65,69)
YShift(57,10)
YLink(10,17,69)
YInterpolate(29,49,57)
YShift(49,2)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 420, char 0xffff */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 29, 10
SHP[1], 23
SHP[1], 28
SHP[1], 34
SHP[1], 42
SHP[1], 47
MIRP[m&gt;RBl], 30, 66
SHP[2], 27
SHP[2], 43
MIAP[R], 57, 1
SHP[1], 36
MIRP[m&gt;RBl], 65, 69
SHP[1], 10
SRP0[], 10
MIRP[m&gt;RBl], 17, 69
SRP1[], 29
SRP2[], 57
IP[], 49
SRP1[], 49
SHP[1], 2
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="421">
      <instructions>
        <talk>/* VTTTalk glyph 421, char 0xffff */
/* GUI generated Mon Jan 13 10:08:24 2020 */

/* Y direction */
YAnchor(0,11)
YDist(0,15)
YShift(0,22)
YAnchor(27,6)
YShift(27,7)
YLink(27,26,66)
YShift(26,6)
YInterpolate(0,44,55,27)
YLink(44,69,69)
YStem(55,58)
YLink(55,58)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 421, char 0xffff */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 0, 11
MDRP[m&gt;RBl], 15
SHP[1], 22
MIAP[R], 27, 6
SHP[1], 7
MIRP[m&gt;RBl], 26, 66
SHP[2], 6
SRP2[], 0
IP[], 44
IP[], 55
SRP0[], 44
MIRP[m&gt;RBl], 69, 69
SRP0[], 55
MDRP[m&lt;RWh], 58
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="422">
      <instructions>
        <talk>/* VTTTalk glyph 422, char 0xfb00 */
/* GUI generated Mon Jan 13 10:08:55 2020 */

/* Y direction */
YAnchor(29,1)
YNoRound(45)
YLink(29,45,69)
YShift(29,10)
YLink(10,17,69)
YAnchor(59,10)
YShift(59,23)
YShift(59,24)
YShift(59,60)
YInterpolate(59,51,29)
YShift(51,1)
YLink(59,58,66)
YShift(58,61)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 422, char 0xfb00 */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 29, 1
MIRP[m&lt;rBl], 45, 69
SHP[1], 10
SRP0[], 10
MIRP[m&gt;RBl], 17, 69
MIAP[R], 59, 10
SHP[1], 23
SHP[1], 24
SHP[1], 60
SRP2[], 29
IP[], 51
SRP1[], 51
SHP[1], 1
MIRP[m&gt;RBl], 58, 66
SHP[2], 61
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="423">
      <instructions>
        <talk>/* VTTTalk glyph 423, char 0xfb01 */
/* GUI generated Mon Jan 13 10:09:09 2020 */

/* Y direction */
YAnchor(22,10)
YShift(22,0)
YShift(22,5)
YShift(22,58)
YLink(22,21,66)
YShift(21,1)
YAnchor(33,1)
YLink(33,49,69)
YAnchor(54,6)
YShift(54,9)
YShift(54,12)
YDist(54,57)
YShift(57,8)
YShift(57,24)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 423, char 0xfb01 */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 22, 10
SHP[1], 0
SHP[1], 5
SHP[1], 58
MIRP[m&gt;RBl], 21, 66
SHP[2], 1
MIAP[R], 33, 1
MIRP[m&gt;RBl], 49, 69
MIAP[R], 54, 6
SHP[1], 9
SHP[1], 12
MDRP[m&gt;RBl], 57
SHP[2], 8
SHP[2], 24
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="424">
      <instructions>
        <talk>/* VTTTalk glyph 424, char 0xfb02 */
/* GUI generated Mon Jan 13 10:09:17 2020 */

/* Y direction */
YAnchor(23,0)
YShift(23,7)
YLink(23,31,69)
YAnchor(39,6)
YDist(39,38)
YShift(38,15)
YAnchor(42,10)
YShift(42,0)
YShift(42,5)
YShift(42,37)
YLink(42,43,66)
YShift(43,1)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 424, char 0xfb02 */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 23, 0
SHP[1], 7
MIRP[m&gt;RBl], 31, 69
MIAP[R], 39, 6
MDRP[m&gt;RBl], 38
SHP[2], 15
MIAP[R], 42, 10
SHP[1], 0
SHP[1], 5
SHP[1], 37
MIRP[m&gt;RBl], 43, 66
SHP[2], 1
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="425">
      <instructions>
        <talk>/* VTTTalk glyph 425, char 0xfb03 */
/* GUI generated Mon Jan 13 10:09:27 2020 */

/* Y direction */
YAnchor(49,1)
YLink(49,65,69)
YShift//(49,30)
YLink(30,37,69)
YAnchor(72,6)
YShift(72,4)
YShift(4,9)
YDist(4,3)
YShift(3,22)
YShift(3,74)
YAnchor(80,10)
YShift(80,0)
YShift(80,15)
YShift(80,43)
YShift(80,44)
YShift(80,79)
YLink(80,81,66)
YShift(81,16)
YShift(81,78)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 425, char 0xfb03 */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 49, 1
MIRP[m&gt;RBl], 65, 69
CALL[], 40
SHP[1], 30
SVTCA[Y]
SRP0[], 30
MIRP[m&gt;RBl], 37, 69
MIAP[R], 72, 6
SHP[1], 4
SRP1[], 4
SHP[1], 9
SRP0[], 4
MDRP[m&gt;RBl], 3
SHP[2], 22
SHP[2], 74
MIAP[R], 80, 10
SHP[1], 0
SHP[1], 15
SHP[1], 43
SHP[1], 44
SHP[1], 79
MIRP[m&gt;RBl], 81, 66
SHP[2], 16
SHP[2], 78
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="426">
      <instructions>
        <talk>/* VTTTalk glyph 426, char 0xfb04 */
/* GUI generated Mon Jan 13 10:09:42 2020 */

/* Y direction */
YAnchor(25,6)
YDist(25,24)
YShift(24,1)
YAnchor(33,10)
YShift(33,23)
YShift(33,32)
YShift(33,38)
YShift(33,46)
YShift(33,51)
YLink(33,34,66)
YShift(34,31)
YShift(34,47)
YAnchor(56,1)
YShift(56,40)
YLink(56,64,69)
YShift(56,10)
YLink(10,17,69)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 426, char 0xfb04 */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 25, 6
MDRP[m&gt;RBl], 24
SHP[2], 1
MIAP[R], 33, 10
SHP[1], 23
SHP[1], 32
SHP[1], 38
SHP[1], 46
SHP[1], 51
MIRP[m&gt;RBl], 34, 66
SHP[2], 31
SHP[2], 47
MIAP[R], 56, 1
SHP[1], 40
MIRP[m&gt;RBl], 64, 69
SHP[1], 10
SRP0[], 10
MIRP[m&gt;RBl], 17, 69
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="427">
      <instructions>
        <talk>/* VTTTalk glyph 427, char 0xfb05 */
/* GUI generated Mon Jan 13 10:10:01 2020 */

/* Y direction */
YAnchor(32,1)
YLink(32,17,69)
YAnchor(36,6)
YDist(36,39)
YShift(39,8)
YShift(39,23)
YAnchor(59,10)
YShift(59,21)
YLink(59,58,66)
YShift(59,0)
YDist(0,47)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 427, char 0xfb05 */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 32, 1
MIRP[m&gt;RBl], 17, 69
MIAP[R], 36, 6
MDRP[m&gt;RBl], 39
SHP[2], 8
SHP[2], 23
MIAP[R], 59, 10
SHP[1], 21
MIRP[m&gt;RBl], 58, 66
SHP[1], 0
SRP0[], 0
MDRP[m&gt;RBl], 47
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="428">
      <instructions>
        <talk>/* VTTTalk Unicode 0xfb06 */
/* ACT generated Sat Jan 11 14:59:14 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 0 19  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(57)	/* min */
YAnchor(34)	/* max */

/* YDir: Stroke #0 */
YDist(34,73) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YInterpolate(34,24,57)
YAnchor(24)
YDist(24,91) /*perpendicular to the stroke*/

/* YDir: Stroke #2 */
YInterpolate(34,38,57)
YAnchor(38)
YDist(38,41) /*perpendicular to the stroke*/
YShift(41,66) /*along bottom edge*/

/* YDir: Stroke #3 */
YInterpolate(34,0,57)
YAnchor(0)
YDist(0,10) /*perpendicular to the stroke*/

/* YDir: Stroke #4 */
YDist(57,49) /*perpendicular to the stroke*/

Smooth()


</talk>
        <assembly>/* TT glyph 428, char 0xfb06 */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MDAP[R], 57
MDAP[R], 34
MDRP[m&gt;RBl], 73
SRP2[], 57
IP[], 24
MDAP[R], 24
MDRP[m&gt;RBl], 91
SRP1[], 34
SRP2[], 57
IP[], 38
MDAP[R], 38
MDRP[m&gt;RBl], 41
SHP[2], 66
SRP1[], 34
SRP2[], 57
IP[], 0
MDAP[R], 0
MDRP[m&gt;RBl], 10
SRP0[], 57
MDRP[m&gt;RBl], 49
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="429">
      <instructions>
        <talk>/* VTTTalk glyph 429, char 0xffff */
/* GUI generated Sun Jan 12 20:49:50 2020 */

/* Y direction */
YAnchor(0,14)
YDist(0,6)
YAnchor(26,6)
YShift(26,10)
YShift(26,17)
YShift(26,22)
YInterpolate(0,15,29,26)
YLink(29,47,69)
YLink(26,25,66)
YShift(25,23)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 429, char 0xffff */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 0, 14
MDRP[m&gt;RBl], 6
MIAP[R], 26, 6
SHP[1], 10
SHP[1], 17
SHP[1], 22
SRP2[], 0
IP[], 15
IP[], 29
SRP0[], 29
MIRP[m&gt;RBl], 47, 69
SRP0[], 26
MIRP[m&gt;RBl], 25, 66
SHP[2], 23
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="430">
      <instructions>
        <talk>/* VTTTalk glyph 430, char 0xffff */
/* GUI generated Mon Jan 13 10:10:36 2020 */

/* Y direction */
YAnchor(0,15)
YShift(0,1)
YAnchor(22,1)
YShift(22,5)
YLink(22,30,69)
YAnchor(38,6)
YDist(38,37)
YShift(37,13)
YAnchor(41,10)
YShift(41,12)
YLink(41,44,81)
YAnchor(46,11)
YDist(46,47)
YAnchor(61,7)
YLink(61,54,69)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 430, char 0xffff */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 0, 15
SHP[2], 1
MIAP[R], 22, 1
SHP[1], 5
MIRP[m&gt;RBl], 30, 69
MIAP[R], 38, 6
MDRP[m&gt;RBl], 37
SHP[2], 13
MIAP[R], 41, 10
SHP[1], 12
MIRP[m&lt;RGr], 44, 81
MIAP[R], 46, 11
MDRP[m&gt;RBl], 47
MIAP[R], 61, 7
MIRP[m&gt;RBl], 54, 69
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="431">
      <instructions>
        <talk>/* VTTTalk glyph 431, char 0xffff */
/* GUI generated Mon Jan 13 10:11:12 2020 */

/* Y direction */
YAnchor(0,78)
YLink(0,10,80)
YAnchor(36,76)
YLink(36,23,80)
YInterpolate(0,17,36)
YDist(17,42)
YAnchor(49,77)
YShift(49,30)
YLink(49,50,81)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 431, char 0xffff */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 0, 78
MIRP[m&gt;RBl], 10, 80
MIAP[R], 36, 76
MIRP[m&gt;RBl], 23, 80
SRP2[], 0
IP[], 17
SRP0[], 17
MDRP[m&gt;RBl], 42
MIAP[R], 49, 77
SHP[1], 30
MIRP[m&gt;RBl], 50, 81
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="432">
      <instructions>
        <talk>/* VTTTalk glyph 432, char 0xffff */
/* GUI generated Thu Jan  9 22:52:47 2020 */

/* Y direction */
YAnchor(10,75)
YShift(10,17)
YAnchor(24,77)
YShift(24,15)
YShift(24,16)
YShift(24,29)
YIPAnchor(10,20,24)
YLink(20,21,79)
YLink(24,25,81)
YShift(25,32)

/* X direction */

Smooth()


</talk>
        <assembly>/* TT glyph 432, char 0xffff */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 10, 75
SHP[1], 17
MIAP[R], 24, 77
SHP[1], 15
SHP[1], 16
SHP[1], 29
SRP2[], 10
IP[], 20
MDAP[R], 20
MIRP[m&gt;RBl], 21, 79
SRP0[], 24
MIRP[m&gt;RBl], 25, 81
SHP[2], 32
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="433">
      <instructions>
        <talk>/* VTTTalk glyph 433, char 0xffff */
/* GUI generated Mon Jan 13 16:42:38 2020 */

/* Y direction */
YAnchor(14,76)
YShift(14,1)
YShift(14,34)
YShift(34,22)
YAnchor(53,77)
YShift(53,3)
YShift(53,4)
YShift(53,24)
YShift(53,52)
YShift(53,58)
YInterpolate(53,43,14)
YShift(43,44)
YLink(43,42,79)
YShift(42,45)
YLink(53,54,81)
YShift(54,51)
YShift(54,59)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 433, char 0xffff */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 14, 76
SHP[1], 1
SHP[1], 34
SRP1[], 34
SHP[1], 22
MIAP[R], 53, 77
SHP[1], 3
SHP[1], 4
SHP[1], 24
SHP[1], 52
SHP[1], 58
SRP2[], 14
IP[], 43
SRP1[], 43
SHP[1], 44
SRP0[], 43
MIRP[m&gt;RBl], 42, 79
SHP[2], 45
SRP0[], 53
MIRP[m&gt;RBl], 54, 81
SHP[2], 51
SHP[2], 59
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="434">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 432, 0, 0
OFFSET[R], 860, 907, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="435">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 432, 0, 0
OFFSET[R], 779, 945, 125
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="436">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 432, 0, 0
OFFSET[R], 777, 944, 125
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="437">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 432, 0, 0
OFFSET[R], 771, 945, 125
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="438">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 432, 0, 0
OFFSET[R], 859, 925, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="439">
      <instructions>
        <talk>/* VTTTalk glyph 439, char 0xffff */
/* GUI generated Sun Jan 12 12:27:57 2020 */

/* Y direction */
YAnchor(13,76)
YLink(13,37,80)
YAnchor(22,78)
YLink(22,29,80)
YDelta(29,1@10..17)
YShift(22,51)
YDist(51,0)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 439, char 0xffff */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 13, 76
MIRP[m&gt;RBl], 37, 80
MIAP[R], 22, 78
MIRP[m&lt;RGr], 29, 80
CALL[], 29, 64, 10, 17, 72
SHP[1], 51
SRP0[], 51
MDRP[m&gt;RBl], 0
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="440">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 432, 0, 0
OFFSET[R], 782, 944, 125
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="441">
      <instructions>
        <talk>/* VTTTalk glyph 441, char 0xffff */
/* GUI generated Thu Jan  9 23:06:33 2020 */

/* Y direction */
YAnchor(24,77)
YShift(24,23)
YShift(24,33)
YShift(24,72)
YShift(24,0)
YLink(0,53,80)
YLink(24,25,81)
YShift(25,22)
YAnchor(47,76)
YShift(47,70)
YShift(47,9)
YLink(9,61,80)
YInterpolate(24,29,47)
YLink(29,30,79)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 441, char 0xffff */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 24, 77
SHP[1], 23
SHP[1], 33
SHP[1], 72
SHP[1], 0
SRP0[], 0
MIRP[m&gt;RBl], 53, 80
SRP0[], 24
MIRP[m&gt;RBl], 25, 81
SHP[2], 22
MIAP[R], 47, 76
SHP[1], 70
SHP[1], 9
SRP0[], 9
MIRP[m&gt;RBl], 61, 80
SRP1[], 24
SRP2[], 47
IP[], 29
SRP0[], 29
MIRP[m&gt;RBl], 30, 79
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="442">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 432, 0, 0
OFFSET[R], 799, 1266, -33

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="443">
      <instructions>
        <talk>/* VTTTalk glyph 443, char 0xffff */
/* GUI generated Mon Jan 13 16:45:07 2020 */

/* Y direction */
YAnchor(7)
YAnchor(34,77)
YShift(34,15)
YShift(34,17)
YShift(34,39)
YIPAnchor(7,30,34)
YInterpolate(7,24,18,30)
YLink(30,31,79)
YLink(34,35,81)
YShift(35,40)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 443, char 0xffff */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MDAP[R], 7
MIAP[R], 34, 77
SHP[1], 15
SHP[1], 17
SHP[1], 39
SRP2[], 7
IP[], 30
MDAP[R], 30
IP[], 24
IP[], 18
MIRP[m&gt;RBl], 31, 79
SRP0[], 34
MIRP[m&gt;RBl], 35, 81
SHP[2], 40
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="444">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 443, 0, 0
OFFSET[R], 774, 1335, -35

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="445">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 432, 0, 0
OFFSET[R], 781, 944, 125
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="446">
      <instructions>
        <talk>/* VTTTalk glyph 446, char 0xffff */
/* GUI generated Thu Jan  9 23:11:50 2020 */

/* Y direction */
YAnchor(39,77)
YShift(39,30)
YLink(39,38,81)
YShift(39,0)
YLink(0,14,80)
YAnchor(48,75)
YShift(48,8)
YShift(48,19)
YShift(48,28)
YShift(48,42)
YInterpolate(39,31,48)
YLink(31,32,79)
YLink(48,49,81)
YShift(49,41)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 446, char 0xffff */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 39, 77
SHP[1], 30
MIRP[m&gt;RBl], 38, 81
SHP[1], 0
SRP0[], 0
MIRP[m&gt;RBl], 14, 80
MIAP[R], 48, 75
SHP[1], 8
SHP[1], 19
SHP[1], 28
SHP[1], 42
SRP2[], 39
IP[], 31
SRP0[], 31
MIRP[m&gt;RBl], 32, 79
SRP0[], 48
MIRP[m&gt;RBl], 49, 81
SHP[2], 41
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="447">
      <instructions>
        <talk>/* VTTTalk glyph 447, char 0xffff */
/* GUI generated Thu Jan  9 23:15:47 2020 */

/* Y direction */
YAnchor(29,75)
YShift(29,16)
YLink(29,28,81)
YShift(29,11)
YShift(11,20)
YAnchor(36,77)
YShift(36,0)
YShift(36,22)
YLink(36,35,81)
YInterpolate(36,26,29)
YLink(26,25,79)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 447, char 0xffff */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 29, 75
SHP[1], 16
MIRP[m&gt;RBl], 28, 81
SHP[1], 11
SRP1[], 11
SHP[1], 20
MIAP[R], 36, 77
SHP[1], 0
SHP[1], 22
MIRP[m&gt;RBl], 35, 81
SRP2[], 29
IP[], 26
SRP0[], 26
MIRP[m&gt;RBl], 25, 79
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="448">
      <instructions>
        <talk>/* VTTTalk glyph 448, char 0xffff */
/* GUI generated Thu Jan  9 23:31:44 2020 */

/* Y direction */
YAnchor(29,75)
YShift(29,16)
YLink(29,28,81)
YShift(29,10)
YShift(10,24)
YAnchor(32,77)
YAnchor(36,77)
YShift(36,0)
YLink(36,35,81)
YInterpolate(36,19,29)
YLink(19,20,79)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 448, char 0xffff */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 29, 75
SHP[1], 16
MIRP[m&gt;RBl], 28, 81
SHP[1], 10
SRP1[], 10
SHP[1], 24
MIAP[R], 32, 77
MIAP[R], 36, 77
SHP[1], 0
MIRP[m&gt;RBl], 35, 81
SRP2[], 29
IP[], 19
SRP0[], 19
MIRP[m&gt;RBl], 20, 79
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="449">
      <instructions>
        <talk>/* VTTTalk glyph 449, char 0xffff */
/* GUI generated Thu Jan  9 23:34:59 2020 */

/* Y direction */
YAnchor(0)
YDist(0,6)
YShift(0,11)
YAnchor(26,77)
YLink(26,25,81)
YShift(26,30)
YShift(26,35)
YAnchor(53,75)
YShift(53,16)
YLink(53,52,81)
YIPAnchor(53,32,26)
YLink(32,31,79)
YShift(53,45)
YShift(45,28)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 449, char 0xffff */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MDAP[R], 0
MDRP[m&gt;RBl], 6
SHP[1], 11
MIAP[R], 26, 77
MIRP[m&gt;RBl], 25, 81
SHP[1], 30
SHP[1], 35
MIAP[R], 53, 75
SHP[1], 16
MIRP[m&gt;RBl], 52, 81
SRP2[], 26
IP[], 32
MDAP[R], 32
MIRP[m&gt;RBl], 31, 79
SRP1[], 53
SHP[1], 45
SRP1[], 45
SHP[1], 28
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="450">
      <instructions>
        <talk>/* VTTTalk glyph 450, char 0xffff */
/* GUI generated Mon Jan 13 16:47:18 2020 */

/* Y direction */
YAnchor(0,77)
YShift(0,3)
YShift(0,17)
YShift(0,26)
YShift(0,31)
YLink(0,1,81)
YShift(1,18)
YAnchor(8,75)
YShift(8,32)
YLink(8,7,81)
YShift(7,16)
YIPAnchor(8,35,0)
YShift(35,39)
YLink(35,36,79)
YShift(36,40)

/* X direction */
XAnchor(40)
XDist(40,41)
XInterpolate(41,37,40)

Smooth()
</talk>
        <assembly>/* TT glyph 450, char 0xffff */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 0, 77
SHP[2], 3
SHP[2], 17
SHP[2], 26
SHP[2], 31
MIRP[m&gt;RBl], 1, 81
SHP[2], 18
MIAP[R], 8, 75
SHP[1], 32
MIRP[m&gt;RBl], 7, 81
SHP[2], 16
SRP2[], 0
IP[], 35
MDAP[R], 35
SHP[1], 39
MIRP[m&gt;RBl], 36, 79
SHP[2], 40
SVTCA[X]
MDAP[R], 40
MDRP[m&gt;RBl], 41
IP[], 37
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="451">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 450, 0, 0
OFFSET[R], 860, 1435, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="452">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 450, 0, 0
OFFSET[R], 782, 1472, 125

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="453">
      <instructions>
        <talk>/* VTTTalk glyph 453, char 0xffff */
/* GUI generated Sat Jan 11 16:31:48 2020 */

/* Y direction */
YAnchor(16,77)
YShift(16,0)
YLink(16,17,81)
YShift(17,20)
YAnchor(33,75)
YShift(33,1)
YInterpolate(16,30,33)
YDist(30,35)
YLink(33,32,81)
YShift(32,41)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 453, char 0xffff */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 16, 77
SHP[1], 0
MIRP[m&gt;RBl], 17, 81
SHP[2], 20
MIAP[R], 33, 75
SHP[1], 1
SRP2[], 16
IP[], 30
SRP0[], 30
MDRP[m&gt;RBl], 35
SRP0[], 33
MIRP[m&gt;RBl], 32, 81
SHP[2], 41
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="454">
      <instructions>
        <talk>/* VTTTalk glyph 454, char 0xffff */
/* GUI generated Thu Jan  9 23:46:15 2020 */

/* Y direction */
YAnchor(0,78)
YLink(0,30,80)
YShift(0,36)
YAnchor(8,76)
YShift(8,14)
YLink(8,21,80)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 454, char 0xffff */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 0, 78
MIRP[m&gt;RBl], 30, 80
SHP[1], 36
MIAP[R], 8, 76
SHP[1], 14
MIRP[m&gt;RBl], 21, 80
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="455">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 454, 0, 0
OFFSET[R], 860, 1059, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="456">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 454, 0, 0
OFFSET[R], 778, 1096, 125

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="457">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 454, 0, 0
OFFSET[R], 798, 1005, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="458">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 454, 0, 0
OFFSET[R], 772, 1096, 125

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="459">
      <instructions>
        <talk>/* VTTTalk glyph 459, char 0xffff */
/* GUI generated Sat Jan 11 16:38:57 2020 */

/* Y direction */
YAnchor(11,77)
YShift(11,0)
YLink(11,12,81)
YShift(12,15)
YAnchor(27,75)
YShift(27,1)
YLink(27,26,81)
YShift(26,24)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 459, char 0xffff */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 11, 77
SHP[1], 0
MIRP[m&gt;RBl], 12, 81
SHP[2], 15
MIAP[R], 27, 75
SHP[1], 1
MIRP[m&gt;RBl], 26, 81
SHP[2], 24
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="460">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 459, 0, 0
OFFSET[R], 862, 276, 58

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="461">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 459, 0, 0
OFFSET[R], 778, 1010, 125

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="462">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 460, 0, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="463">
      <instructions>
        <talk>/* VTTTalk glyph 463, char 0xffff */
/* GUI generated Mon Jan 13 16:49:13 2020 */

/* Y direction */
YAnchor(4,77)
YShift(4,0)
YShift(4,34)
YLink(4,35,81)
YShift(35,5)
YAnchor(19,75)
YShift(19,1)
YShift(19,32)
YIPAnchor(19,22,4)
YShift(22,26)
YLink(22,23,79)
YShift(23,27)
YLink(19,31,81)
YShift(31,18)

/* X direction */
XAnchor(27)
XDist(27,28)
XInterpolate(28,24,27)

Smooth()
</talk>
        <assembly>/* TT glyph 463, char 0xffff */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 4, 77
SHP[1], 0
SHP[1], 34
MIRP[m&gt;RBl], 35, 81
SHP[2], 5
MIAP[R], 19, 75
SHP[1], 1
SHP[1], 32
SRP2[], 4
IP[], 22
MDAP[R], 22
SHP[1], 26
MIRP[m&gt;RBl], 23, 79
SHP[2], 27
SRP0[], 19
MIRP[m&gt;RBl], 31, 81
SHP[2], 18
SVTCA[X]
MDAP[R], 27
MDRP[m&gt;RBl], 28
IP[], 24
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="464">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 463, 0, 0
OFFSET[R], 860, 948, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="465">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 463, 0, 0
OFFSET[R], 779, 986, 125
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="466">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 463, 0, 0
OFFSET[R], 778, 985, 125
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="467">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 463, 0, 0
OFFSET[R], 777, 985, 125
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="468">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 463, 0, 0
OFFSET[R], 771, 986, 125
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="469">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 463, 0, 0
OFFSET[R], 772, 985, 125
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="470">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 463, 0, 0
OFFSET[R], 859, 966, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="471">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 463, 0, 0
OFFSET[R], 782, 985, 125
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="472">
      <instructions>
        <talk>/* VTTTalk glyph 472, char 0xffff */
/* GUI generated Fri Jan 10 07:15:10 2020 */

/* Y direction */
YAnchor(0,78)
YLink(0,1,80)
YAnchor(43,76)
YShift(43,24)
YDist(24,12)
YShift(43,42)
YLink(42,41,81)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 472, char 0xffff */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 0, 78
MIRP[m&gt;RBl], 1, 80
MIAP[R], 43, 76
SHP[1], 24
SRP0[], 24
MDRP[m&gt;RBl], 12
SRP1[], 43
SHP[1], 42
SRP0[], 42
MIRP[m&gt;RBl], 41, 81
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="473">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 463, 0, 0
OFFSET[R], 836, 443, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="474">
      <instructions>
        <talk>/* VTTTalk glyph 474, char 0xffff */
/* GUI generated Mon Jan 13 16:50:15 2020 */

/* Y direction */
YAnchor(13,77)
YShift(13,0)
YLink(13,14,81)
YAnchor(28,75)
YShift(28,1)
YShift(28,10)
YInterpolate(13,18,28)
YShift(18,22)
YLink(18,19,67)
YShift(19,23)
YLink(28,27,81)
YShift(27,9)

/* X direction */
XAnchor(23)
XDist(23,24)
XInterpolate(24,20,23)

Smooth()
</talk>
        <assembly>/* TT glyph 474, char 0xffff */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 13, 77
SHP[1], 0
MIRP[m&gt;RBl], 14, 81
MIAP[R], 28, 75
SHP[1], 1
SHP[1], 10
SRP2[], 13
IP[], 18
SRP1[], 18
SHP[1], 22
SRP0[], 18
MIRP[m&gt;RBl], 19, 67
SHP[2], 23
SRP0[], 28
MIRP[m&gt;RBl], 27, 81
SHP[2], 9
SVTCA[X]
MDAP[R], 23
MDRP[m&gt;RBl], 24
IP[], 20
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="475">
      <instructions>
        <talk>/* VTTTalk glyph 475, char 0xffff */
/* GUI generated Mon Jan 13 16:50:41 2020 */

/* Y direction */
YAnchor(0,78)
YLink(0,30,80)
YShift(0,50)
YAnchor(9,76)
YShift(9,15)
YLink(9,22,80)
YInterpolate(0,37,9)
YShift(37,40)
YLink(37,38,81)
YShift(38,35)
YShift(38,42)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 475, char 0xffff */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 0, 78
MIRP[m&gt;RBl], 30, 80
SHP[1], 50
MIAP[R], 9, 76
SHP[1], 15
MIRP[m&gt;RBl], 22, 80
SRP2[], 0
IP[], 37
SRP1[], 37
SHP[1], 40
SRP0[], 37
MIRP[m&gt;RBl], 38, 81
SHP[2], 35
SHP[2], 42
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="476">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 475, 0, 0
OFFSET[R], 797, 1105, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="477">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 475, 0, 0
OFFSET[R], 772, 1095, 125

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="478">
      <instructions>
        <talk>/* VTTTalk glyph 478, char 0xffff */
/* GUI generated Fri Jan 10 07:21:32 2020 */

/* Y direction */
YAnchor(0)
YAnchor(31,76)
YDist(31,19)
YShift(31,26)
YInterpolate(0,11,31)
YShift(11,12)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 478, char 0xffff */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MDAP[R], 0
MIAP[R], 31, 76
MDRP[m&gt;RBl], 19
SHP[1], 26
SRP2[], 0
IP[], 11
SRP1[], 11
SHP[1], 12
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="479">
      <instructions>
        <talk>/* VTTTalk glyph 479, char 0xffff */
/* GUI generated Fri Jan 10 07:24:10 2020 */

/* Y direction */
YAnchor(12,77)
YShift(12,0)
YShift(12,4)
YShift(12,17)
YLink(12,13,81)
YShift(13,18)
YAnchor(24,75)
YShift(24,1)
YShift(24,5)
YShift(24,29)
YIPAnchor(24,8,12)
YDist(8,9)
YLink(24,23,81)
YShift(23,28)

/* X direction */

Smooth()


</talk>
        <assembly>/* TT glyph 479, char 0xffff */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 12, 77
SHP[1], 0
SHP[1], 4
SHP[1], 17
MIRP[m&gt;RBl], 13, 81
SHP[2], 18
MIAP[R], 24, 75
SHP[1], 1
SHP[1], 5
SHP[1], 29
SRP2[], 12
IP[], 8
MDAP[R], 8
MDRP[m&gt;RBl], 9
SRP0[], 24
MIRP[m&gt;RBl], 23, 81
SHP[2], 28
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="480">
      <instructions>
        <talk>/* VTTTalk glyph 480, char 0xffff */
/* GUI generated Fri Jan 10 07:26:25 2020 */

/* Y direction */
YAnchor(12,77)
YShift(12,0)
YShift(12,4)
YShift(12,17)
YLink(12,13,81)
YShift(13,18)
YAnchor(24,75)
YShift(24,1)
YShift(24,5)
YShift(24,29)
YIPAnchor(24,33,8,12)
YLink(33,32,79)
YLink(8,9,79)
YLink(24,23,81)
YShift(23,28)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 480, char 0xffff */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 12, 77
SHP[1], 0
SHP[1], 4
SHP[1], 17
MIRP[m&gt;RBl], 13, 81
SHP[2], 18
MIAP[R], 24, 75
SHP[1], 1
SHP[1], 5
SHP[1], 29
SRP2[], 12
IP[], 33
IP[], 8
MDAP[R], 33
MDAP[R], 8
SRP0[], 33
MIRP[m&gt;RBl], 32, 79
SRP0[], 8
MIRP[m&gt;RBl], 9, 79
SRP0[], 24
MIRP[m&gt;RBl], 23, 81
SHP[2], 28
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="481">
      <instructions>
        <talk>/* VTTTalk glyph 481, char 0xffff */
/* GUI generated Fri Jan 10 07:29:49 2020 */

/* Y direction */
YAnchor(39,77)
YShift(39,34)
YLink(39,38,81)
YShift(39,0)
YLink(0,9,80)
YAnchor(42,75)
YShift(42,5)
YShift(42,32)
YShift(42,47)
YIPAnchor(42,27,39)
YLink(27,28,79)
YLink(42,41,81)
YShift(41,46)

/* X direction */

Smooth()


</talk>
        <assembly>/* TT glyph 481, char 0xffff */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 39, 77
SHP[1], 34
MIRP[m&gt;RBl], 38, 81
SHP[1], 0
SRP0[], 0
MIRP[m&gt;RBl], 9, 80
MIAP[R], 42, 75
SHP[1], 5
SHP[1], 32
SHP[1], 47
SRP2[], 39
IP[], 27
MDAP[R], 27
MIRP[m&gt;RBl], 28, 79
SRP0[], 42
MIRP[m&gt;RBl], 41, 81
SHP[2], 46
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="482">
      <instructions>
        <talk>/* VTTTalk glyph 482, char 0xffff */
/* GUI generated Fri Jan 10 07:31:51 2020 */

/* Y direction */
YAnchor(4,77)
YShift(4,0)
YLink(4,5,81)
YAnchor(11,75)
YShift(11,1)
YLink(11,10,81)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 482, char 0xffff */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 4, 77
SHP[1], 0
MIRP[m&gt;RBl], 5, 81
MIAP[R], 11, 75
SHP[1], 1
MIRP[m&gt;RBl], 10, 81
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="483">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 482, 0, 0
OFFSET[R], 860, 684, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="484">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 482, 0, 0
OFFSET[R], 779, 722, 125
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="485">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 482, 0, 0
OFFSET[R], 777, 721, 125
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="486">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 482, 0, 0
OFFSET[R], 771, 722, 125
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="487">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 482, 0, 0
OFFSET[R], 859, 702, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="488">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Jan  9 18:13:47 2020 */

OFFSET[R], 482, 0, 0
OFFSET[R], 491, 586, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="489">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 482, 0, 0
OFFSET[R], 782, 721, 125
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="490">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 482, 0, 0
OFFSET[R], 799, 777, -30
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="491">
      <instructions>
        <talk>/* VTTTalk glyph 491, char 0xffff */
/* GUI generated Fri Jan 10 07:33:57 2020 */

/* Y direction */
YAnchor(0)
YDist(0,6)
YShift(0,11)
YAnchor(32,75)
YShift(32,18)
YLink(32,31,81)

/* X direction */

Smooth()


</talk>
        <assembly>/* TT glyph 491, char 0xffff */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MDAP[R], 0
MDRP[m&gt;RBl], 6
SHP[1], 11
MIAP[R], 32, 75
SHP[1], 18
MIRP[m&gt;RBl], 31, 81
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="492">
      <instructions>
        <talk>/* VTTTalk glyph 492, char 0xffff */
/* GUI generated Mon Jan 13 10:14:58 2020 */

/* Y direction */
YAnchor(34,77)
YShift(34,3)
YLink(34,33,88)
YShift(34,29)
YDist(29,28)
YAnchor(37,75)
YShift(37,1)
YShift(37,19)
YShift(37,42)
YIPAnchor(37,12,34)
YDist(12,13)
YLink(37,36,81)
YShift(36,41)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 492, char 0xffff */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 34, 77
SHP[1], 3
MIRP[m&gt;RBl], 33, 88
SHP[1], 29
SRP0[], 29
MDRP[m&gt;RBl], 28
MIAP[R], 37, 75
SHP[1], 1
SHP[1], 19
SHP[1], 42
SRP2[], 34
IP[], 12
MDAP[R], 12
MDRP[m&gt;RBl], 13
SRP0[], 37
MIRP[m&gt;RBl], 36, 81
SHP[2], 41
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="493">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 492, 0, 0
OFFSET[R], 797, 1005, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="494">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 492, 0, 0
OFFSET[R], 862, 268, 351
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="495">
      <instructions>
        <talk>/* VTTTalk glyph 495, char 0xffff */
/* GUI generated Mon Jan 13 10:16:53 2020 */

/* Y direction */
YAnchor(15,75)
YShift(15,1)
YLink(15,14,81)
YAnchor(18,77)
YShift(18,0)
YShift(18,4)
YLink(18,19,88)
YShift(19,5)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 495, char 0xffff */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 15, 75
SHP[1], 1
MIRP[m&gt;RBl], 14, 81
MIAP[R], 18, 77
SHP[1], 0
SHP[1], 4
MIRP[m&gt;RBl], 19, 88
SHP[2], 5
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="496">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 495, 0, 0
OFFSET[R], 860, 733, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="497">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 495, 0, 0
OFFSET[R], 862, 266, 63

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="498">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 495, 0, 0
OFFSET[R], 776, 934, -381

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="499">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 495, 0, 0
OFFSET[R], 797, 976, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="500">
      <instructions>
        <talk>/* VTTTalk glyph 500, char 0xffff */
/* GUI generated Mon Jan 13 10:19:40 2020 */

/* Y direction */
YAnchor(15,75)
YShift(15,1)
YLink(15,14,81)
YAnchor(18,77)
YShift(18,0)
YShift(18,4)
YLink(18,19,81)
YInterpolate(18,22,15)
YShift(22,26)
YDist(22,38)
YShift(38,33)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 500, char 0xffff */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 15, 75
SHP[1], 1
MIRP[m&gt;RBl], 14, 81
MIAP[R], 18, 77
SHP[1], 0
SHP[1], 4
MIRP[m&gt;RBl], 19, 81
SRP2[], 15
IP[], 22
SRP1[], 22
SHP[1], 26
SRP0[], 22
MDRP[m&gt;RBl], 38
SHP[2], 33
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="501">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 495, 0, 0
OFFSET[R], 807, 294, 85

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="502">
      <instructions>
        <talk>/* VTTTalk glyph 502, char 0xffff */
/* GUI generated Fri Jan 10 07:44:44 2020 */

/* Y direction */
YAnchor(9,75)
YShift(9,20)
YShift(9,23)
YShift(9,37)
YLink(9,8,81)
YShift(8,39)
YAnchor(26,77)
YShift(26,4)
YShift(26,21)
YShift(26,22)
YShift(26,31)
YLink(26,27,81)
YShift(27,32)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 502, char 0xffff */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 9, 75
SHP[1], 20
SHP[1], 23
SHP[1], 37
MIRP[m&gt;RBl], 8, 81
SHP[2], 39
MIAP[R], 26, 77
SHP[1], 4
SHP[1], 21
SHP[1], 22
SHP[1], 31
MIRP[m&gt;RBl], 27, 81
SHP[2], 32
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="503">
      <instructions>
        <talk>/* VTTTalk glyph 503, char 0xffff */
/* GUI generated Fri Jan 10 07:49:50 2020 */

/* Y direction */
YAnchor(6,75)
YShift(6,10)
YShift(6,14)
YShift(6,17)
YShift(6,22)
YLink(6,5,81)
YShift(5,21)
YAnchor(29,77)
YShift(29,0)
YShift(29,19)
YLink(29,28,81)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 503, char 0xffff */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 6, 75
SHP[1], 10
SHP[1], 14
SHP[1], 17
SHP[1], 22
MIRP[m&gt;RBl], 5, 81
SHP[2], 21
MIAP[R], 29, 77
SHP[1], 0
SHP[1], 19
MIRP[m&gt;RBl], 28, 81
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="504">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 503, 0, 0
OFFSET[R], 860, 1036, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="505">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 503, 0, 0
OFFSET[R], 778, 1073, 125

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="506">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 503, 0, 0
OFFSET[R], 797, 1087, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="507">
      <instructions>
        <talk>/* VTTTalk glyph 507, char 0xffff */
/* GUI generated Mon Jan 13 10:20:44 2020 */

/* Y direction */
YAnchor(0)
YDist(0,11)
YAnchor(22,75)
YShift(22,30)
YShift(22,38)
YShift(22,43)
YLink(22,21,66)
YShift(21,42)
YAnchor(46,10)
YShift(46,37)
YLink(46,47,66)

/* X direction */
XAnchor(29)
XDist(29,30)
XAnchor(38)
XDist(38,39)

Smooth()

</talk>
        <assembly>/* TT glyph 507, char 0xffff */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MDAP[R], 0
MDRP[m&gt;RBl], 11
MIAP[R], 22, 75
SHP[1], 30
SHP[1], 38
SHP[1], 43
MIRP[m&gt;RBl], 21, 66
SHP[2], 42
MIAP[R], 46, 10
SHP[1], 37
MIRP[m&gt;RBl], 47, 66
SVTCA[X]
MDAP[R], 29
MDRP[m&gt;RBl], 30
MDAP[R], 38
MDRP[m&gt;RBl], 39
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="508">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 503, 0, 0
OFFSET[R], 781, 1073, 125

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="509">
      <instructions>
        <talk>/* VTTTalk glyph 509, char 0xffff */
/* GUI generated Mon Jan 13 10:21:42 2020 */

/* Y direction */
YAnchor(0,78)
YLink(0,18,80)
YAnchor(9,76)
YLink(9,26,80)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 509, char 0xffff */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 0, 78
MIRP[m&gt;RBl], 18, 80
MIAP[R], 9, 76
MIRP[m&gt;RBl], 26, 80
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="510">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 509, 0, 0
OFFSET[R], 860, 1018, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="511">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 509, 0, 0
OFFSET[R], 779, 1056, 125

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="512">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 509, 0, 0
OFFSET[R], 777, 1055, 125

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="513">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 509, 0, 0
OFFSET[R], 771, 1056, 125

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="514">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 509, 0, 0
OFFSET[R], 859, 1036, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="515">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 509, 0, 0
OFFSET[R], 861, 1098, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="516">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 509, 0, 0
OFFSET[R], 782, 1055, 125

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="517">
      <instructions>
        <talk>/* VTTTalk glyph 517, char 0xffff */
/* GUI generated Mon Jan 13 10:22:21 2020 */

/* Y direction */
YAnchor(0,78)
YShift(0,24)
YLink(0,30,80)
YShift(30,46)
YAnchor(9,76)
YShift(9,15)
YLink(9,37,80)
YShift(37,54)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 517, char 0xffff */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 0, 78
SHP[2], 24
MIRP[m&gt;RBl], 30, 80
SHP[2], 46
MIAP[R], 9, 76
SHP[1], 15
MIRP[m&gt;RBl], 37, 80
SHP[2], 54
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="518">
      <instructions>
        <talk>/* VTTTalk glyph 518, char 0xffff */
/* GUI generated Fri Jan 10 08:12:38 2020 */

/* Y direction */
YAnchor(0)
YDist(0,33)
YAnchor(9,78)
YLink(9,40,80)
YAnchor(18,76)
YLink(18,48,80)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 518, char 0xffff */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MDAP[R], 0
MDRP[m&gt;RBl], 33
MIAP[R], 9, 78
MIRP[m&gt;RBl], 40, 80
MIAP[R], 18, 76
MIRP[m&gt;RBl], 48, 80
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="519">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 509, 0, 0
OFFSET[R], 863, 628, -198

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="520">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 519, 0, 0
OFFSET[R], 860, 1018, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="521">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 509, 0, 0
OFFSET[R], 781, 1055, 125

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="522">
      <instructions>
        <talk>/* VTTTalk glyph 522, char 0xffff */
/* GUI generated Mon Jan 13 10:23:40 2020 */

/* Y direction */
YAnchor(0,77)
YLink(0,11,80)
YShift(0,35)
YLink(0,36,81)
YAnchor(8,75)
YLink(8,18,80)
YLink(8,49,81)
YShift(8,50)
YInterpolate(0,27,8)
YShift(27,31)
YDelta(31,-0.5@40..41)
YLink(27,28,79)
YShift(28,32)
YDelta(32,-0.5@40..41)

/* X direction */
XAnchor(32)
XDist(32,33)
XInterpolate(33,29,32)

Smooth()

</talk>
        <assembly>/* TT glyph 522, char 0xffff */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 0, 77
MIRP[m&gt;RBl], 11, 80
SHP[1], 35
MIRP[m&gt;RBl], 36, 81
MIAP[R], 8, 75
MIRP[m&gt;RBl], 18, 80
MIRP[m&gt;RBl], 49, 81
SHP[1], 50
SRP2[], 0
IP[], 27
SRP1[], 27
SHP[1], 31
DLTP2[(31 @15 -4)]
DLTP3[(31 @0 -4)]
SRP0[], 27
MIRP[m&gt;RBl], 28, 79
SHP[2], 32
DLTP2[(32 @15 -4)]
DLTP3[(32 @0 -4)]
SVTCA[X]
MDAP[R], 32
MDRP[m&gt;RBl], 33
IP[], 29
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="523">
      <instructions>
        <talk>/* VTTTalk glyph 523, char 0xffff */
/* GUI generated Sat Jan 11 16:57:54 2020 */

/* Y direction */
YAnchor(14,77)
YShift(14,0)
YLink(14,15,81)
YAnchor(21,75)
YShift(21,1)
YInterpolate(14,8,21)
YLink(8,23,80)
YLink(21,20,81)
YShift(20,30)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 523, char 0xffff */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 14, 77
SHP[1], 0
MIRP[m&gt;RBl], 15, 81
MIAP[R], 21, 75
SHP[1], 1
SRP2[], 14
IP[], 8
SRP0[], 8
MIRP[m&gt;RBl], 23, 80
SRP0[], 21
MIRP[m&gt;RBl], 20, 81
SHP[2], 30
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="524">
      <instructions>
        <talk>/* VTTTalk glyph 524, char 0xffff */
/* GUI generated Sat Jan 11 17:37:20 2020 */

/* Y direction */
YAnchor(30,77)
YShift(30,0)
YLink(30,31,81)
YAnchor(37,75)
YShift(37,1)
YLink(37,36,81)
YInterpolate(30,12,3,37)
YDist(12,22)
YDist(3,28)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 524, char 0xffff */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 30, 77
SHP[1], 0
MIRP[m&gt;RBl], 31, 81
MIAP[R], 37, 75
SHP[1], 1
MIRP[m&gt;RBl], 36, 81
SRP2[], 30
IP[], 12
IP[], 3
SRP0[], 12
MDRP[m&gt;RBl], 22
SRP0[], 3
MDRP[m&gt;RBl], 28
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="525">
      <instructions>
        <talk>/* VTTTalk glyph 525, char 0xffff */
/* GUI generated Sat Jan 11 17:38:53 2020 */

/* Y direction */
YAnchor(10,76)
YLink(10,34,80)
YAnchor(19,78)
YLink(19,26,80)
YShift(19,0)
YDist(0,47)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 525, char 0xffff */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 10, 76
MIRP[m&gt;RBl], 34, 80
MIAP[R], 19, 78
MIRP[m&lt;RGr], 26, 80
SHP[1], 0
SRP0[], 0
MDRP[m&gt;RBl], 47
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="526">
      <instructions>
        <talk>/* VTTTalk glyph 526, char 0xffff */
/* GUI generated Sat Jan 11 16:29:07 2020 */

/* Y direction */
YAnchor(39,77)
YShift(39,0)
YShift(39,21)
YLink(39,40,81)
YAnchor(46,75)
YShift(46,22)
YInterpolate(39,7,46)
YLink(7,12,80)
YLink(46,45,81)
YShift(45,19)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 526, char 0xffff */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 39, 77
SHP[1], 0
SHP[1], 21
MIRP[m&gt;RBl], 40, 81
MIAP[R], 46, 75
SHP[1], 22
SRP2[], 39
IP[], 7
SRP0[], 7
MIRP[m&gt;RBl], 12, 80
SRP0[], 46
MIRP[m&gt;RBl], 45, 81
SHP[2], 19
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="527">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 526, 0, 0
OFFSET[R], 860, 919, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="528">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 526, 0, 0
OFFSET[R], 778, 956, 125
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="529">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 526, 0, 0
OFFSET[R], 797, 1021, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="530">
      <instructions>
        <talk>/* VTTTalk glyph 530, char 0xffff */
/* GUI generated Mon Jan 13 10:30:35 2020 */

/* Y direction */
YAnchor(0,78)
YLink(0,10,80)
YAnchor(25,76)
YShift(25,30)
YLink(25,37,80)
YInterpolate(0,44,25)
YShift(44,17)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 530, char 0xffff */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 0, 78
MIRP[m&gt;RBl], 10, 80
MIAP[R], 25, 76
SHP[1], 30
MIRP[m&gt;RBl], 37, 80
SRP2[], 0
IP[], 44
SRP1[], 44
SHP[1], 17
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="531">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 530, 0, 0
OFFSET[R], 860, 856, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="532">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 530, 0, 0
OFFSET[R], 778, 893, 125
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="533">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 530, 0, 0
OFFSET[R], 798, 807, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="534">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Jan  9 18:13:47 2020 */

OFFSET[R], 530, 0, 0
OFFSET[R], 530, 890, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="535">
      <instructions>
        <talk>/* VTTTalk glyph 535, char 0xffff */
/* GUI generated Fri Jan 10 08:30:45 2020 */

/* Y direction */
YAnchor(6,75)
YShift(6,2)
YShift(6,10)
YLink(6,24,79)
YShift(6,34)
YAnchor(28,77)
YLink(28,29,81)
YShift(28,33)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 535, char 0xffff */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 6, 75
SHP[1], 2
SHP[1], 10
MIRP[m&gt;RBl], 24, 79
SHP[1], 34
MIAP[R], 28, 77
MIRP[m&gt;RBl], 29, 81
SHP[1], 33
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="536">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 535, 0, 0
OFFSET[R], 862, 599, 63

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="537">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 535, 0, 0
OFFSET[R], 778, 1051, 125

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="538">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 535, 0, 0
OFFSET[R], 798, 998, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="539">
      <instructions>
        <talk>/* VTTTalk glyph 539, char 0xffff */
/* GUI generated Sun Jan 12 12:22:22 2020 */

/* Y direction */
YAnchor(0,78)
YLink(0,13,80)
YAnchor(28,75)
YShift(28,9)
YShift(28,18)
YShift(28,33)
YLink(28,27,81)
YShift(27,32)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 539, char 0xffff */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 0, 78
MIRP[m&gt;RBl], 13, 80
MIAP[R], 28, 75
SHP[1], 9
SHP[1], 18
SHP[1], 33
MIRP[m&gt;RBl], 27, 81
SHP[2], 32
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="540">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 539, 0, 0
OFFSET[R], 860, 1044, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="541">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 539, 0, 0
OFFSET[R], 779, 1082, 125

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="542">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 539, 0, 0
OFFSET[R], 777, 1081, 125

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="543">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 539, 0, 0
OFFSET[R], 771, 1082, 125

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="544">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 539, 0, 0
OFFSET[R], 859, 1062, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="545">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 539, 0, 0
OFFSET[R], 861, 1124, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="546">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 539, 0, 0
OFFSET[R], 782, 1081, 125

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="547">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 539, 0, 0
OFFSET[R], 799, 1209, 36
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="548">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 539, 0, 0
OFFSET[R], 780, 1081, 125

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="549">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 539, 0, 0
OFFSET[R], 781, 1081, 125

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="550">
      <instructions>
        <talk>/* VTTTalk glyph 550, char 0xffff */
/* GUI generated Sat Jan 11 17:43:07 2020 */

/* Y direction */
YAnchor(0,78)
YAnchor(10,75)
YShift(10,2)
YShift(10,6)
YShift(10,15)
YLink(10,9,81)
YShift(9,14)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 550, char 0xffff */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 0, 78
MIAP[R], 10, 75
SHP[1], 2
SHP[1], 6
SHP[1], 15
MIRP[m&gt;RBl], 9, 81
SHP[2], 14
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="551">
      <instructions>
        <talk>/* VTTTalk glyph 551, char 0xffff */
/* GUI generated Fri Jan 10 09:14:47 2020 */

/* Y direction */
YAnchor(0,78)
YShift(0,8)
YAnchor(18,75)
YShift(18,2)
YShift(18,9)
YShift(18,14)
YShift(18,23)
YShift(18,28)
YLink(18,17,81)
YShift(17,22)
YShift(17,27)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 551, char 0xffff */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 0, 78
SHP[2], 8
MIAP[R], 18, 75
SHP[1], 2
SHP[1], 9
SHP[1], 14
SHP[1], 23
SHP[1], 28
MIRP[m&gt;RBl], 17, 81
SHP[2], 22
SHP[2], 27
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="552">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 551, 0, 0
OFFSET[R], 860, 1184, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="553">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 551, 0, 0
OFFSET[R], 777, 1221, 125

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="554">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 551, 0, 0
OFFSET[R], 771, 1222, 125

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="555">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 551, 0, 0
OFFSET[R], 859, 1202, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="556">
      <instructions>
        <talk>/* VTTTalk glyph 556, char 0xffff */
/* GUI generated Mon Jan 13 10:33:01 2020 */

/* Y direction */
YAnchor(26,77)
YShift(26,0)
YLink(26,27,81)
YAnchor(33,75)
YShift(33,1)
YShift(33,15)
YInterpolate(26,4,33)
YDist(4,5)
YLink(33,32,88)
YShift(32,14)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 556, char 0xffff */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 26, 77
SHP[1], 0
MIRP[m&gt;RBl], 27, 81
MIAP[R], 33, 75
SHP[1], 1
SHP[1], 15
SRP2[], 26
IP[], 4
SRP0[], 4
MDRP[m&gt;RBl], 5
SRP0[], 33
MIRP[m&gt;RBl], 32, 88
SHP[2], 14
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="557">
      <instructions>
        <talk>/* VTTTalk glyph 557, char 0xffff */
/* GUI generated Mon Jan 13 10:33:26 2020 */

/* Y direction */
YAnchor(10,75)
YShift(10,1)
YShift(10,5)
YShift(10,15)
YLink(10,9,81)
YShift(9,14)
YAnchor(18,77)
YShift(18,0)
YShift(18,4)
YShift(18,23)
YLink(18,19,81)
YShift(19,26)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 557, char 0xffff */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 10, 75
SHP[1], 1
SHP[1], 5
SHP[1], 15
MIRP[m&gt;RBl], 9, 81
SHP[2], 14
MIAP[R], 18, 77
SHP[1], 0
SHP[1], 4
SHP[1], 23
MIRP[m&gt;RBl], 19, 81
SHP[2], 26
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="558">
      <instructions>
        <talk>/* VTTTalk glyph 558, char 0xffff */
/* GUI generated Fri Jan 10 09:28:46 2020 */

/* Y direction */
YAnchor(14,75)
YShift(14,3)
YShift(14,8)
YShift(14,19)
YLink(14,13,81)
YShift(13,21)
YAnchor(22,77)
YShift(22,0)
YLink(22,23,81)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 558, char 0xffff */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 14, 75
SHP[1], 3
SHP[1], 8
SHP[1], 19
MIRP[m&gt;RBl], 13, 81
SHP[2], 21
MIAP[R], 22, 77
SHP[1], 0
MIRP[m&gt;RBl], 23, 81
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="559">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 558, 0, 0
OFFSET[R], 860, 1024, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="560">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 558, 0, 0
OFFSET[R], 777, 1061, 125

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="561">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 558, 0, 0
OFFSET[R], 771, 1062, 125

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="562">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 558, 0, 0
OFFSET[R], 772, 1061, 125

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="563">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 558, 0, 0
OFFSET[R], 859, 1042, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="564">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 558, 0, 0
OFFSET[R], 782, 1061, 125

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="565">
      <instructions>
        <talk>/* VTTTalk glyph 565, char 0xffff */
/* GUI generated Fri Jan 10 09:31:58 2020 */

/* Y direction */
YAnchor(5,77)
YShift(5,0)
YLink(5,28,79)
YAnchor(24,75)
YShift(24,7)
YLink(24,9,79)
YShift(24,21)
YShift(24,26)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 565, char 0xffff */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 5, 77
SHP[1], 0
MIRP[m&gt;RBl], 28, 79
MIAP[R], 24, 75
SHP[1], 7
MIRP[m&gt;RBl], 9, 79
SHP[1], 21
SHP[1], 26
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="566">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 565, 0, 0
OFFSET[R], 860, 890, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="567">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 565, 0, 0
OFFSET[R], 778, 927, 125
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="568">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 565, 0, 0
OFFSET[R], 772, 927, 125
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="569">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 565, 0, 0
OFFSET[R], 862, 489, 58

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="570">
      <instructions>
        <talk>/* VTTTalk glyph 570, char 0xffff */
/* GUI generated Sat Jan 11 17:49:49 2020 */

/* Y direction */
YAnchor(0)
YShift(0,6)
YShift(0,11)
YAnchor(22,78)
YShift(22,30)
YAnchor(42,75)
YShift(42,16)
YShift(42,24)
YShift(42,31)
YShift(42,38)
YShift(42,47)
YLink(42,41,81)
YShift(41,39)
YShift(41,46)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 570, char 0xffff */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MDAP[R], 0
SHP[2], 6
SHP[2], 11
MIAP[R], 22, 78
SHP[1], 30
MIAP[R], 42, 75
SHP[1], 16
SHP[1], 24
SHP[1], 31
SHP[1], 38
SHP[1], 47
MIRP[m&gt;RBl], 41, 81
SHP[2], 39
SHP[2], 46
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="571">
      <instructions>
        <talk>/* VTTTalk glyph 571, char 0xaa */
/* GUI generated Mon Jan 13 17:08:10 2020 */

/* Y direction */
YAnchor(0)
YDist(0,49)
YAnchor(28)
YDist(28,11)
YInterpolate(28,6,0)
YShift(6,54)
YAnchor(41)
YDist(41,35)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 571, char 0xaa */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MDAP[R], 0
MDRP[m&gt;RBl], 49
MDAP[R], 28
MDRP[m&gt;RBl], 11
SRP2[], 0
IP[], 6
SRP1[], 6
SHP[1], 54
MDAP[R], 41
MDRP[m&gt;RBl], 35
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="572">
      <instructions>
        <talk>/* VTTTalk Unicode 0xba */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(0)	/* min */
YAnchor(8)	/* max */

/* YDir: Stroke #0 */
YDist(8,22) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YDist(0,15) /*perpendicular to the stroke*/

Smooth()

</talk>
        <assembly>/* TT glyph 572, char 0xba */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 8
MDRP[m&gt;RBl], 22
SRP0[], 0
MDRP[m&gt;RBl], 15
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="573">
      <instructions>
        <talk>/* VTTTalk glyph 573, char 0x2b0 */
/* GUI generated Mon Jan 13 17:09:06 2020 */

/* Y direction */
YAnchor(5)
YAnchor(38)
YShift(38,10)
YShift(38,37)
YShift(38,43)
YIPAnchor(5,28,38)
YDist(28,21)
YDist(38,39)
YShift(39,44)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 573, char 0x2b0 */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MDAP[R], 5
MDAP[R], 38
SHP[1], 10
SHP[1], 37
SHP[1], 43
SRP2[], 5
IP[], 28
MDAP[R], 28
MDRP[m&gt;RBl], 21
SRP0[], 38
MDRP[m&gt;RBl], 39
SHP[2], 44
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="574">
      <instructions>
        <talk>/* VTTTalk glyph 574, char 0x2b1 */
/* GUI generated Mon Jan 13 17:11:19 2020 */

/* Y direction */
YAnchor(32)
YShift(32,0)
YShift(32,33)
YShift(32,62)
YDist(32,31)
YShift(31,34)
YAnchor(46)
YDist(46,58)
YInterpolate(32,18,46)
YDist(18,10)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 574, char 0x2b1 */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MDAP[R], 32
SHP[1], 0
SHP[1], 33
SHP[1], 62
MDRP[m&gt;RBl], 31
SHP[2], 34
MDAP[R], 46
MDRP[m&gt;RBl], 58
SRP2[], 32
IP[], 18
SRP0[], 18
MDRP[m&gt;RBl], 10
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="575">
      <instructions>
        <talk>/* VTTTalk glyph 575, char 0x2b2 */
/* GUI generated Mon Jan 13 17:12:03 2020 */

/* Y direction */
YAnchor(0)
YDist(0,12)
YAnchor(35)
YInterpolate(0,19,29,35)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 575, char 0x2b2 */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MDAP[R], 0
MDRP[m&gt;RBl], 12
MDAP[R], 35
SRP2[], 0
IP[], 19
IP[], 29
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="576">
      <instructions>
        <talk>/* VTTTalk glyph 576, char 0x2b7 */
/* GUI generated Mon Jan 13 17:12:56 2020 */

/* Y direction */
YAnchor(0)
YShift(0,8)
YAnchor(18)
YShift(18,2)
YShift(18,10)
YShift(18,13)
YShift(18,23)
YShift(18,28)
YDist(18,17)
YShift(17,22)
YShift(17,27)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 576, char 0x2b7 */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MDAP[R], 0
SHP[2], 8
MDAP[R], 18
SHP[1], 2
SHP[1], 10
SHP[1], 13
SHP[1], 23
SHP[1], 28
MDRP[m&gt;RBl], 17
SHP[2], 22
SHP[2], 27
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="577">
      <instructions>
        <talk>/* VTTTalk glyph 577, char 0x2e1 */
/* GUI generated Mon Jan 13 17:13:35 2020 */

/* Y direction */
YAnchor(5)
YAnchor(11)
YShift(11,10)
YDist(11,12)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 577, char 0x2e1 */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MDAP[R], 5
MDAP[R], 11
SHP[1], 10
MDRP[m&gt;RBl], 12
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="578">
      <instructions>
        <talk>/* VTTTalk glyph 578, char 0x207f */
/* GUI generated Mon Jan 13 17:14:13 2020 */

/* Y direction */
YAnchor(16)
YDist(16,9)
YShift(16,41)
YAnchor(26)
YShift(26,25)
YShift(26,31)
YShift(26,36)
YDist(26,27)
YShift(27,32)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 578, char 0x207f */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MDAP[R], 16
MDRP[m&gt;RBl], 9
SHP[1], 41
MDAP[R], 26
SHP[1], 25
SHP[1], 31
SHP[1], 36
MDRP[m&gt;RBl], 27
SHP[2], 32
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="579">
      <instructions>
        <talk>/* VTTTalk glyph 579, char 0x3b2 */
/* GUI generated Sat Jan 11 07:05:34 2020 */

/* Y direction */
YAnchor(4)
YDist(4,48)
YAnchor(22,11)
YDist(22,29)
YIPAnchor(4,41,22)
YDist(41,36)
YAnchor(53)
YShift(53,52)
YLink(53,54,66)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 579, char 0x3b2 */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MDAP[R], 4
MDRP[m&gt;RBl], 48
MIAP[R], 22, 11
MDRP[m&gt;RBl], 29
SRP2[], 4
IP[], 41
MDAP[R], 41
MDRP[m&gt;RBl], 36
MDAP[R], 53
SHP[1], 52
MIRP[m&gt;RBl], 54, 66
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="580">
      <instructions>
        <talk>/* VTTTalk Unicode 0x3b8 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 0 11 */
/* Min and Max */
YAnchor(0,11)	/* min, CVT */
YAnchor(8)	/* max */

/* CVTs - beginning */
/* CVTs - end */


/* YDir: Stroke #0 */
YDist(8,31) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YInterpolate(8,17,0)
YAnchor(17)
YDist(17,18) /*perpendicular to the stroke*/

/* YDir: Stroke #2 */
YDist(0,21) /*perpendicular to the stroke*/

Smooth()
</talk>
        <assembly>/* TT glyph 580, char 0x3b8 */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 0, 11
MDAP[R], 8
MDRP[m&gt;RBl], 31
SRP2[], 0
IP[], 17
MDAP[R], 17
MDRP[m&gt;RBl], 18
SRP0[], 0
MDRP[m&gt;RBl], 21
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="581">
      <instructions>
        <talk>/* VTTTalk glyph 581, char 0x3c7 */
/* GUI generated Mon Jan 13 17:15:55 2020 */

/* Y direction */
YAnchor(0)
YDist(0,1)
YShift(0,10)
YAnchor(5)
YDist(5,6)
YShift(5,11)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 581, char 0x3c7 */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MDAP[R], 0
MDRP[m&gt;RBl], 1
SHP[1], 10
MDAP[R], 5
MDRP[m&gt;RBl], 6
SHP[1], 11
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="582">
      <instructions>
        <talk>/* VTTTalk Unicode 0x37c */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 0 19  DISABLED for a NON-LATIN glyph */
/* CVT 9 16  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(0)	/* min */
YAnchor(9)	/* max */

/* YDir: Stroke #0 */
YDist(9,18) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YDist(0,27) /*perpendicular to the stroke*/

/* Contour #1 */
YShift(9,42) /* max */
YShift(0,36) /* min */

Smooth()
</talk>
        <assembly>/* TT glyph 582, char 0x37c */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 9
MDRP[m&gt;RBl], 18
SRP0[], 0
MDRP[m&gt;RBl], 27
SRP1[], 9
SHP[1], 42
SRP1[], 0
SHP[1], 36
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="583">
      <instructions>
        <talk>/* VTTTalk Unicode 0xa770 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 29 17  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(0)	/* min */
YAnchor(29)	/* max */

/* YDir: Stroke #0 */
YDist(29,9) /*perpendicular to the stroke*/

Smooth()

</talk>
        <assembly>/* TT glyph 583, char 0xa770 */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 29
MDRP[m&gt;RBl], 9
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="584">
      <instructions>
        <talk>/* VTTTalk Unicode 0x30 (0) */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 0 13 */
/* CVT 8 5 */
/* Min and Max */
YAnchor(0,13)	/* min, CVT */
YAnchor(8,5)	/* max, CVT */

/* CVTs - beginning */
/* CVTs - end */


/* YDir: Stroke #0 */
YDist(8,27) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YDist(0,17) /*perpendicular to the stroke*/

Smooth()

</talk>
        <assembly>/* TT glyph 584, char 0x30 (0) */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 0, 13
MIAP[R], 8, 5
MDRP[m&gt;RBl], 27
SRP0[], 0
MDRP[m&gt;RBl], 17
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="585">
      <instructions>
        <talk>/* VTTTalk Unicode 0x31 (1) */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 14 12 */
/* Min and Max */
YAnchor(14,12)	/* min, CVT */
YAnchor(8,5)	/* max */

/* CVTs - beginning */
/* CVTs - end */


/* Extreme Min */
YShift(14,13)

Smooth()

</talk>
        <assembly>/* TT glyph 585, char 0x31 (1) */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 14, 12
MIAP[R], 8, 5
SRP1[], 14
SHP[1], 13
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="586">
      <instructions>
        <talk>/* VTTTalk Unicode 0x32 (2) */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 0 12 */
/* CVT 19 5 */
/* Min and Max */
YAnchor(0,12)	/* min, CVT */
YAnchor(19,5)	/* max, CVT */

/* CVTs - beginning */
/* CVTs - end */


/* YDir: Stroke #0 */
YDist(19,12) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YDist(0,27) /*perpendicular to the stroke*/

Smooth()
</talk>
        <assembly>/* TT glyph 586, char 0x32 (2) */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 0, 12
MIAP[R], 19, 5
MDRP[m&gt;RBl], 12
SRP0[], 0
MDRP[m&gt;RBl], 27
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="587">
      <instructions>
        <talk>/* VTTTalk Unicode 0x33 (3) */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 0 13 */
/* CVT 38 5 */
/* Min and Max */
YAnchor(0,13)	/* min, CVT */
YAnchor(38,5)	/* max, CVT */

/* CVTs - beginning */
/* CVTs - end */


/* YDir: Stroke #0 */
YDist(38,31) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YDist(0,13) /*perpendicular to the stroke*/

Smooth()
</talk>
        <assembly>/* TT glyph 587, char 0x33 (3) */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 0, 13
MIAP[R], 38, 5
MDRP[m&gt;RBl], 31
SRP0[], 0
MDRP[m&gt;RBl], 13
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="588">
      <instructions>
        <talk>/* VTTTalk glyph 588, char 0x34 (4) */
/* GUI generated Sat Jan 11 07:09:03 2020 */

/* Y direction */
YAnchor(9)
YAnchor(22,12)
YShift(22,21)
YIPAnchor(9,20,22)
YShift(20,2)
YDist(20,17)
YShift(17,13)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 588, char 0x34 (4) */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MDAP[R], 9
MIAP[R], 22, 12
SHP[1], 21
SRP2[], 9
IP[], 20
MDAP[R], 20
SHP[1], 2
MDRP[m&gt;RBl], 17
SHP[2], 13
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="589">
      <instructions>
        <talk>/* VTTTalk glyph 589, char 0x35 (5) */
/* GUI generated Sat Jan 11 07:10:35 2020 */

/* Y direction */
YAnchor(0,13)
YDist(0,13)
YAnchor(27,4)
YDist(27,29)
YInterpolate(0,21,27)
YDist(21,36)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 589, char 0x35 (5) */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 0, 13
MDRP[m&gt;RBl], 13
MIAP[R], 27, 4
MDRP[m&lt;RGr], 29
SRP2[], 0
IP[], 21
SRP0[], 21
MDRP[m&gt;RBl], 36
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="590">
      <instructions>
        <talk>/* VTTTalk Unicode 0x36 (6) */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 0 13 */
/* Min and Max */
YAnchor(0,13)	/* min, CVT */
YAnchor(9)	/* max */

/* CVTs - beginning */
/* CVTs - end */


/* YDir: Stroke #0 */
YInterpolate(9,26,0)
YAnchor(26)
YDist(26,34) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YDist(0,19) /*perpendicular to the stroke*/

Smooth()


</talk>
        <assembly>/* TT glyph 590, char 0x36 (6) */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 0, 13
MDAP[R], 9
IP[], 26
MDAP[R], 26
MDRP[m&gt;RBl], 34
SRP0[], 0
MDRP[m&gt;RBl], 19
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="591">
      <instructions>
        <talk>/* VTTTalk glyph 591, char 0x37 (7) */
/* GUI generated Sat Jan 11 07:11:55 2020 */

/* Y direction */
YAnchor(0,12)
YAnchor(14,4)
YDist(14,6)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 591, char 0x37 (7) */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 0, 12
MIAP[R], 14, 4
MDRP[m&gt;RBl], 6
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="592">
      <instructions>
        <talk>/* VTTTalk Unicode 0x38 (8) */
/* ACT generated Sat Jan 11 14:59:14 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 0 13 */
/* CVT 43 5 */
/* Min and Max */
YAnchor(0,13)	/* min, CVT */
YAnchor(43,5)	/* max, CVT */

/* CVTs - beginning */
/* CVTs - end */


/* YDir: Stroke #0 */
YDist(43,15) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YDist(0,30) /*perpendicular to the stroke*/

Smooth()
</talk>
        <assembly>/* TT glyph 592, char 0x38 (8) */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 0, 13
MIAP[R], 43, 5
MDRP[m&gt;RBl], 15
SRP0[], 0
MDRP[m&gt;RBl], 30
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="593">
      <instructions>
        <talk>/* VTTTalk Unicode 0x39 (9) */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 33 5 */
/* Min and Max */
YAnchor(0)	/* min */
YAnchor(33,5)	/* max, CVT */

/* CVTs - beginning */
/* CVTs - end */


/* YDir: Stroke #0 */
YDist(33,10) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YInterpolate(33,25,0)
YAnchor(25)
YDist(25,17) /*perpendicular to the stroke*/

Smooth()


</talk>
        <assembly>/* TT glyph 593, char 0x39 (9) */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MDAP[R], 0
MIAP[R], 33, 5
MDRP[m&gt;RBl], 10
SRP2[], 0
IP[], 25
MDAP[R], 25
MDRP[m&gt;RBl], 17
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="594">
      <instructions>
        <talk>/* VTTTalk glyph 594, char 0xffff */
/* GUI generated Sat Jan 11 07:14:28 2020 */

/* Y direction */
YAnchor(4,13)
YDist(4,21)
YAnchor(12,5)
YDist(12,31)
YInterpolate(4,0,1,3,2,12)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 594, char 0xffff */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 4, 13
MDRP[m&gt;RBl], 21
MIAP[R], 12, 5
MDRP[m&gt;RBl], 31
SRP2[], 4
SLOOP[], 4
IP[], 0, 1, 3, 2
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="595">
      <instructions>
        <talk>/* VTTTalk glyph 595, char 0xffff */
/* GUI generated Sat Jan 11 07:15:19 2020 */

/* Y direction */
YAnchor(0,13)
YDist(0,17)
YAnchor(8,5)
YDist(8,27)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 595, char 0xffff */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 0, 13
MDRP[m&gt;RBl], 17
MIAP[R], 8, 5
MDRP[m&gt;RBl], 27
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="596">
      <instructions>
        <talk>/* VTTTalk glyph 596, char 0xffff */
/* GUI generated Sat Jan 11 07:16:03 2020 */

/* Y direction */
YAnchor(8,5)
YAnchor(14,12)
YShift(14,0)
YDist(14,15)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 596, char 0xffff */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 8, 5
MIAP[R], 14, 12
SHP[1], 0
MDRP[m&gt;RBl], 15
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="597">
      <instructions>
        <talk>/* VTTTalk glyph 597, char 0xffff */
/* GUI generated Sat Jan 11 07:16:42 2020 */

/* Y direction */
YAnchor(19,5)
YDist(19,12)
YAnchor(34,12)
YDist(34,28)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 597, char 0xffff */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 19, 5
MDRP[m&gt;RBl], 12
MIAP[R], 34, 12
MDRP[m&gt;RBl], 28
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="598">
      <instructions>
        <talk>/* VTTTalk glyph 598, char 0xffff */
/* GUI generated Sat Jan 11 07:17:35 2020 */

/* Y direction */
YAnchor(0,13)
YDist(0,13)
YAnchor(39,5)
YDist(39,32)
YInterpolate(0,21,39)
YDist(21,25)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 598, char 0xffff */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 0, 13
MDRP[m&gt;RBl], 13
MIAP[R], 39, 5
MDRP[m&gt;RBl], 32
SRP2[], 0
IP[], 21
SRP0[], 21
MDRP[m&gt;RBl], 25
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="599">
      <instructions>
        <talk>/* VTTTalk glyph 599, char 0xffff */
/* GUI generated Sat Jan 11 07:19:17 2020 */

/* Y direction */
YAnchor(9)
YAnchor(22,12)
YShift(22,0)
YDist(22,23)
YInterpolate(22,20,9)
YShift(20,1)
YDist(20,14)
YShift(14,17)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 599, char 0xffff */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MDAP[R], 9
MIAP[R], 22, 12
SHP[1], 0
MDRP[m&gt;RBl], 23
SRP2[], 9
IP[], 20
SRP1[], 20
SHP[1], 1
SRP0[], 20
MDRP[m&gt;RBl], 14
SHP[2], 17
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="600">
      <instructions>
        <talk>/* VTTTalk glyph 600, char 0xffff */
/* GUI generated Sat Jan 11 07:20:27 2020 */

/* Y direction */
YAnchor(0,13)
YDist(0,13)
YAnchor(27,4)
YDist(27,29)
YInterpolate(0,21,27)
YDist(21,36)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 600, char 0xffff */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 0, 13
MDRP[m&gt;RBl], 13
MIAP[R], 27, 4
MDRP[m&lt;RGr], 29
SRP2[], 0
IP[], 21
SRP0[], 21
MDRP[m&gt;RBl], 36
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="601">
      <instructions>
        <talk>/* VTTTalk glyph 601, char 0xffff */
/* GUI generated Sat Jan 11 07:21:19 2020 */

/* Y direction */
YAnchor(0,13)
YAnchor(9)
YInterpolate(0,26,9)
YDist(26,34)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 601, char 0xffff */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 0, 13
MDAP[R], 9
IP[], 26
SRP0[], 26
MDRP[m&gt;RBl], 34
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="602">
      <instructions>
        <talk>/* VTTTalk glyph 602, char 0xffff */
/* GUI generated Sat Jan 11 07:21:49 2020 */

/* Y direction */
YAnchor(0,12)
YAnchor(14,4)
YDist(14,6)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 602, char 0xffff */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 0, 12
MIAP[R], 14, 4
MDRP[m&gt;RBl], 6
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="603">
      <instructions>
        <talk></talk>
        <assembly>/* TT glyph 603, char 0xffff */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="604">
      <instructions>
        <talk>/* VTTTalk glyph 604, char 0xffff */
/* GUI generated Sat Jan 11 07:24:50 2020 */

/* Y direction */
YAnchor(0)
YShift(0,1)
YAnchor(33,5)
YDist(33,10)
YInterpolate(0,25,33)
YDist(25,17)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 604, char 0xffff */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MDAP[R], 0
SHP[2], 1
MIAP[R], 33, 5
MDRP[m&gt;RBl], 10
SRP2[], 0
IP[], 25
SRP0[], 25
MDRP[m&gt;RBl], 17
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="605">
      <instructions>
        <talk>/* VTTTalk glyph 605, char 0xffff */
/* GUI generated Sat Jan 11 07:26:18 2020 */

/* Y direction */
YAnchor(4,13)
YDist(4,21)
YAnchor(12,5)
YDist(12,31)
YInterpolate(4,0,1,3,2,12)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 605, char 0xffff */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 4, 13
MDRP[m&gt;RBl], 21
MIAP[R], 12, 5
MDRP[m&gt;RBl], 31
SRP2[], 4
SLOOP[], 4
IP[], 0, 1, 3, 2
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="606">
      <instructions>
        <talk>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 0 19  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(0)	/* min */
YAnchor(8)	/* max */

/* YDir: Stroke #0 */
YDist(8,24) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YDist(0,16) /*perpendicular to the stroke*/

Smooth()
</talk>
        <assembly>/* TT glyph 606, char 0xffff */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 8
MDRP[m&gt;RBl], 24
SRP0[], 0
MDRP[m&gt;RBl], 16
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="607">
      <instructions>
        <talk>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 4 18  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(4)	/* min */
YAnchor(11)	/* max */

/* Contour #0 */
YShift(11,1) /* max */
YShift(4,0) /* min */

Smooth()
</talk>
        <assembly>/* TT glyph 607, char 0xffff */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MDAP[R], 4
MDAP[R], 11
SHP[1], 1
SRP1[], 4
SHP[1], 0
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="608">
      <instructions>
        <talk>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 3 18  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(3)	/* min */
YAnchor(21)	/* max */

/* YDir: Stroke #0 */
YDist(21,14) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YDist(3,31) /*perpendicular to the stroke*/

/* Extreme Min */
YShift(3,0)

Smooth()

</talk>
        <assembly>/* TT glyph 608, char 0xffff */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MDAP[R], 3
MDAP[R], 21
MDRP[m&gt;RBl], 14
SRP0[], 3
MDRP[m&lt;RGr], 31
SHP[1], 0
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="609">
      <instructions>
        <talk>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(0)	/* min */
YAnchor(41)	/* max */

/* YDir: Stroke #0 */
YDist(41,33) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YDist(0,12) /*perpendicular to the stroke*/

Smooth()

</talk>
        <assembly>/* TT glyph 609, char 0xffff */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 41
MDRP[m&gt;RBl], 33
SRP0[], 0
MDRP[m&gt;RBl], 12
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="610">
      <instructions>
        <talk>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(0)	/* min */
YAnchor(4)	/* max */

/* YDir: Stroke #0 */
YInterpolate(4,9,0)
YAnchor(9)
YDist(9,6) /*perpendicular to the stroke*/
YShift(9,2) /*along bottom edge*/
YShift(6,12) /*along top edge*/

Smooth()


</talk>
        <assembly>/* TT glyph 610, char 0xffff */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 4
IP[], 9
MDAP[R], 9
MDRP[m&gt;RBl], 6
SHP[1], 2
SHP[2], 12
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="611">
      <instructions>
        <talk>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(0)	/* min */
YAnchor(17)	/* max */

/* YDir: Stroke #0 */
YDist(17,20) /*perpendicular to the stroke*/

/* Extreme Min */
YShift(0,1)

Smooth()

</talk>
        <assembly>/* TT glyph 611, char 0xffff */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 17
MDRP[m&gt;RBl], 20
SRP1[], 0
SHP[1], 1
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="612">
      <instructions>
        <talk>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 0 19  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(0)	/* min */
YAnchor(8)	/* max */

/* YDir: Stroke #0 */
YInterpolate(8,32,0)
YAnchor(32)
YDist(32,25) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YDist(0,17) /*perpendicular to the stroke*/

Smooth()
</talk>
        <assembly>/* TT glyph 612, char 0xffff */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 8
IP[], 32
MDAP[R], 32
MDRP[m&gt;RBl], 25
SRP0[], 0
MDRP[m&gt;RBl], 17
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="613">
      <instructions>
        <talk>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(0)	/* min */
YAnchor(13)	/* max */

/* YDir: Stroke #0 */
YDist(13,4) /*perpendicular to the stroke*/

/* Extreme Max */
YShift(13,15)

/* Extreme Min */
YShift(0,1)

Smooth()

</talk>
        <assembly>/* TT glyph 613, char 0xffff */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 13
MDRP[m&gt;RBl], 4
SHP[1], 15
SRP1[], 0
SHP[1], 1
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="614">
      <instructions>
        <talk>/* VTTTalk glyph 614, char 0xffff */
/* GUI generated Mon Jan 13 20:57:23 2020 */

/* Y direction */
YAnchor(0)
YDist(0,29)
YAnchor(42)
YDist(42,14)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 614, char 0xffff */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MDAP[R], 0
MDRP[m&gt;RBl], 29
MDAP[R], 42
MDRP[m&gt;RBl], 14
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="615">
      <instructions>
        <talk>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(0)	/* min */
YAnchor(32)	/* max */

/* YDir: Stroke #0 */
YDist(32,10) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YInterpolate(32,24,0)
YAnchor(24)
YDist(24,17) /*perpendicular to the stroke*/

Smooth()
</talk>
        <assembly>/* TT glyph 615, char 0xffff */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 32
MDRP[m&gt;RBl], 10
SRP2[], 0
IP[], 24
MDAP[R], 24
MDRP[m&gt;RBl], 17
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="616">
      <instructions>
        <talk>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 4 19  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(4)	/* min */
YAnchor(12)	/* max */

/* YDir: Stroke #0 */
YDist(12,28) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YDist(4,20) /*perpendicular to the stroke*/

/* Contour #0 */
YShift(12,2) /* max */
YShift(4,0) /* min */

Smooth()

</talk>
        <assembly>/* TT glyph 616, char 0xffff */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MDAP[R], 4
MDAP[R], 12
MDRP[m&gt;RBl], 28
SRP0[], 4
MDRP[m&gt;RBl], 20
SRP1[], 12
SHP[1], 2
SRP1[], 4
SHP[1], 0
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="617">
      <instructions>
        <talk>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 0 19  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(0)	/* min */
YAnchor(8)	/* max */

/* YDir: Stroke #0 */
YDist(8,24) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YDist(0,16) /*perpendicular to the stroke*/

Smooth()
</talk>
        <assembly>/* TT glyph 617, char 0xffff */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 8
MDRP[m&gt;RBl], 24
SRP0[], 0
MDRP[m&gt;RBl], 16
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="618">
      <instructions>
        <talk>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 4 18  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(4)	/* min */
YAnchor(11)	/* max */

/* YDir: Stroke #0 */
YDist(11,10) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YDist(4,5) /*perpendicular to the stroke*/

/* Contour #0 */
YShift(11,1) /* max */
YShift(4,0) /* min */

Smooth()
</talk>
        <assembly>/* TT glyph 618, char 0xffff */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MDAP[R], 4
MDAP[R], 11
MDRP[m&gt;RBl], 10
SRP0[], 4
MDRP[m&gt;RBl], 5
SRP1[], 11
SHP[1], 1
SRP1[], 4
SHP[1], 0
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="619">
      <instructions>
        <talk>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 4 18  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(4)	/* min */
YAnchor(25)	/* max */

/* YDir: Stroke #0 */
YDist(25,16) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YDist(4,35) /*perpendicular to the stroke*/

/* Extreme Min */
YShift(4,0)

Smooth()

</talk>
        <assembly>/* TT glyph 619, char 0xffff */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MDAP[R], 4
MDAP[R], 25
MDRP[m&lt;RGr], 16
SRP0[], 4
MDRP[m&lt;RGr], 35
SHP[1], 0
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="620">
      <instructions>
        <talk>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(0)	/* min */
YAnchor(42)	/* max */

/* YDir: Stroke #0 */
YDist(42,34) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YDist(0,12) /*perpendicular to the stroke*/

Smooth()

</talk>
        <assembly>/* TT glyph 620, char 0xffff */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 42
MDRP[m&gt;RBl], 34
SRP0[], 0
MDRP[m&gt;RBl], 12
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="621">
      <instructions>
        <talk>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(0)	/* min */
YAnchor(4)	/* max */

/* YDir: Stroke #0 */
YInterpolate(4,9,0)
YAnchor(9)
YDist(9,6) /*perpendicular to the stroke*/
YShift(9,2) /*along bottom edge*/
YShift(6,12) /*along top edge*/

Smooth()


</talk>
        <assembly>/* TT glyph 621, char 0xffff */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 4
IP[], 9
MDAP[R], 9
MDRP[m&gt;RBl], 6
SHP[1], 2
SHP[2], 12
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="622">
      <instructions>
        <talk>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(0)	/* min */
YAnchor(18)	/* max */

/* YDir: Stroke #0 */
YDist(18,21) /*perpendicular to the stroke*/

Smooth()


</talk>
        <assembly>/* TT glyph 622, char 0xffff */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 18
MDRP[m&gt;RBl], 21
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="623">
      <instructions>
        <talk>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 0 19  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(0)	/* min */
YAnchor(8)	/* max */

/* YDir: Stroke #0 */
YInterpolate(8,32,0)
YAnchor(32)
YDist(32,25) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YDist(0,17) /*perpendicular to the stroke*/

Smooth()
</talk>
        <assembly>/* TT glyph 623, char 0xffff */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 8
IP[], 32
MDAP[R], 32
MDRP[m&gt;RBl], 25
SRP0[], 0
MDRP[m&gt;RBl], 17
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="624">
      <instructions>
        <talk>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(0)	/* min */
YAnchor(13)	/* max */

/* YDir: Stroke #0 */
YDist(13,4) /*perpendicular to the stroke*/

/* Extreme Max */
YShift(13,15)

Smooth()


</talk>
        <assembly>/* TT glyph 624, char 0xffff */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 13
MDRP[m&gt;RBl], 4
SHP[1], 15
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="625">
      <instructions>
        <talk>/* VTTTalk glyph 625, char 0xffff */
/* GUI generated Mon Jan 13 20:57:56 2020 */

/* Y direction */
YAnchor(0)
YDist(0,31)
YAnchor(44)
YDist(44,16)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 625, char 0xffff */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MDAP[R], 0
MDRP[m&gt;RBl], 31
MDAP[R], 44
MDRP[m&gt;RBl], 16
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="626">
      <instructions>
        <talk>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(0)	/* min */
YAnchor(32)	/* max */

/* YDir: Stroke #0 */
YDist(32,10) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YInterpolate(32,24,0)
YAnchor(24)
YDist(24,17) /*perpendicular to the stroke*/

Smooth()
</talk>
        <assembly>/* TT glyph 626, char 0xffff */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 32
MDRP[m&gt;RBl], 10
SRP2[], 0
IP[], 24
MDAP[R], 24
MDRP[m&gt;RBl], 17
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="627">
      <instructions>
        <talk>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 4 19  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(4)	/* min */
YAnchor(12)	/* max */

/* YDir: Stroke #0 */
YDist(12,28) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YDist(4,20) /*perpendicular to the stroke*/

/* Contour #0 */
YShift(12,2) /* max */
YShift(4,0) /* min */

Smooth()

</talk>
        <assembly>/* TT glyph 627, char 0xffff */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MDAP[R], 4
MDAP[R], 12
MDRP[m&gt;RBl], 28
SRP0[], 4
MDRP[m&gt;RBl], 20
SRP1[], 12
SHP[1], 2
SRP1[], 4
SHP[1], 0
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="628">
      <instructions>
        <talk>/* VTTTalk Unicode 0xb9 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(0)	/* min */
YAnchor(7)	/* max */

/* Contour #1 */
YShift(7,15) /* max */
YShift(0,13) /* min */

Smooth()

</talk>
        <assembly>/* TT glyph 628, char 0xb9 */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 7
SHP[1], 15
SHP[2], 13
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="629">
      <instructions>
        <talk>/* VTTTalk Unicode 0xb2 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(0)	/* min */
YAnchor(19)	/* max */

/* YDir: Stroke #0 */
YDist(19,12) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YDist(0,26) /*perpendicular to the stroke*/

Smooth()

</talk>
        <assembly>/* TT glyph 629, char 0xb2 */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 19
MDRP[m&gt;RBl], 12
SRP0[], 0
MDRP[m&gt;RBl], 26
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="630">
      <instructions>
        <talk>/* VTTTalk Unicode 0xb3 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(0)	/* min */
YAnchor(36)	/* max */

/* YDir: Stroke #0 */
YDist(36,29) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YDist(0,12) /*perpendicular to the stroke*/

Smooth()

</talk>
        <assembly>/* TT glyph 630, char 0xb3 */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 36
MDRP[m&gt;RBl], 29
SRP0[], 0
MDRP[m&gt;RBl], 12
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="631">
      <instructions>
        <talk>/* VTTTalk Unicode 0x2074 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 9 16 */
/* Min and Max */
YAnchor(22)	/* min */
YAnchor(9,16)	/* max, CVT */

/* CVTs - beginning */
/* CVTs - end */


/* YDir: Stroke #0 */
YInterpolate(9,20,22)
YAnchor(20)
YDist(20,17) /*perpendicular to the stroke*/
YShift(20,2) /*along bottom edge*/
YShift(17,13) /*along top edge*/

Smooth()

</talk>
        <assembly>/* TT glyph 631, char 0x2074 */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MDAP[R], 22
MIAP[R], 9, 16
SRP2[], 22
IP[], 20
MDAP[R], 20
MDRP[m&gt;RBl], 17
SHP[1], 2
SHP[2], 13
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="632">
      <instructions>
        <talk>/* VTTTalk Unicode 0x2044 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */

YAnchor(0)	/* min */
YAnchor(2)	/* max, CVT */


Smooth()


</talk>
        <assembly>/* TT glyph 632, char 0x2044 */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 2
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="633">
      <instructions>
        <talk>/* VTTTalk glyph 633, char 0xbd */
/* GUI generated Sat Jan 11 07:31:43 2020 */

/* Y direction */
YAnchor(2)
YAnchor(4,18)
YDist(4,29)
YAnchor(22)
YDist(22,15)
YAnchor(44)
YAnchor(50)
YShift(50,37)
YDist(50,53)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 633, char 0xbd */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MDAP[R], 2
MIAP[R], 4, 18
MDRP[m&gt;RBl], 29
MDAP[R], 22
MDRP[m&gt;RBl], 15
MDAP[R], 44
MDAP[R], 50
SHP[1], 37
MDRP[m&lt;RGr], 53
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="634">
      <instructions>
        <talk>/* VTTTalk glyph 634, char 0xbc */
/* GUI generated Sat Jan 11 07:34:31 2020 */

/* Y direction */
YAnchor(0)
YAnchor(2)
YAnchor(11)
YAnchor(17,18)
YShift(17,4)
YDist(17,20)
YAnchor(22)
YDist(22,25)
YShift(22,27)
YAnchor(37)
YInterpolate(22,47,37)
YShift(47,28)
YDist(47,41)
YShift(41,44)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 634, char 0xbc */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 2
MDAP[R], 11
MIAP[R], 17, 18
SHP[1], 4
MDRP[m&lt;RGr], 20
MDAP[R], 22
MDRP[m&lt;RGr], 25
SHP[1], 27
MDAP[R], 37
SRP2[], 22
IP[], 47
SRP1[], 47
SHP[1], 28
SRP0[], 47
MDRP[m&gt;RBl], 41
SHP[2], 44
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="635">
      <instructions>
        <talk>/* VTTTalk glyph 635, char 0xbe */
/* GUI generated Sat Jan 11 07:37:49 2020 */

/* Y direction */
YAnchor(0)
YAnchor(2)
YAnchor(4)
YDist(4,16)
YAnchor(40)
YDist(40,33)
YInterpolate(4,23,40)
YDist(23,27)
YAnchor(64)
YAnchor(65)
YAnchor(76,18)
YShift(76,54)
YDist(76,79)
YInterpolate(76,74,65)
YDist(74,68)
YShift(68,71)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 635, char 0xbe */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 2
MDAP[R], 4
MDRP[m&gt;RBl], 16
MDAP[R], 40
MDRP[m&gt;RBl], 33
SRP2[], 4
IP[], 23
SRP0[], 23
MDRP[m&gt;RBl], 27
MDAP[R], 64
MDAP[R], 65
MIAP[R], 76, 18
SHP[1], 54
MDRP[m&lt;RGr], 79
SRP2[], 65
IP[], 74
SRP0[], 74
MDRP[m&gt;RBl], 68
SHP[2], 71
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="636">
      <instructions>
        <talk>/* VTTTalk Unicode 0x2e (.) */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 0 19 */
/* Min and Max */
YAnchor(0,19)	/* min, CVT */
YAnchor(6)	/* max */

/* CVTs - beginning */
/* CVTs - end */


Smooth()


</talk>
        <assembly>/* TT glyph 636, char 0x2e (.) */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 0, 19
MDAP[R], 6
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="637">
      <instructions>
        <talk>/* VTTTalk Unicode 0x2c (,) */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 7 19 */
/* Min and Max */
YAnchor(0)	/* min */
YAnchor(13)	/* max */

/* CVTs - beginning */
YAnchor(7,19)  /*knot, CVT*/ 
/* CVTs - end */


Smooth()

</talk>
        <assembly>/* TT glyph 637, char 0x2c (,) */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 13
MIAP[R], 7, 19
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="638">
      <instructions>
        <talk>/* VTTTalk Unicode 0x3a (:) */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 12 19 */
/* Min and Max */
YAnchor(12,19)	/* min, CVT */
YAnchor(6)	/* max */

/* CVTs - beginning */
/* CVTs - end */


Smooth()


</talk>
        <assembly>/* TT glyph 638, char 0x3a (:) */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 12, 19
MDAP[R], 6
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="639">
      <instructions>
        <talk>/* VTTTalk Unicode 0x3b (;) */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 7 19 */
/* Min and Max */
YAnchor(0)	/* min */
YAnchor(26)	/* max */

/* CVTs - beginning */
YAnchor(7,19)  /*knot, CVT*/ 
/* CVTs - end */


Smooth()

</talk>
        <assembly>/* TT glyph 639, char 0x3b (;) */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 26
MIAP[R], 7, 19
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="640">
      <instructions>
        <talk>/* VTTTalk Unicode 0x2026 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 0 19 */
/* Min and Max */
YAnchor(0,19)	/* min, CVT */
YAnchor(6)	/* max */

/* CVTs - beginning */
/* CVTs - end */


/* Contour #1 */
YShift(6,18) /* max */
YShift(0,12) /* min */

/* Contour #2 */
YShift(6,30) /* max */
YShift(0,24) /* min */

Smooth()


</talk>
        <assembly>/* TT glyph 640, char 0x2026 */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 0, 19
MDAP[R], 6
SHP[1], 18
SHP[2], 12
SHP[1], 30
SHP[2], 24
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="641">
      <instructions>
        <talk>/* VTTTalk Unicode 0x21 (!) */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 10 17 */
/* CVT 21 19 */
/* Min and Max */
YAnchor(21,19)	/* min, CVT */
YAnchor(10)	/* max, CVT */

/* CVTs - beginning */
/* CVTs - end */


Smooth()


</talk>
        <assembly>/* TT glyph 641, char 0x21 (!) */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 21, 19
MDAP[R], 10
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="642">
      <instructions>
        <talk>/* VTTTalk Unicode 0xa1 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(0)	/* min */
YAnchor(27)	/* max */

Smooth()
</talk>
        <assembly>/* TT glyph 642, char 0xa1 */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 27
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="643">
      <instructions>
        <talk>/* VTTTalk Unicode 0x3f (?) */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 21 16 */
/* CVT 36 19 */
/* Min and Max */
YAnchor(36,19)	/* min, CVT */
YAnchor(21,16)	/* max, CVT */

/* CVTs - beginning */
/* CVTs - end */


Smooth()

</talk>
        <assembly>/* TT glyph 643, char 0x3f (?) */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 36, 19
MIAP[R], 21, 16
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="644">
      <instructions>
        <talk>/* VTTTalk Unicode 0xbf */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(0)	/* min */
YAnchor(42)	/* max */

Smooth()
</talk>
        <assembly>/* TT glyph 644, char 0xbf */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 42
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="645">
      <instructions>
        <talk>/* VTTTalk Unicode 0xb7 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(0)	/* min */
YAnchor(6)	/* max */

Smooth()

</talk>
        <assembly>/* TT glyph 645, char 0xb7 */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 6
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="646">
      <instructions>
        <talk>/* VTTTalk Unicode 0x2022 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(0)	/* min */
YAnchor(8)	/* max */

Smooth()

</talk>
        <assembly>/* TT glyph 646, char 0x2022 */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 8
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="647">
      <instructions>
        <talk>/* VTTTalk Unicode 0x2a (*) */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 8 16 */
/* Min and Max */
YAnchor(0)	/* min */
YAnchor(8,16)	/* max, CVT */

/* CVTs - beginning */
/* CVTs - end */


Smooth()


</talk>
        <assembly>/* TT glyph 647, char 0x2a (*) */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MDAP[R], 0
MIAP[R], 8, 16
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="648">
      <instructions>
        <talk>/* VTTTalk Unicode 0x23 (#) */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 4 18 */
/* Min and Max */
YAnchor(4,18)	/* min, CVT */
YAnchor(5)	/* max */

/* CVTs - beginning */
/* CVTs - end */


/* YDir: Stroke #0 */
YInterpolate(5,13,4)
YAnchor(13)
YDist(13,12) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YInterpolate(5,0,4)
YAnchor(0)
YDist(0,1) /*perpendicular to the stroke*/

/* Contour #2 */
YShift(5,9) /* max */
YShift(4,8) /* min */

Smooth()


</talk>
        <assembly>/* TT glyph 648, char 0x23 (#) */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 4, 18
MDAP[R], 5
SRP2[], 4
IP[], 13
MDAP[R], 13
MDRP[m&gt;RBl], 12
SRP1[], 5
SRP2[], 4
IP[], 0
MDAP[R], 0
MDRP[m&gt;RBl], 1
SRP1[], 5
SHP[1], 9
SRP1[], 4
SHP[1], 8
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="649">
      <instructions>
        <talk>/* VTTTalk Unicode 0x2f (/) */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(0)	/* min */
YAnchor(2)	/* max */

Smooth()

</talk>
        <assembly>/* TT glyph 649, char 0x2f (/) */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 2
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="650">
      <instructions>
        <talk>/* VTTTalk Unicode 0x5c (\) */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(0)	/* min */
YAnchor(2)	/* max */

Smooth()

</talk>
        <assembly>/* TT glyph 650, char 0x5c (\) */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 2
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="651">
      <instructions>
        <talk>/* VTTTalk Unicode 0x2016 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(0)	/* min */
YAnchor(1)	/* max */

/* Contour #1 */
YShift(1,5) /* max */
YShift(0,4) /* min */

Smooth()

</talk>
        <assembly>/* TT glyph 651, char 0x2016 */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 1
SHP[1], 5
SHP[2], 4
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="652">
      <instructions>
        <talk>/* VTTTalk Unicode 0x204a */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(0)	/* min */
YAnchor(20)	/* max */

/* YDir: Stroke #0 */
YInterpolate(20,24,0)
YAnchor(24)
YDist(24,12) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YDist(0,6) /*perpendicular to the stroke*/

Smooth()
</talk>
        <assembly>/* TT glyph 652, char 0x204a */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 20
IP[], 24
MDAP[R], 24
MDRP[m&gt;RBl], 12
SRP0[], 0
MDRP[m&gt;RBl], 6
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="653">
      <instructions>
        <talk>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 0 19  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(0)	/* min */
YAnchor(10)	/* max */

/* YDir: Stroke #0 */
YDist(10,9) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YDist(0,20) /*perpendicular to the stroke*/

Smooth()

</talk>
        <assembly>/* TT glyph 653, char 0xffff */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 10
MDRP[m&gt;RBl], 9
SRP0[], 0
MDRP[m&gt;RBl], 20
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="654">
      <instructions>
        <talk>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 0 19  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(0)	/* min */
YAnchor(10)	/* max */

/* YDir: Stroke #0 */
YDist(10,9) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YInterpolate(10,28,0)
YAnchor(28)
YDist(28,29) /*perpendicular to the stroke*/

/* YDir: Stroke #2 */
YDist(0,20) /*perpendicular to the stroke*/

Smooth()

</talk>
        <assembly>/* TT glyph 654, char 0xffff */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 10
MDRP[m&gt;RBl], 9
SRP2[], 0
IP[], 28
MDAP[R], 28
MDRP[m&gt;RBl], 29
SRP0[], 0
MDRP[m&gt;RBl], 20
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="655">
      <instructions>
        <talk>/* VTTTalk Unicode 0x28 (() */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(0)	/* min */
YAnchor(8)	/* max */

Smooth()

</talk>
        <assembly>/* TT glyph 655, char 0x28 (() */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 8
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="656">
      <instructions>
        <talk>/* VTTTalk Unicode 0x29 ()) */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(0)	/* min */
YAnchor(8)	/* max */

Smooth()

</talk>
        <assembly>/* TT glyph 656, char 0x29 ()) */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 8
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="657">
      <instructions>
        <talk>/* VTTTalk Unicode 0x7b ({) */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(0)	/* min */
YAnchor(18)	/* max */

Smooth()
</talk>
        <assembly>/* TT glyph 657, char 0x7b ({) */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 18
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="658">
      <instructions>
        <talk>/* VTTTalk Unicode 0x7d (}) */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(0)	/* min */
YAnchor(25)	/* max */

Smooth()
</talk>
        <assembly>/* TT glyph 658, char 0x7d (}) */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 25
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="659">
      <instructions>
        <talk>/* VTTTalk Unicode 0x5b ([) */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(0)	/* min */
YAnchor(1)	/* max */

/* YDir: Stroke #0 */
YDist(1,4) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YDist(0,5) /*perpendicular to the stroke*/

Smooth()

</talk>
        <assembly>/* TT glyph 659, char 0x5b ([) */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 1
MDRP[m&gt;RBl], 4
SRP0[], 0
MDRP[m&gt;RBl], 5
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="660">
      <instructions>
        <talk>/* VTTTalk Unicode 0x5d (]) */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(0)	/* min */
YAnchor(5)	/* max */

/* YDir: Stroke #0 */
YDist(5,4) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YDist(0,1) /*perpendicular to the stroke*/

Smooth()

</talk>
        <assembly>/* TT glyph 660, char 0x5d (]) */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 5
MDRP[m&gt;RBl], 4
SRP0[], 0
MDRP[m&gt;RBl], 1
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="661">
      <instructions>
        <talk>/* VTTTalk Unicode 0x2329 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(0)	/* min */
YAnchor(2)	/* max */

Smooth()

</talk>
        <assembly>/* TT glyph 661, char 0x2329 */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 2
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="662">
      <instructions>
        <talk>/* VTTTalk Unicode 0x232a */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(0)	/* min */
YAnchor(2)	/* max */

Smooth()

</talk>
        <assembly>/* TT glyph 662, char 0x232a */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 2
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="663">
      <instructions>
        <talk>/* VTTTalk Unicode 0x2d (-) */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(0)	/* min */
YLink(0,1,88)

/* YDir: Stroke #0 */

Smooth()

</talk>
        <assembly>/* TT glyph 663, char 0x2d (-) */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MDAP[R], 0
MIRP[m&gt;RBl], 1, 88
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="664">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xad */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 663, 0, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="665">
      <instructions>
        <talk>/* VTTTalk Unicode 0x2013 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(0)	/* min */
YLink(0,1,88)

/* YDir: Stroke #0 */

Smooth()

</talk>
        <assembly>/* TT glyph 665, char 0x2013 */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MDAP[R], 0
MIRP[m&gt;RBl], 1, 88
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="666">
      <instructions>
        <talk>/* VTTTalk Unicode 0x2014 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(0)	/* min */
YLink(0,1,88)

/* YDir: Stroke #0 */

Smooth()

</talk>
        <assembly>/* TT glyph 666, char 0x2014 */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MDAP[R], 0
MIRP[m&gt;RBl], 1, 88
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="667">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x2012 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

OFFSET[R], 665, 0, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="668">
      <instructions>
        <talk>/* VTTTalk glyph 668, char 0x5f (_) */
/* GUI generated Sun Jan 12 06:22:47 2020 */

/* Y direction */
YAnchor(1)
YDist(1,0)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 668, char 0x5f (_) */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MDAP[R], 1
MDRP[m&gt;RBl], 0
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="669">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x2017 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 668, 0, 0
USEMYMETRICS[]
OFFSET[R], 668, 0, -229
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="670">
      <instructions>
        <talk>/* VTTTalk glyph 670, char 0x2010 */
/* GUI generated Sun Jan 12 06:23:36 2020 */

/* Y direction */
YAnchor(1)
YLink(1,0,88)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 670, char 0x2010 */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MDAP[R], 1
MIRP[m&gt;RBl], 0, 88
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="671">
      <instructions>
        <talk>/* VTTTalk glyph 671, char 0x2011 */
/* GUI generated Sun Jan 12 06:23:46 2020 */

/* Y direction */
YAnchor(1)
YLink(1,0,88)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 671, char 0x2011 */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MDAP[R], 1
MIRP[m&gt;RBl], 0, 88
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="672">
      <instructions>
        <talk>/* VTTTalk glyph 672, char 0x2015 */
/* GUI generated Sun Jan 12 06:23:53 2020 */

/* Y direction */
YAnchor(1)
YLink(1,0,88)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 672, char 0x2015 */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MDAP[R], 1
MIRP[m&gt;RBl], 0, 88
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="673">
      <instructions>
        <talk>/* VTTTalk glyph 673, char 0xffff */
/* GUI generated Mon Jan 13 06:23:21 2020 */

/* Y direction */
YAnchor(1)
YLink(1,0,88)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 673, char 0xffff */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MDAP[R], 1
MIRP[m&gt;RBl], 0, 88
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="674">
      <instructions>
        <talk>/* VTTTalk Unicode 0x201a */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 7 19 */
/* Min and Max */
YAnchor(0)	/* min */
YAnchor(14)	/* max */

/* CVTs - beginning */
YAnchor(7,19)  /*knot, CVT*/ 
/* CVTs - end */


Smooth()

</talk>
        <assembly>/* TT glyph 674, char 0x201a */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 14
MIAP[R], 7, 19
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="675">
      <instructions>
        <talk>/* VTTTalk Unicode 0x201e */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 7 19 */
/* Min and Max */
YAnchor(0)	/* min */
YAnchor(14)	/* max */

/* CVTs - beginning */
YAnchor(7,19)  /*knot, CVT*/ 
/* CVTs - end */


/* Contour #1 */
YShift(14,35) /* max */
YShift(0,21) /* min */

Smooth()


</talk>
        <assembly>/* TT glyph 675, char 0x201e */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 14
MIAP[R], 7, 19
SRP1[], 14
SHP[1], 35
SHP[2], 21
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="676">
      <instructions>
        <talk>/* VTTTalk Unicode 0x201c */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 7 17 */
/* Min and Max */
YAnchor(0)	/* min */
YAnchor(7,17)	/* max, CVT */

/* CVTs - beginning */
/* CVTs - end */


/* Contour #1 */
YShift(7,28) /* max */
YShift(0,21) /* min */

Smooth()


</talk>
        <assembly>/* TT glyph 676, char 0x201c */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MDAP[R], 0
MIAP[R], 7, 17
SHP[1], 28
SHP[2], 21
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="677">
      <instructions>
        <talk>/* VTTTalk Unicode 0x201d */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 14 17 */
/* Min and Max */
YAnchor(0)	/* min */
YAnchor(14,17)	/* max, CVT */

/* CVTs - beginning */
/* CVTs - end */


/* Contour #1 */
YShift(14,35) /* max */
YShift(0,21) /* min */

Smooth()

</talk>
        <assembly>/* TT glyph 677, char 0x201d */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MDAP[R], 0
MIAP[R], 14, 17
SHP[1], 35
SHP[2], 21
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="678">
      <instructions>
        <talk>/* VTTTalk Unicode 0x2018 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 7 17 */
/* Min and Max */
YAnchor(0)	/* min */
YAnchor(7,17)	/* max, CVT */

/* CVTs - beginning */
/* CVTs - end */


Smooth()


</talk>
        <assembly>/* TT glyph 678, char 0x2018 */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MDAP[R], 0
MIAP[R], 7, 17
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="679">
      <instructions>
        <talk>/* VTTTalk Unicode 0x2019 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 14 17 */
/* Min and Max */
YAnchor(0)	/* min */
YAnchor(14,17)	/* max, CVT */

/* CVTs - beginning */
/* CVTs - end */


Smooth()


</talk>
        <assembly>/* TT glyph 679, char 0x2019 */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MDAP[R], 0
MIAP[R], 14, 17
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="680">
      <instructions>
        <talk>/* VTTTalk Unicode 0x201b */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 7 17 */
/* Min and Max */
YAnchor(0)	/* min */
YAnchor(7,17)	/* max, CVT */

/* CVTs - beginning */
/* CVTs - end */


Smooth()


</talk>
        <assembly>/* TT glyph 680, char 0x201b */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MDAP[R], 0
MIAP[R], 7, 17
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="681">
      <instructions>
        <talk>/* VTTTalk Unicode 0x201f */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 7 17  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(0)	/* min */
YAnchor(7)	/* max */

/* Contour #1 */
YShift(7,28) /* max */
YShift(0,21) /* min */

Smooth()
</talk>
        <assembly>/* TT glyph 681, char 0x201f */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 7
SHP[1], 28
SHP[2], 21
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="682">
      <instructions>
        <talk>/* VTTTalk Unicode 0xab */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(0)	/* min */
YAnchor(3)	/* max */

/* Contour #1 */
YShift(3,11) /* max */
YShift(0,8) /* min */

Smooth()
</talk>
        <assembly>/* TT glyph 682, char 0xab */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 3
SHP[1], 11
SHP[2], 8
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="683">
      <instructions>
        <talk>/* VTTTalk Unicode 0xbb */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(0)	/* min */
YAnchor(5)	/* max */

/* Contour #1 */
YShift(5,13) /* max */
YShift(0,8) /* min */

Smooth()
</talk>
        <assembly>/* TT glyph 683, char 0xbb */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 5
SHP[1], 13
SHP[2], 8
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="684">
      <instructions>
        <talk>/* VTTTalk Unicode 0x2039 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(0)	/* min */
YAnchor(3)	/* max */

Smooth()

</talk>
        <assembly>/* TT glyph 684, char 0x2039 */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 3
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="685">
      <instructions>
        <talk>/* VTTTalk Unicode 0x203a */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(0)	/* min */
YAnchor(5)	/* max */

Smooth()

</talk>
        <assembly>/* TT glyph 685, char 0x203a */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 5
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="686">
      <instructions>
        <talk>/* VTTTalk Unicode 0x22 (") */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(0)	/* min */
YAnchor(8)	/* max */

/* Contour #1 */
YShift(8,25) /* max */
YShift(0,17) /* min */

Smooth()

</talk>
        <assembly>/* TT glyph 686, char 0x22 (") */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 8
SHP[1], 25
SHP[2], 17
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="687">
      <instructions>
        <talk>/* VTTTalk Unicode 0x27 (') */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(0)	/* min */
YAnchor(8)	/* max */

Smooth()

</talk>
        <assembly>/* TT glyph 687, char 0x27 (') */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 8
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="688">
      <instructions>
        <talk>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(0)	/* min */
YAnchor(8)	/* max */

Smooth()

</talk>
        <assembly>/* TT glyph 688, char 0xffff */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 8
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="689">
      <instructions>
        <talk>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(0)	/* min */
YAnchor(8)	/* max */

Smooth()

</talk>
        <assembly>/* TT glyph 689, char 0xffff */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 8
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="690">
      <instructions>
        <talk>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 21 19  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(21)	/* min */
YAnchor(10)	/* max */

Smooth()

</talk>
        <assembly>/* TT glyph 690, char 0xffff */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MDAP[R], 21
MDAP[R], 10
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="691">
      <instructions>
        <talk>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(0)	/* min */
YAnchor(28)	/* max */

Smooth()
</talk>
        <assembly>/* TT glyph 691, char 0xffff */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 28
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="692">
      <instructions>
        <talk>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 34 19  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(34)	/* min */
YAnchor(20)	/* max */

Smooth()

</talk>
        <assembly>/* TT glyph 692, char 0xffff */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MDAP[R], 34
MDAP[R], 20
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="693">
      <instructions>
        <talk>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(0)	/* min */
YAnchor(40)	/* max */

Smooth()
</talk>
        <assembly>/* TT glyph 693, char 0xffff */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 40
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="694">
      <instructions>
        <talk>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 0 18  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(0)	/* min */
YAnchor(9)	/* max */

/* YDir: Stroke #0 */
YInterpolate(9,11,0)
YAnchor(11)
YDist(11,31) /*perpendicular to the stroke*/
YShift(31,6) /*along bottom edge*/
YShift(31,18) /*along bottom edge*/
YShift(11,7) /*along top edge*/
YShift(11,15) /*along top edge*/

/* YDir: Stroke #1 */
YInterpolate(9,26,0)
YAnchor(26)
YDist(26,28) /*perpendicular to the stroke*/
YShift(26,2) /*along bottom edge*/
YShift(26,22) /*along bottom edge*/
YShift(28,3) /*along top edge*/
YShift(28,19) /*along top edge*/

/* Extreme Max */
YShift(9,14)

/* Extreme Min */
YShift(0,24)

Smooth()
</talk>
        <assembly>/* TT glyph 694, char 0xffff */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 9
IP[], 11
MDAP[R], 11
MDRP[m&gt;RBl], 31
SHP[2], 6
SHP[2], 18
SHP[1], 7
SHP[1], 15
SRP1[], 9
SRP2[], 0
IP[], 26
MDAP[R], 26
MDRP[m&gt;RBl], 28
SHP[1], 2
SHP[1], 22
SHP[2], 3
SHP[2], 19
SRP1[], 9
SHP[1], 14
SRP1[], 0
SHP[1], 24
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="695">
      <instructions>
        <talk>/* VTTTalk Unicode 0x27e8 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(0)	/* min */
YAnchor(2)	/* max */

Smooth()

</talk>
        <assembly>/* TT glyph 695, char 0x27e8 */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 2
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="696">
      <instructions>
        <talk>/* VTTTalk Unicode 0x27e9 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(0)	/* min */
YAnchor(2)	/* max */

Smooth()

</talk>
        <assembly>/* TT glyph 696, char 0x27e9 */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 2
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="697">
      <instructions>
        <talk>/* VTTTalk Unicode 0x2e4a */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 12 19  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(12)	/* min */
YAnchor(14)	/* max */

/* Contour #0 */
YShift(14,6) /* max */
YShift(12,0) /* min */

Smooth()

</talk>
        <assembly>/* TT glyph 697, char 0x2e4a */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MDAP[R], 12
MDAP[R], 14
SHP[1], 6
SRP1[], 12
SHP[1], 0
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="698">
      <instructions>
        <talk>/* VTTTalk Unicode 0x2e4c */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 0 19  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(0)	/* min */
YAnchor(20)	/* max */

Smooth()

</talk>
        <assembly>/* TT glyph 698, char 0x2e4c */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 20
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="699">
      <instructions>
        <talk>/* VTTTalk glyph 699, char 0x2e4d */
/* GUI generated Sat Jan 11 15:43:54 2020 */

/* Y direction */
YAnchor(0,19)
YAnchor(1)
YDist(1,4)
YShift(1,8)
YInterpolate(0,6,1)

/* X direction */

Smooth()


</talk>
        <assembly>/* TT glyph 699, char 0x2e4d */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 0, 19
MDAP[R], 1
MDRP[m&gt;RBl], 4
SHP[1], 8
SRP2[], 0
IP[], 6
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="700">
      <instructions>
        <talk>/* VTTTalk Unicode 0x2e4e */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 20 19  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(20)	/* min */
YAnchor(15)	/* max */

/* YDir: Stroke #0 */
YInterpolate(15,11,20)
YAnchor(11)
YDist(11,0) /*perpendicular to the stroke*/

Smooth()

</talk>
        <assembly>/* TT glyph 700, char 0x2e4e */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MDAP[R], 20
MDAP[R], 15
SRP2[], 20
IP[], 11
MDAP[R], 11
MDRP[m&gt;RBl], 0
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="701">
      <instructions>
        <talk>/* VTTTalk Unicode 0x20 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/*Auto-Hinting Light is not applied: Empty glyph or glyph with one point*/
</talk>
        <assembly>/* TT glyph 701, char 0x20 */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="702">
      <instructions>
        <talk>/* VTTTalk Unicode 0xa0 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/*Auto-Hinting Light is not applied: Empty glyph or glyph with one point*/
</talk>
        <assembly>/* TT glyph 702, char 0xa0 */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="703">
      <instructions>
        <talk>/* VTTTalk Unicode 0x2000 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/*Auto-Hinting Light is not applied: Empty glyph or glyph with one point*/
</talk>
        <assembly>/* TT glyph 703, char 0x2000 */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="704">
      <instructions>
        <talk>/* VTTTalk Unicode 0x2001 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/*Auto-Hinting Light is not applied: Empty glyph or glyph with one point*/
</talk>
        <assembly>/* TT glyph 704, char 0x2001 */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="705">
      <instructions>
        <talk>/* VTTTalk Unicode 0x2002 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/*Auto-Hinting Light is not applied: Empty glyph or glyph with one point*/
</talk>
        <assembly>/* TT glyph 705, char 0x2002 */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="706">
      <instructions>
        <talk>/* VTTTalk Unicode 0x2003 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/*Auto-Hinting Light is not applied: Empty glyph or glyph with one point*/
</talk>
        <assembly>/* TT glyph 706, char 0x2003 */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="707">
      <instructions>
        <talk>/* VTTTalk Unicode 0x2004 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/*Auto-Hinting Light is not applied: Empty glyph or glyph with one point*/
</talk>
        <assembly>/* TT glyph 707, char 0x2004 */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="708">
      <instructions>
        <talk>/* VTTTalk Unicode 0x2005 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/*Auto-Hinting Light is not applied: Empty glyph or glyph with one point*/
</talk>
        <assembly>/* TT glyph 708, char 0x2005 */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="709">
      <instructions>
        <talk>/* VTTTalk Unicode 0x2006 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/*Auto-Hinting Light is not applied: Empty glyph or glyph with one point*/
</talk>
        <assembly>/* TT glyph 709, char 0x2006 */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="710">
      <instructions>
        <talk>/* VTTTalk Unicode 0x2007 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/*Auto-Hinting Light is not applied: Empty glyph or glyph with one point*/
</talk>
        <assembly>/* TT glyph 710, char 0x2007 */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="711">
      <instructions>
        <talk>/* VTTTalk Unicode 0x2008 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/*Auto-Hinting Light is not applied: Empty glyph or glyph with one point*/
</talk>
        <assembly>/* TT glyph 711, char 0x2008 */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="712">
      <instructions>
        <talk>/* VTTTalk Unicode 0x2009 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/*Auto-Hinting Light is not applied: Empty glyph or glyph with one point*/
</talk>
        <assembly>/* TT glyph 712, char 0x2009 */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="713">
      <instructions>
        <talk>/* VTTTalk Unicode 0x200a */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/*Auto-Hinting Light is not applied: Empty glyph or glyph with one point*/
</talk>
        <assembly>/* TT glyph 713, char 0x200a */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="714">
      <instructions>
        <talk>/* VTTTalk Unicode 0x200b */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/*Auto-Hinting Light is not applied: Empty glyph or glyph with one point*/
</talk>
        <assembly>/* TT glyph 714, char 0x200b */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="715">
      <instructions>
        <talk>/* VTTTalk Unicode 0x202f */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/*Auto-Hinting Light is not applied: Empty glyph or glyph with one point*/
</talk>
        <assembly>/* TT glyph 715, char 0x202f */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="716">
      <instructions>
        <talk>/* VTTTalk Unicode 0x200c */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/*Auto-Hinting Light is not applied: Empty glyph or glyph with one point*/
</talk>
        <assembly>/* TT glyph 716, char 0x200c */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="717">
      <instructions>
        <talk>/* VTTTalk Unicode 0xd */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/*Auto-Hinting Light is not applied: Empty glyph or glyph with one point*/

</talk>
        <assembly>/* TT glyph 717, char 0xd */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="718">
      <instructions>
        <talk>/* VTTTalk Unicode 0x20ac */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 0 13 */
/* Min and Max */
YAnchor(0,13)	/* min, CVT */
YAnchor(10)	/* max */

/* CVTs - beginning */
/* CVTs - end */


/* YDir: Stroke #0 */
YDist(10,26) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YInterpolate(10,49,0)
YAnchor(49)
YDist(49,48) /*perpendicular to the stroke*/

/* YDir: Stroke #2 */
YInterpolate(10,44,0)
YAnchor(44)
YDist(44,45) /*perpendicular to the stroke*/

/* YDir: Stroke #3 */
YDist(0,34) /*perpendicular to the stroke*/

Smooth()


</talk>
        <assembly>/* TT glyph 718, char 0x20ac */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 0, 13
MDAP[R], 10
MDRP[m&gt;RBl], 26
SRP2[], 0
IP[], 49
MDAP[R], 49
MDRP[m&gt;RBl], 48
SRP1[], 10
SRP2[], 0
IP[], 44
MDAP[R], 44
MDRP[m&gt;RBl], 45
SRP0[], 0
MDRP[m&gt;RBl], 34
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="719">
      <instructions>
        <talk>/* VTTTalk Unicode 0xa2 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(38)	/* min */
YAnchor(40)	/* max */

/* Contour #0 */
YShift(40,8) /* max */
YShift(38,0) /* min */

Smooth()

</talk>
        <assembly>/* TT glyph 719, char 0xa2 */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MDAP[R], 38
MDAP[R], 40
SHP[1], 8
SRP1[], 38
SHP[1], 0
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="720">
      <instructions>
        <talk>/* VTTTalk Unicode 0xa4 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(0)	/* min */
YAnchor(17)	/* max */

/* YDir: Stroke #0 */
YDist(17,42) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YDist(0,34) /*perpendicular to the stroke*/

/* Extreme Max */
YShift(17,20)

/* Extreme Max */
YShift(17,13)

/* Extreme Min */
YShift(0,30)

/* Extreme Min */
YShift(0,3)

Smooth()
</talk>
        <assembly>/* TT glyph 720, char 0xa4 */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 17
MDRP[m&gt;RBl], 42
SRP0[], 0
MDRP[m&gt;RBl], 34
SRP1[], 17
SHP[1], 20
SHP[1], 13
SRP1[], 0
SHP[1], 30
SHP[1], 3
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="721">
      <instructions>
        <talk>/* VTTTalk Unicode 0x24 ($) */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(0)	/* min */
YAnchor(20)	/* max */

/* YDir: Stroke #0 */
YDist(0,45) /*perpendicular to the stroke*/

/* Contour #2 */
YShift(20,53) /* max */
YShift(0,52) /* min */

Smooth()


</talk>
        <assembly>/* TT glyph 721, char 0x24 ($) */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 20
SRP0[], 0
MDRP[m&gt;RBl], 45
SRP1[], 20
SHP[1], 53
SRP1[], 0
SHP[1], 52
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="722">
      <instructions>
        <talk>/* VTTTalk Unicode 0xa3 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 3 12 */
/* Min and Max */
YAnchor(3,12)	/* min, CVT */
YAnchor(28)	/* max */

/* CVTs - beginning */
/* CVTs - end */


/* YDir: Stroke #0 */
YDist(28,47) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YInterpolate(28,73,3)
YAnchor(73)
YDist(73,74) /*perpendicular to the stroke*/

Smooth()

</talk>
        <assembly>/* TT glyph 722, char 0xa3 */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 3, 12
MDAP[R], 28
MDRP[m&gt;RBl], 47
SRP2[], 3
IP[], 73
MDAP[R], 73
MDRP[m&gt;RBl], 74
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="723">
      <instructions>
        <talk>/* VTTTalk glyph 723, char 0xa5 */
/* GUI generated Sun Jan 12 06:30:10 2020 */

/* Y direction */
YAnchor(12,12)
YShift(12,11)
YLink(12,13,65)
YAnchor(24,2)
YShift(24,3)
YShift(24,7)
YShift(24,19)
YLink(24,23,65)
YShift(23,18)
YIPAnchor(24,32,27,12)
YShift(32,36)
YDist(32,31)
YShift(31,35)
YDist(27,28)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 723, char 0xa5 */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 12, 12
SHP[1], 11
MIRP[m&gt;RBl], 13, 65
MIAP[R], 24, 2
SHP[1], 3
SHP[1], 7
SHP[1], 19
MIRP[m&gt;RBl], 23, 65
SHP[2], 18
SRP2[], 12
IP[], 32
IP[], 27
MDAP[R], 32
MDAP[R], 27
SRP1[], 32
SHP[1], 36
SRP0[], 32
MDRP[m&gt;RBl], 31
SHP[2], 35
SRP0[], 27
MDRP[m&gt;RBl], 28
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="724">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 721, 0, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="725">
      <instructions>
        <talk>/* VTTTalk glyph 725, char 0xffff */
/* GUI generated Sun Jan 12 06:35:22 2020 */

/* Y direction */
YAnchor(54)
YAnchor(56)
YIPAnchor(56,24,0,54)
YDist(24,40)
YDist(0,10)

/* X direction */

Smooth()
YDelta(16,-1/4@10..13)
YDelta(16,-1/8@14..15)
YDelta(48,1/4@10..13)
YDelta(48,1/8@14..15)

</talk>
        <assembly>/* TT glyph 725, char 0xffff */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MDAP[R], 54
MDAP[R], 56
SRP2[], 54
IP[], 24
IP[], 0
MDAP[R], 24
MDAP[R], 0
SRP0[], 24
MDRP[m&gt;RBl], 40
SRP0[], 0
MDRP[m&gt;RBl], 10
IUP[Y]
IUP[X]
CALL[], 16, -16, 10, 13, 72
DLTP1[(16 @5 -1)(16 @6 -1)]
CALL[], 48, 16, 10, 13, 72
DLTP1[(48 @5 1)(48 @6 1)]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="726">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 725, 0, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="727">
      <instructions>
        <talk>/* VTTTalk Unicode 0x2215 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(0)	/* min */
YAnchor(2)	/* max */

Smooth()

</talk>
        <assembly>/* TT glyph 727, char 0x2215 */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 2
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="728">
      <instructions>
        <talk>/* VTTTalk Unicode 0x2b (+) */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 11 18 */
/* Min and Max */
YAnchor(11,18)	/* min, CVT */
YAnchor(5)	/* max */

/* CVTs - beginning */
/* CVTs - end */


/* YDir: Stroke #0 */
YInterpolate(5,2,11)
YAnchor(2)
YDist(2,3) /*perpendicular to the stroke*/
YShift(2,10) /*along bottom edge*/
YShift(3,7) /*along top edge*/

Smooth()
</talk>
        <assembly>/* TT glyph 728, char 0x2b (+) */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 11, 18
MDAP[R], 5
SRP2[], 11
IP[], 2
MDAP[R], 2
MDRP[m&gt;RBl], 3
SHP[1], 10
SHP[2], 7
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="729">
      <instructions>
        <talk>/* VTTTalk glyph 729, char 0x2212 */
/* GUI generated Mon Jan 13 06:24:54 2020 */

/* Y direction */
YAnchor(1)
YLink(1,0,88)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 729, char 0x2212 */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MDAP[R], 1
MIRP[m&gt;RBl], 0, 88
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="730">
      <instructions>
        <talk>/* VTTTalk Unicode 0xd7 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 0 18 */
/* Min and Max */
YAnchor(0,18)	/* min, CVT */
YAnchor(4)	/* max */

/* CVTs - beginning */
/* CVTs - end */


/* Extreme Max */
YShift(4,6)

/* Extreme Min */
YShift(0,10)

Smooth()

</talk>
        <assembly>/* TT glyph 730, char 0xd7 */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 0, 18
MDAP[R], 4
SHP[1], 6
SHP[2], 10
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="731">
      <instructions>
        <talk>/* VTTTalk glyph 731, char 0xf7 */
/* GUI generated Mon Jan 13 06:25:29 2020 */

/* Y direction */
YAnchor(4)
YAnchor(22)
YIPAnchor(22,0,4)
YLink(0,1,88)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 731, char 0xf7 */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MDAP[R], 4
MDAP[R], 22
SRP2[], 4
IP[], 0
MDAP[R], 0
MIRP[m&gt;RBl], 1, 88
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="732">
      <instructions>
        <talk>/* VTTTalk glyph 732, char 0x3d (=) */
/* GUI generated Mon Jan 13 06:25:17 2020 */

/* Y direction */
YAnchor(1)
YLink(1,0,88)
YAnchor(4)
YLink(4,5,88)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 732, char 0x3d (=) */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MDAP[R], 1
MIRP[m&gt;RBl], 0, 88
MDAP[R], 4
MIRP[m&gt;RBl], 5, 88
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="733">
      <instructions>
        <talk>/* VTTTalk Unicode 0x3e (&gt;) */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 0 18 */
/* Min and Max */
YAnchor(0,18)	/* min, CVT */
YAnchor(4)	/* max */

/* CVTs - beginning */
/* CVTs - end */


Smooth()


</talk>
        <assembly>/* TT glyph 733, char 0x3e (&gt;) */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 0, 18
MDAP[R], 4
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="734">
      <instructions>
        <talk>/* VTTTalk Unicode 0x3c (&lt;) */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 0 18 */
/* Min and Max */
YAnchor(0,18)	/* min, CVT */
YAnchor(3)	/* max */

/* CVTs - beginning */
/* CVTs - end */


Smooth()


</talk>
        <assembly>/* TT glyph 734, char 0x3c (&lt;) */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 0, 18
MDAP[R], 3
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="735">
      <instructions>
        <talk>/* VTTTalk Unicode 0xb1 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 12 18 */
/* Min and Max */
YAnchor(12,18)	/* min, CVT */
YAnchor(5)	/* max */

/* CVTs - beginning */
/* CVTs - end */


/* YDir: Stroke #0 */
YInterpolate(5,3,12)
YAnchor(3)
YDist(3,2) /*perpendicular to the stroke*/
YShift(2,10) /*along bottom edge*/
YShift(3,7) /*along top edge*/

/* YDir: Stroke #1 */
YDist(12,13) /*perpendicular to the stroke*/

Smooth()


</talk>
        <assembly>/* TT glyph 735, char 0xb1 */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 12, 18
MDAP[R], 5
SRP2[], 12
IP[], 3
MDAP[R], 3
MDRP[m&gt;RBl], 2
SHP[2], 10
SHP[1], 7
SRP0[], 12
MDRP[m&gt;RBl], 13
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="736">
      <instructions>
        <talk>/* VTTTalk Unicode 0x7e (~) */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(0)	/* min */
YAnchor(18)	/* max */

/* YDir: Stroke #0 */
YInterpolate(18,4,0)
YAnchor(4)
YDist(4,11) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YDist(0,15) /*perpendicular to the stroke*/

/* Extreme Min */
YShift(0,6)

Smooth()

</talk>
        <assembly>/* TT glyph 736, char 0x7e (~) */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 18
IP[], 4
MDAP[R], 4
MDRP[m&gt;RBl], 11
SRP0[], 0
MDRP[m&gt;RBl], 15
SHP[1], 6
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="737">
      <instructions>
        <talk>/* VTTTalk Unicode 0xac */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 5 18 */
/* Min and Max */
YAnchor(5,18)	/* min, CVT */
YAnchor(3)	/* max */

/* CVTs - beginning */
/* CVTs - end */


/* YDir: Stroke #0 */
YDist(3,2) /*perpendicular to the stroke*/

Smooth()
</talk>
        <assembly>/* TT glyph 737, char 0xac */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 5, 18
MDAP[R], 3
MDRP[m&gt;RBl], 2
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="738">
      <instructions>
        <talk>/* VTTTalk Unicode 0x5e (^) */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 1 16 */
/* Min and Max */
YAnchor(0)	/* min */
YAnchor(1,16)	/* max, CVT */

/* CVTs - beginning */
/* CVTs - end */


/* Extreme Min */
YShift(0,4)

Smooth()

</talk>
        <assembly>/* TT glyph 738, char 0x5e (^) */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MDAP[R], 0
MIAP[R], 1, 16
SHP[2], 4
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="739">
      <instructions>
        <talk>/* VTTTalk Unicode 0xb5 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 22 19 */
/* Min and Max */
YAnchor(0)	/* min */
YAnchor(29)	/* max */

/* CVTs - beginning */
YAnchor(22,19)  /*knot, CVT*/ 
/* CVTs - end */


/* YDir: Stroke #0 */
YDist(22,37) /*perpendicular to the stroke*/

/* Contour #2 */
YShift(29,51) /* max */
YShift(0,46) /* min */

/* Extreme Max */
YShift(29,26)

/* Extreme Max */
YShift(29,48)

Smooth()
</talk>
        <assembly>/* TT glyph 739, char 0xb5 */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 29
MIAP[R], 22, 19
MDRP[m&gt;RBl], 37
SRP1[], 29
SHP[1], 51
SRP1[], 0
SHP[1], 46
SRP1[], 29
SHP[1], 26
SHP[1], 48
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="740">
      <instructions>
        <talk>/* VTTTalk Unicode 0x25 (%) */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 8 17 */
/* CVT 36 16 */
/* CVT 37 19 */
/* Min and Max */
YAnchor(37,19)	/* min, CVT */
YAnchor(8,17)	/* max, CVT */

/* CVTs - beginning */
YAnchor(36,16)  /*knot, CVT*/ 
/* CVTs - end */


/* YDir: Stroke #0 */
YDist(8,24) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YInterpolate(8,45,37)
YAnchor(45)
YDist(45,61) /*perpendicular to the stroke*/

/* YDir: Stroke #2 */
YInterpolate(8,0,37)
YAnchor(0)
YDist(0,16) /*perpendicular to the stroke*/

/* YDir: Stroke #3 */
YDist(37,53) /*perpendicular to the stroke*/

/* Extreme Max */
YShift(8,35)

Smooth()


</talk>
        <assembly>/* TT glyph 740, char 0x25 (%) */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 37, 19
MIAP[R], 8, 17
MIAP[R], 36, 16
SRP0[], 8
MDRP[m&gt;RBl], 24
SRP2[], 37
IP[], 45
MDAP[R], 45
MDRP[m&gt;RBl], 61
SRP1[], 8
SRP2[], 37
IP[], 0
MDAP[R], 0
MDRP[m&gt;RBl], 16
SRP0[], 37
MDRP[m&gt;RBl], 53
SRP1[], 8
SHP[1], 35
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="741">
      <instructions>
        <talk>/* VTTTalk glyph 741, char 0x2234 */
/* GUI generated Sun Jan 12 06:40:40 2020 */

/* Y direction */
YAnchor(12)
YShift(12,24)
YDist(24,30)
YShift(30,18)
YDist(30,0)
YDist(0,6)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 741, char 0x2234 */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MDAP[R], 12
SHP[1], 24
SRP0[], 24
MDRP[M&gt;RBl], 30
SHP[2], 18
MDRP[M&lt;RWh], 0
MDRP[m&gt;RBl], 6
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="742">
      <instructions>
        <talk>/* VTTTalk Unicode 0x25cc */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 24 18  DISABLED for a NON-LATIN glyph */
/* CVT 60 19  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(60)	/* min */
YAnchor(162)	/* max */

/* Contour #0 */
YShift(162,6) /* max */
YShift(60,0) /* min */

/* Contour #1 */
YShift(162,18) /* max */
YShift(60,12) /* min */

/* Contour #2 */
YShift(162,30) /* max */
YShift(60,24) /* min */

/* Contour #3 */
YShift(162,42) /* max */
YShift(60,36) /* min */

/* Contour #4 */
YShift(162,54) /* max */
YShift(60,48) /* min */

/* Contour #6 */
YShift(162,78) /* max */
YShift(60,72) /* min */

/* Contour #7 */
YShift(162,90) /* max */
YShift(60,84) /* min */

/* Contour #8 */
YShift(162,102) /* max */
YShift(60,96) /* min */

/* Contour #9 */
YShift(162,114) /* max */
YShift(60,108) /* min */

/* Contour #10 */
YShift(162,126) /* max */
YShift(60,120) /* min */

/* Contour #11 */
YShift(162,138) /* max */
YShift(60,132) /* min */

/* Contour #12 */
YShift(162,150) /* max */
YShift(60,144) /* min */

/* Contour #14 */
YShift(162,174) /* max */
YShift(60,168) /* min */

/* Contour #15 */
YShift(162,186) /* max */
YShift(60,180) /* min */

Smooth()
</talk>
        <assembly>/* TT glyph 742, char 0x25cc */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MDAP[R], 60
MDAP[R], 162
SHP[1], 6
SRP1[], 60
SHP[1], 0
SRP1[], 162
SHP[1], 18
SRP1[], 60
SHP[1], 12
SRP1[], 162
SHP[1], 30
SRP1[], 60
SHP[1], 24
SRP1[], 162
SHP[1], 42
SRP1[], 60
SHP[1], 36
SRP1[], 162
SHP[1], 54
SRP1[], 60
SHP[1], 48
SRP1[], 162
SHP[1], 78
SRP1[], 60
SHP[1], 72
SRP1[], 162
SHP[1], 90
SRP1[], 60
SHP[1], 84
SRP1[], 162
SHP[1], 102
SRP1[], 60
SHP[1], 96
SRP1[], 162
SHP[1], 114
SRP1[], 60
SHP[1], 108
SRP1[], 162
SHP[1], 126
SRP1[], 60
SHP[1], 120
SRP1[], 162
SHP[1], 138
SRP1[], 60
SHP[1], 132
SRP1[], 162
SHP[1], 150
SRP1[], 60
SHP[1], 144
SRP1[], 162
SHP[1], 174
SRP1[], 60
SHP[1], 168
SRP1[], 162
SHP[1], 186
SRP1[], 60
SHP[1], 180
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="743">
      <instructions>
        <talk>/* VTTTalk Unicode 0x40 (@) */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 0 19 */
/* CVT 10 16 */
/* Min and Max */
YAnchor(0,19)	/* min, CVT */
YAnchor(10,16)	/* max, CVT */

/* CVTs - beginning */
/* CVTs - end */


/* YDir: Stroke #0 */
YDist(10,55) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YInterpolate(10,35,0)
YAnchor(35)
YDist(35,82) /*perpendicular to the stroke*/

/* YDir: Stroke #2 */
YInterpolate(10,27,0)
YAnchor(27)
YDist(27,72) /*perpendicular to the stroke*/

/* YDir: Stroke #3 */
YInterpolate(10,18,0)
YAnchor(18)
YDist(18,47) /*perpendicular to the stroke*/

/* YDir: Stroke #4 */
YDist(0,65) /*perpendicular to the stroke*/

Smooth()


</talk>
        <assembly>/* TT glyph 743, char 0x40 (@) */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 0, 19
MIAP[R], 10, 16
MDRP[m&gt;RBl], 55
SRP2[], 0
IP[], 35
MDAP[R], 35
MDRP[m&gt;RBl], 82
SRP1[], 10
SRP2[], 0
IP[], 27
MDAP[R], 27
MDRP[m&gt;RBl], 72
SRP1[], 10
SRP2[], 0
IP[], 18
MDAP[R], 18
MDRP[m&gt;RBl], 47
SRP0[], 0
MDRP[m&gt;RBl], 65
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="744">
      <instructions>
        <talk>/* VTTTalk glyph 744, char 0x26 (&amp;) */
/* GUI generated Sun Jan 12 06:41:42 2020 */

/* Y direction */
YAnchor(0,19)
YDist(0,64)
YShift(0,36)
YDist(36,29)
YAnchor(49,16)
YDist(49,15)
YAnchor(86)
YShift(86,73)
YDist(86,85)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 744, char 0x26 (&amp;) */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MIAP[R], 0, 19
MDRP[m&gt;RBl], 64
SHP[1], 36
SRP0[], 36
MDRP[m&gt;RBl], 29
MIAP[R], 49, 16
MDRP[m&gt;RBl], 15
MDAP[R], 86
SHP[1], 73
MDRP[m&gt;RBl], 85
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="745">
      <instructions>
        <talk>/* VTTTalk glyph 745, char 0xb6 */
/* GUI generated Sun Jan 12 06:43:28 2020 */

/* Y direction */
YAnchor(12)
YShift(12,0)
YShift(12,18)
YAnchor(24)
YShift(24,10)
YShift(24,20)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 745, char 0xb6 */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MDAP[R], 12
SHP[1], 0
SHP[1], 18
MDAP[R], 24
SHP[1], 10
SHP[1], 20
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="746">
      <instructions>
        <talk>/* VTTTalk Unicode 0xa7 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 63 16 */
/* Min and Max */
YAnchor(0)	/* min */
YAnchor(63,16)	/* max, CVT */

/* CVTs - beginning */
/* CVTs - end */


/* YDir: Stroke #0 */
YDist(63,79) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YDist(0,16) /*perpendicular to the stroke*/

Smooth()

</talk>
        <assembly>/* TT glyph 746, char 0xa7 */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MDAP[R], 0
MIAP[R], 63, 16
MDRP[m&gt;RBl], 79
SRP0[], 0
MDRP[m&gt;RBl], 16
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="747">
      <instructions>
        <talk>/* VTTTalk Unicode 0xa9 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(0)	/* min */
YAnchor(10)	/* max */

/* YDir: Stroke #0 */
YDist(10,30) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YInterpolate(10,48,0)
YAnchor(48)
YDist(48,60) /*perpendicular to the stroke*/

/* YDir: Stroke #2 */
YInterpolate(10,40,0)
YAnchor(40)
YDist(40,68) /*perpendicular to the stroke*/

/* YDir: Stroke #3 */
YDist(0,20) /*perpendicular to the stroke*/

Smooth()

</talk>
        <assembly>/* TT glyph 747, char 0xa9 */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 10
MDRP[m&gt;RBl], 30
SRP2[], 0
IP[], 48
MDAP[R], 48
MDRP[m&gt;RBl], 60
SRP1[], 10
SRP2[], 0
IP[], 40
MDAP[R], 40
MDRP[m&gt;RBl], 68
SRP0[], 0
MDRP[m&gt;RBl], 20
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="748">
      <instructions>
        <talk>/* VTTTalk Unicode 0xae */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(0)	/* min */
YAnchor(10)	/* max */

/* YDir: Stroke #0 */
YDist(10,30) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YDist(0,20) /*perpendicular to the stroke*/

/* Contour #2 */
YShift(10,69) /* max */
YShift(0,40) /* min */

/* Contour #3 */
YShift(10,91) /* max */
YShift(0,89) /* min */

/* Contour #4 */
YShift(10,95) /* max */
YShift(0,97) /* min */

Smooth()
</talk>
        <assembly>/* TT glyph 748, char 0xae */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 10
MDRP[m&gt;RBl], 30
SRP0[], 0
MDRP[m&gt;RBl], 20
SRP1[], 10
SHP[1], 69
SRP1[], 0
SHP[1], 40
SRP1[], 10
SHP[1], 91
SRP1[], 0
SHP[1], 89
SRP1[], 10
SHP[1], 95
SRP1[], 0
SHP[1], 97
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="749">
      <instructions>
        <talk>/* VTTTalk Unicode 0x2122 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 12 16 */
/* Min and Max */
YAnchor(32)	/* min */
YAnchor(12,16)	/* max, CVT */

/* CVTs - beginning */
/* CVTs - end */


/* YDir: Stroke #0 */
YDist(12,2) /*perpendicular to the stroke*/
YShift(2,30) /*along bottom edge*/

/* Contour #2 */
YShift(12,47) /* max */
YShift(32,37) /* min */

/* Contour #3 */
YShift(12,60) /* max */
YShift(32,59) /* min */

/* Contour #4 */
YShift(12,65) /* max */
YShift(32,63) /* min */

/* Contour #5 */
YShift(12,70) /* max */
YShift(32,68) /* min */

/* Contour #6 */
YShift(12,74) /* max */
YShift(32,73) /* min */

/* Extreme Max */
YShift(12,9)

/* Extreme Max */
YShift(12,16)

/* Extreme Max */
YShift(12,57)

Smooth()

</talk>
        <assembly>/* TT glyph 749, char 0x2122 */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MDAP[R], 32
MIAP[R], 12, 16
MDRP[m&gt;RBl], 2
SHP[2], 30
SHP[1], 47
SRP1[], 32
SHP[1], 37
SRP1[], 12
SHP[1], 60
SRP1[], 32
SHP[1], 59
SRP1[], 12
SHP[1], 65
SRP1[], 32
SHP[1], 63
SRP1[], 12
SHP[1], 70
SRP1[], 32
SHP[1], 68
SRP1[], 12
SHP[1], 74
SRP1[], 32
SHP[1], 73
SRP1[], 12
SHP[1], 9
SHP[1], 16
SHP[1], 57
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="750">
      <instructions>
        <talk>/* VTTTalk Unicode 0xb0 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(0)	/* min */
YAnchor(6)	/* max */

/* YDir: Stroke #0 */
YDist(6,21) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YDist(0,13) /*perpendicular to the stroke*/

Smooth()

</talk>
        <assembly>/* TT glyph 750, char 0xb0 */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 6
MDRP[m&gt;RBl], 21
SRP0[], 0
MDRP[m&gt;RBl], 13
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="751">
      <instructions>
        <talk>/* VTTTalk Unicode 0x7c (|) */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(0)	/* min */
YAnchor(1)	/* max */

Smooth()

</talk>
        <assembly>/* TT glyph 751, char 0x7c (|) */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 1
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="752">
      <instructions>
        <talk>/* VTTTalk Unicode 0xa6 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 1 16 */
/* Min and Max */
YAnchor(4)	/* min */
YAnchor(1,16)	/* max, CVT */

/* CVTs - beginning */
/* CVTs - end */


Smooth()


</talk>
        <assembly>/* TT glyph 752, char 0xa6 */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MDAP[R], 4
MIAP[R], 1, 16
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="753">
      <instructions>
        <talk>/* VTTTalk Unicode 0x2020 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 45 17 */
/* Min and Max */
YAnchor(0)	/* min */
YAnchor(45,17)	/* max, CVT */

/* CVTs - beginning */
/* CVTs - end */


Smooth()


</talk>
        <assembly>/* TT glyph 753, char 0x2020 */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MDAP[R], 0
MIAP[R], 45, 17
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="754">
      <instructions>
        <talk>/* VTTTalk Unicode 0x2021 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 74 17 */
/* Min and Max */
YAnchor(0)	/* min */
YAnchor(74,17)	/* max, CVT */

/* CVTs - beginning */
/* CVTs - end */


Smooth()


</talk>
        <assembly>/* TT glyph 754, char 0x2021 */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MDAP[R], 0
MIAP[R], 74, 17
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="755">
      <instructions>
        <talk>/* VTTTalk Unicode 0x2de */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(0)	/* min */
YAnchor(11)	/* max */

/* YDir: Stroke #0 */
YDist(0,18) /*perpendicular to the stroke*/

Smooth()


</talk>
        <assembly>/* TT glyph 755, char 0x2de */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 11
SRP0[], 0
MDRP[m&gt;RBl], 18
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="756">
      <instructions>
        <talk>/* VTTTalk glyph 756, char 0x2e5 */
/* GUI generated Sun Jan 12 06:45:10 2020 */

/* Y direction */
YAnchor(0)
YAnchor(1)
YShift(1,5)
YDist(5,4)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 756, char 0x2e5 */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 1
SHP[1], 5
SRP0[], 5
MDRP[m&gt;RBl], 4
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="757">
      <instructions>
        <talk>/* VTTTalk Unicode 0x2e6 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 3 18  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(0)	/* min */
YAnchor(1)	/* max */

/* YDir: Stroke #0 */
YInterpolate(1,5,0)
YAnchor(5)
YDist(5,4) /*perpendicular to the stroke*/

Smooth()


</talk>
        <assembly>/* TT glyph 757, char 0x2e6 */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 1
IP[], 5
MDAP[R], 5
MDRP[m&gt;RBl], 4
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="758">
      <instructions>
        <talk>/* VTTTalk Unicode 0x2e7 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 3 18  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(0)	/* min */
YAnchor(1)	/* max */

/* YDir: Stroke #0 */
YInterpolate(1,4,0)
YAnchor(4)
YDist(4,5) /*perpendicular to the stroke*/

Smooth()


</talk>
        <assembly>/* TT glyph 758, char 0x2e7 */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 1
IP[], 4
MDAP[R], 4
MDRP[m&gt;RBl], 5
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="759">
      <instructions>
        <talk>/* VTTTalk Unicode 0x2e8 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 3 18  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(0)	/* min */
YAnchor(1)	/* max */

/* YDir: Stroke #0 */
YInterpolate(1,4,0)
YAnchor(4)
YDist(4,5) /*perpendicular to the stroke*/

Smooth()


</talk>
        <assembly>/* TT glyph 759, char 0x2e8 */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 1
IP[], 4
MDAP[R], 4
MDRP[m&gt;RBl], 5
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="760">
      <instructions>
        <talk>/* VTTTalk glyph 760, char 0x2e9 */
/* GUI generated Sun Jan 12 06:45:56 2020 */

/* Y direction */
YAnchor(4)
YShift(4,0)
YDist(4,5)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 760, char 0x2e9 */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MDAP[R], 4
SHP[1], 0
MDRP[m&gt;RBl], 5
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="761">
      <instructions>
        <talk>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 0 19  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(0)	/* min */
YAnchor(14)	/* max */

/* YDir: Stroke #0 */
YDist(14,75) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YDist(0,55) /*perpendicular to the stroke*/

/* YDir: Stroke #2 */
YInterpolate(14,51,0)
YAnchor(51)
YDist(51,46) /*perpendicular to the stroke*/

Smooth()


</talk>
        <assembly>/* TT glyph 761, char 0xffff */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 14
MDRP[m&gt;RBl], 75
SRP0[], 0
MDRP[m&gt;RBl], 55
SRP2[], 14
IP[], 51
MDAP[R], 51
MDRP[m&gt;RBl], 46
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="762">
      <instructions>
        <talk>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 1 19  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(0)	/* min */
YAnchor(2)	/* max */

/* YDir: Stroke #0 */
YInterpolate(2,11,0)
YAnchor(11)
YDist(11,24) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YInterpolate(2,37,0)
YAnchor(37)
YDist(37,50) /*perpendicular to the stroke*/

/* YDir: Stroke #2 */
YInterpolate(2,4,0)
YAnchor(4)
YDist(4,18) /*perpendicular to the stroke*/

/* YDir: Stroke #3 */
YInterpolate(2,30,0)
YAnchor(30)
YDist(30,44) /*perpendicular to the stroke*/

Smooth()

</talk>
        <assembly>/* TT glyph 762, char 0xffff */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 2
IP[], 11
MDAP[R], 11
MDRP[m&gt;RBl], 24
SRP1[], 2
SRP2[], 0
IP[], 37
MDAP[R], 37
MDRP[m&gt;RBl], 50
SRP1[], 2
SRP2[], 0
IP[], 4
MDAP[R], 4
MDRP[m&gt;RBl], 18
SRP1[], 2
SRP2[], 0
IP[], 30
MDAP[R], 30
MDRP[m&gt;RBl], 44
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="763">
      <instructions>
        <talk>/* VTTTalk Unicode 0x2e0 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 36 17  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(0)	/* min */
YAnchor(36)	/* max */

/* YDir: Stroke #0 */
YDist(0,20) /*perpendicular to the stroke*/

/* Contour #3 */
YShift(36,41) /* max */
YShift(0,39) /* min */

/* Extreme Max */
YShift(36,12)

/* Extreme Max */
YShift(36,9)

Smooth()


</talk>
        <assembly>/* TT glyph 763, char 0x2e0 */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 36
SRP0[], 0
MDRP[m&gt;RBl], 20
SRP1[], 36
SHP[1], 41
SRP1[], 0
SHP[1], 39
SRP1[], 36
SHP[1], 12
SHP[1], 9
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="764">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x2bc */
/* ACT generated Thu Jan  9 18:13:47 2020 */

OFFSET[R], 679, 11, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="765">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x2bd */
/* ACT generated Thu Jan  9 18:13:47 2020 */

OFFSET[R], 680, 105, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="766">
      <instructions>
        <talk>/* VTTTalk Unicode 0x2c1 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(32)	/* min */
YAnchor(8)	/* max */

/* YDir: Stroke #0 */
YDist(8,23) /*perpendicular to the stroke*/

Smooth()


</talk>
        <assembly>/* TT glyph 766, char 0x2c1 */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MDAP[R], 32
MDAP[R], 8
MDRP[m&gt;RBl], 23
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="767">
      <instructions>
        <talk>/* VTTTalk Unicode 0x2c8 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(0)	/* min */
YAnchor(1)	/* max */

Smooth()
</talk>
        <assembly>/* TT glyph 767, char 0x2c8 */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 1
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="768">
      <instructions>
        <talk>/* VTTTalk Unicode 0x2cc */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(0)	/* min */
YAnchor(1)	/* max */

Smooth()
</talk>
        <assembly>/* TT glyph 768, char 0x2cc */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 1
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="769">
      <instructions>
        <talk>/* VTTTalk Unicode 0x2d0 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 4 18  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(4)	/* min */
YAnchor(1)	/* max */

/* YDir: Stroke #0 */
YDist(1,0) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YDist(4,5) /*perpendicular to the stroke*/

Smooth()

</talk>
        <assembly>/* TT glyph 769, char 0x2d0 */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MDAP[R], 4
MDAP[R], 1
MDRP[m&gt;RBl], 0
SRP0[], 4
MDRP[m&gt;RBl], 5
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="770">
      <instructions>
        <talk>/* VTTTalk Unicode 0x2d1 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(0)	/* min */
YAnchor(1)	/* max */

/* YDir: Stroke #0 */

Smooth()

</talk>
        <assembly>/* TT glyph 770, char 0x2d1 */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 1
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="771">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x308 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

OFFSET[R], 817, -741, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="772">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x307 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

OFFSET[R], 818, -750, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="773">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x300 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

OFFSET[R], 819, -789, -24
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="774">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x301 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

OFFSET[R], 820, -715, -18
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="775">
      <instructions>
        <talk>/* VTTTalk Unicode 0x30b */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(3)	/* min */
YAnchor(1)	/* max */

/* Contour #1 */
YShift(1,5) /* max */
YShift(3,7) /* min */

Smooth()
</talk>
        <assembly>/* TT glyph 775, char 0x30b */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MDAP[R], 3
MDAP[R], 1
SHP[1], 5
SRP1[], 3
SHP[1], 7
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="776">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Jan  9 18:13:47 2020 */

OFFSET[R], 835, -747, -60

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="777">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x302 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

OFFSET[R], 821, -734, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="778">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x30c */
/* ACT generated Thu Jan  9 18:13:47 2020 */

OFFSET[R], 822, -833, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="779">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x306 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

OFFSET[R], 823, -807, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="780">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x30a */
/* ACT generated Thu Jan  9 18:13:47 2020 */

OFFSET[R], 824, -806, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="781">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x303 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

OFFSET[R], 825, -727, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="782">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x304 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

OFFSET[R], 826, -733, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="783">
      <instructions>
        <talk>/* VTTTalk Unicode 0x305 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(0)	/* min */
YAnchor(1)	/* max */

/* YDir: Stroke #0 */

Smooth()

</talk>
        <assembly>/* TT glyph 783, char 0x305 */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 1
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="784">
      <instructions>
        <talk>/* VTTTalk Unicode 0x312 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(0)	/* min */
YAnchor(6)	/* max */

/* YDir: Stroke #0 */
YDist(0,12) /*perpendicular to the stroke*/

Smooth()

</talk>
        <assembly>/* TT glyph 784, char 0x312 */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 6
SRP0[], 0
MDRP[m&gt;RBl], 12
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="785">
      <instructions>
        <talk>/* VTTTalk Unicode 0x315 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(0)	/* min */
YAnchor(13)	/* max */

/* YDir: Stroke #0 */
YDist(13,6) /*perpendicular to the stroke*/

Smooth()


</talk>
        <assembly>/* TT glyph 785, char 0x315 */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 13
MDRP[m&gt;RBl], 6
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="786">
      <instructions>
        <talk>/* VTTTalk Unicode 0x318 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(0)	/* min */
YAnchor(1)	/* max */

/* Contour #1 */
YShift(1,5) /* max */
YShift(0,4) /* min */

Smooth()
</talk>
        <assembly>/* TT glyph 786, char 0x318 */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 1
SHP[1], 5
SHP[2], 4
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="787">
      <instructions>
        <talk>/* VTTTalk Unicode 0x319 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(0)	/* min */
YAnchor(1)	/* max */

/* YDir: Stroke #0 */
YInterpolate(1,4,0)
YAnchor(4)
YDist(4,5) /*perpendicular to the stroke*/

Smooth()

</talk>
        <assembly>/* TT glyph 787, char 0x319 */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 1
IP[], 4
MDAP[R], 4
MDRP[m&gt;RBl], 5
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="788">
      <instructions>
        <talk>/* VTTTalk Unicode 0x31a */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(0)	/* min */
YAnchor(3)	/* max */

/* YDir: Stroke #0 */
YDist(3,2) /*perpendicular to the stroke*/

Smooth()


</talk>
        <assembly>/* TT glyph 788, char 0x31a */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 3
MDRP[m&gt;RBl], 2
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="789">
      <instructions>
        <talk>/* VTTTalk Unicode 0x31c */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(0)	/* min */
YAnchor(8)	/* max */

Smooth()
</talk>
        <assembly>/* TT glyph 789, char 0x31c */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 8
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="790">
      <instructions>
        <talk>/* VTTTalk Unicode 0x31d */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(4)	/* min */
YAnchor(1)	/* max */

/* YDir: Stroke #0 */
YDist(4,5) /*perpendicular to the stroke*/

Smooth()


</talk>
        <assembly>/* TT glyph 790, char 0x31d */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MDAP[R], 4
MDAP[R], 1
SRP0[], 4
MDRP[m&gt;RBl], 5
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="791">
      <instructions>
        <talk>/* VTTTalk Unicode 0x31e */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(0)	/* min */
YAnchor(5)	/* max */

/* YDir: Stroke #0 */
YDist(5,4) /*perpendicular to the stroke*/

Smooth()


</talk>
        <assembly>/* TT glyph 791, char 0x31e */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 5
MDRP[m&gt;RBl], 4
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="792">
      <instructions>
        <talk>/* VTTTalk Unicode 0x31f */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(0)	/* min */
YAnchor(1)	/* max */

/* YDir: Stroke #0 */
YInterpolate(1,4,0)
YAnchor(4)
YDist(4,5) /*perpendicular to the stroke*/

Smooth()

</talk>
        <assembly>/* TT glyph 792, char 0x31f */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 1
IP[], 4
MDAP[R], 4
MDRP[m&gt;RBl], 5
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="793">
      <instructions>
        <talk>/* VTTTalk Unicode 0x320 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(4)	/* min */
YAnchor(5)	/* max */

/* YDir: Stroke #0 */
YInterpolate(5,0,4)
YAnchor(0)
YDist(0,1) /*perpendicular to the stroke*/

/* Contour #2 */
YShift(5,11) /* max */
YShift(4,9) /* min */

Smooth()


</talk>
        <assembly>/* TT glyph 793, char 0x320 */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MDAP[R], 4
MDAP[R], 5
SRP2[], 4
IP[], 0
MDAP[R], 0
MDRP[m&gt;RBl], 1
SRP1[], 5
SHP[1], 11
SRP1[], 4
SHP[1], 9
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="794">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x323 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

OFFSET[R], 818, -750, -1448
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="795">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x324 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

OFFSET[R], 817, -741, -1424
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="796">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x325 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

OFFSET[R], 824, -806, -1546
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="797">
      <instructions>
        <talk>/* VTTTalk Unicode 0x326 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(0)	/* min */
YAnchor(14)	/* max */

/* YDir: Stroke #0 */
YDist(14,7) /*perpendicular to the stroke*/

Smooth()


</talk>
        <assembly>/* TT glyph 797, char 0x326 */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 14
MDRP[m&gt;RBl], 7
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="798">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x327 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

OFFSET[R], 827, -801, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="799">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x328 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

OFFSET[R], 828, -816, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="800">
      <instructions>
        <talk>/* VTTTalk Unicode 0x329 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(0)	/* min */
YAnchor(1)	/* max */

Smooth()
</talk>
        <assembly>/* TT glyph 800, char 0x329 */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 1
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="801">
      <instructions>
        <talk>/* VTTTalk Unicode 0x32a */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(0)	/* min */
YAnchor(1)	/* max */

/* YDir: Stroke #0 */
YDist(1,6) /*perpendicular to the stroke*/

/* Extreme Min */
YShift(0,4)

Smooth()

</talk>
        <assembly>/* TT glyph 801, char 0x32a */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 1
MDRP[m&gt;RBl], 6
SRP1[], 0
SHP[1], 4
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="802">
      <instructions>
        <talk>/* VTTTalk Unicode 0x32c */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(0)	/* min */
YAnchor(5)	/* max */

/* Extreme Max */
YShift(5,2)

Smooth()

</talk>
        <assembly>/* TT glyph 802, char 0x32c */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 5
SHP[1], 2
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="803">
      <instructions>
        <talk>/* VTTTalk Unicode 0x32f */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(0)	/* min */
YAnchor(2)	/* max */

/* YDir: Stroke #0 */
YDist(2,8) /*perpendicular to the stroke*/

/* Extreme Min */
YShift(0,5)

Smooth()

</talk>
        <assembly>/* TT glyph 803, char 0x32f */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 2
MDRP[m&gt;RBl], 8
SRP1[], 0
SHP[1], 5
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="804">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x330 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

OFFSET[R], 825, -727, -1424
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="805">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x334 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

OFFSET[R], 825, -727, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="806">
      <instructions>
        <talk>/* VTTTalk glyph 806, char 0x335 */
/* GUI generated Sat Jan 11 16:50:53 2020 */

/* Y direction */
YAnchor(0)
YLink(0,1,88)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 806, char 0x335 */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MDAP[R], 0
MIRP[m&gt;RBl], 1, 88
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="807">
      <instructions>
        <talk>/* VTTTalk glyph 807, char 0x337 */
/* GUI generated Sun Jan 12 06:47:24 2020 */

/* Y direction */
YAnchor(0)
YDist(0,1)
YAnchor(2)
YDist(2,3)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 807, char 0x337 */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MDAP[R], 0
MDRP[m&gt;RBl], 1
MDAP[R], 2
MDRP[m&gt;RBl], 3
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="808">
      <instructions>
        <talk>/* VTTTalk Unicode 0x338 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(0)	/* min */
YAnchor(2)	/* max */

Smooth()
</talk>
        <assembly>/* TT glyph 808, char 0x338 */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 2
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="809">
      <instructions>
        <talk>/* VTTTalk Unicode 0x339 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(0)	/* min */
YAnchor(8)	/* max */

Smooth()
</talk>
        <assembly>/* TT glyph 809, char 0x339 */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 8
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="810">
      <instructions>
        <talk>/* VTTTalk Unicode 0x33a */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(0)	/* min */
YAnchor(1)	/* max */

/* YDir: Stroke #0 */
YDist(0,3) /*perpendicular to the stroke*/

/* Extreme Max */
YShift(1,6)

Smooth()

</talk>
        <assembly>/* TT glyph 810, char 0x33a */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 1
SRP0[], 0
MDRP[m&gt;RBl], 3
SRP1[], 1
SHP[1], 6
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="811">
      <instructions>
        <talk>/* VTTTalk Unicode 0x33b */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(0)	/* min */
YAnchor(1)	/* max */

/* YDir: Stroke #0 */
YDist(1,7) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YDist(0,4) /*perpendicular to the stroke*/

Smooth()
</talk>
        <assembly>/* TT glyph 811, char 0x33b */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 1
MDRP[m&gt;RBl], 7
SRP0[], 0
MDRP[m&gt;RBl], 4
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="812">
      <instructions>
        <talk>/* VTTTalk glyph 812, char 0x33c */
/* GUI generated Sun Jan 12 06:48:33 2020 */

/* Y direction */
YAnchor(0)
YShift(0,14)
YShift(0,21)
YAnchor(3)
YDist(3,24)
YShift(3,9)
YAnchor(9)
YDist(9,17)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 812, char 0x33c */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MDAP[R], 0
SHP[2], 14
SHP[2], 21
MDAP[R], 3
MDRP[m&gt;RBl], 24
SHP[1], 9
MDAP[R], 9
MDRP[m&gt;RBl], 17
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="813">
      <instructions>
        <talk>/* VTTTalk Unicode 0x33d */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(0)	/* min */
YAnchor(1)	/* max */

/* Contour #1 */
YShift(1,6) /* max */
YShift(0,4) /* min */

Smooth()
</talk>
        <assembly>/* TT glyph 813, char 0x33d */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 1
SHP[1], 6
SHP[2], 4
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="814">
      <instructions>
        <talk>/* VTTTalk Unicode 0x35b */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 8 16  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(11)	/* min */
YAnchor(5)	/* max */

/* YDir: Stroke #0 */
YInterpolate(5,3,11)
YAnchor(3)
YDist(3,8) /*perpendicular to the stroke*/

Smooth()


</talk>
        <assembly>/* TT glyph 814, char 0x35b */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MDAP[R], 11
MDAP[R], 5
SRP2[], 11
IP[], 3
MDAP[R], 3
MDRP[m&gt;RBl], 8
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="815">
      <instructions>
        <talk>/* VTTTalk Unicode 0x35c */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(0)	/* min */
YAnchor(5)	/* max */

/* YDir: Stroke #0 */
YDist(0,8) /*perpendicular to the stroke*/

/* Extreme Max */
YShift(5,11)

Smooth()


</talk>
        <assembly>/* TT glyph 815, char 0x35c */
/* VTT 6.31 compiler Mon Jan 13 21:02:45 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 5
SRP0[], 0
MDRP[m&gt;RBl], 8
SRP1[], 5
SHP[1], 11
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="816">
      <instructions>
        <talk>/* VTTTalk Unicode 0x361 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(9)	/* min */
YAnchor(4)	/* max */

/* YDir: Stroke #0 */
YDist(4,12) /*perpendicular to the stroke*/

/* Extreme Min */
YShift(9,0)

Smooth()


</talk>
        <assembly>/* TT glyph 816, char 0x361 */
/* VTT 6.31 compiler Mon Jan 13 21:02:46 2020 */
SVTCA[Y]
MDAP[R], 9
MDAP[R], 4
MDRP[m&gt;RBl], 12
SRP1[], 9
SHP[1], 0
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="817">
      <instructions>
        <talk>/* VTTTalk glyph 817, char 0xa8 */
/* GUI generated Sun Jan 12 06:49:45 2020 */

/* Y direction */
YAnchor(6)
YShift(6,18)
YDist(6,0)
YShift(0,12)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 817, char 0xa8 */
/* VTT 6.31 compiler Mon Jan 13 21:02:46 2020 */
SVTCA[Y]
MDAP[R], 6
SHP[1], 18
MDRP[m&gt;RBl], 0
SHP[2], 12
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="818">
      <instructions>
        <talk>/* VTTTalk glyph 818, char 0x2d9 */
/* GUI generated Sun Jan 12 06:50:02 2020 */

/* Y direction */
YAnchor(6)
YDist(6,0)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 818, char 0x2d9 */
/* VTT 6.31 compiler Mon Jan 13 21:02:46 2020 */
SVTCA[Y]
MDAP[R], 6
MDRP[m&gt;RBl], 0
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="819">
      <instructions>
        <talk>/* VTTTalk Unicode 0x60 (`) */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(0)	/* min */
YAnchor(2)	/* max */

Smooth()

</talk>
        <assembly>/* TT glyph 819, char 0x60 (`) */
/* VTT 6.31 compiler Mon Jan 13 21:02:46 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 2
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="820">
      <instructions>
        <talk>/* VTTTalk Unicode 0xb4 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(0)	/* min */
YAnchor(2)	/* max */

Smooth()

</talk>
        <assembly>/* TT glyph 820, char 0xb4 */
/* VTT 6.31 compiler Mon Jan 13 21:02:46 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 2
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="821">
      <instructions>
        <talk>/* VTTTalk Unicode 0x2c6 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(0)	/* min */
YAnchor(2)	/* max */

/* Extreme Min */
YShift(0,5)

Smooth()

</talk>
        <assembly>/* TT glyph 821, char 0x2c6 */
/* VTT 6.31 compiler Mon Jan 13 21:02:46 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 2
SHP[2], 5
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="822">
      <instructions>
        <talk>/* VTTTalk Unicode 0x2c7 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(0)	/* min */
YAnchor(2)	/* max */

/* Extreme Max */
YShift(2,5)

Smooth()

</talk>
        <assembly>/* TT glyph 822, char 0x2c7 */
/* VTT 6.31 compiler Mon Jan 13 21:02:46 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 2
SHP[1], 5
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="823">
      <instructions>
        <talk>/* VTTTalk Unicode 0x2d8 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(0)	/* min */
YAnchor(2)	/* max */

/* YDir: Stroke #0 */
YDist(0,6) /*perpendicular to the stroke*/

/* Extreme Max */
YShift(2,10)

Smooth()


</talk>
        <assembly>/* TT glyph 823, char 0x2d8 */
/* VTT 6.31 compiler Mon Jan 13 21:02:46 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 2
SRP0[], 0
MDRP[m&gt;RBl], 6
SRP1[], 2
SHP[1], 10
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="824">
      <instructions>
        <talk>/* VTTTalk Unicode 0x2da */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(0)	/* min */
YAnchor(7)	/* max */

/* YDir: Stroke #0 */
YDist(7,20) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YDist(0,14) /*perpendicular to the stroke*/

Smooth()
</talk>
        <assembly>/* TT glyph 824, char 0x2da */
/* VTT 6.31 compiler Mon Jan 13 21:02:46 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 7
MDRP[m&gt;RBl], 20
SRP0[], 0
MDRP[m&gt;RBl], 14
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="825">
      <instructions>
        <talk>/* VTTTalk Unicode 0x2dc */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(9)	/* min */
YAnchor(22)	/* max */

/* YDir: Stroke #0 */
YInterpolate(22,6,9)
YAnchor(6)
YDist(6,13) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YInterpolate(22,0,9)
YAnchor(0)
YDist(0,19) /*perpendicular to the stroke*/

Smooth()

</talk>
        <assembly>/* TT glyph 825, char 0x2dc */
/* VTT 6.31 compiler Mon Jan 13 21:02:46 2020 */
SVTCA[Y]
MDAP[R], 9
MDAP[R], 22
SRP2[], 9
IP[], 6
MDAP[R], 6
MDRP[m&gt;RBl], 13
SRP1[], 22
SRP2[], 9
IP[], 0
MDAP[R], 0
MDRP[m&gt;RBl], 19
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="826">
      <instructions>
        <talk>/* VTTTalk Unicode 0xaf */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(0)	/* min */
YLink(0,1,88)

/* YDir: Stroke #0 */

Smooth()

</talk>
        <assembly>/* TT glyph 826, char 0xaf */
/* VTT 6.31 compiler Mon Jan 13 21:02:46 2020 */
SVTCA[Y]
MDAP[R], 0
MIRP[m&gt;RBl], 1, 88
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="827">
      <instructions>
        <talk>/* VTTTalk Unicode 0xb8 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 20 18 */
/* Min and Max */
YAnchor(0)	/* min */
YAnchor(20,18)	/* max, CVT */

/* CVTs - beginning */
/* CVTs - end */


/* YDir: Stroke #0 */
YDist(0,12) /*perpendicular to the stroke*/

Smooth()

</talk>
        <assembly>/* TT glyph 827, char 0xb8 */
/* VTT 6.31 compiler Mon Jan 13 21:02:46 2020 */
SVTCA[Y]
MDAP[R], 0
MIAP[R], 20, 18
SRP0[], 0
MDRP[m&gt;RBl], 12
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="828">
      <instructions>
        <talk>/* VTTTalk Unicode 0x2db */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(0)	/* min */
YAnchor(6)	/* max */

/* YDir: Stroke #0 */
YDist(0,11) /*perpendicular to the stroke*/

Smooth()

</talk>
        <assembly>/* TT glyph 828, char 0x2db */
/* VTT 6.31 compiler Mon Jan 13 21:02:46 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 6
SRP0[], 0
MDRP[m&gt;RBl], 11
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="829">
      <instructions>
        <talk>/* VTTTalk glyph 829, char 0xffff */
/* GUI generated Sun Jan 12 06:50:57 2020 */

/* Y direction */
YAnchor(6)
YDist(6,0)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 829, char 0xffff */
/* VTT 6.31 compiler Mon Jan 13 21:02:46 2020 */
SVTCA[Y]
MDAP[R], 6
MDRP[m&gt;RBl], 0
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="830">
      <instructions>
        <talk>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 4 16  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(0)	/* min */
YAnchor(4)	/* max */

Smooth()
</talk>
        <assembly>/* TT glyph 830, char 0xffff */
/* VTT 6.31 compiler Mon Jan 13 21:02:46 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 4
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="831">
      <instructions>
        <talk>/* VTTTalk Unicode 0x1dcf */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(0)	/* min */
YAnchor(5)	/* max */

/* YDir: Stroke #0 */
YInterpolate(5,3,0)
YAnchor(3)
YDist(3,8) /*perpendicular to the stroke*/

Smooth()


</talk>
        <assembly>/* TT glyph 831, char 0x1dcf */
/* VTT 6.31 compiler Mon Jan 13 21:02:46 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 5
IP[], 3
MDAP[R], 3
MDRP[m&gt;RBl], 8
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="832">
      <instructions>
        <talk>/* VTTTalk glyph 832, char 0x1dd1 */
/* GUI generated Sun Jan 12 06:52:23 2020 */

/* Y direction */
YAnchor(0)
YDist(0,1)
YShift(0,21)
YAnchor(14)
YDist(14,7)
YShift(14,40)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 832, char 0x1dd1 */
/* VTT 6.31 compiler Mon Jan 13 21:02:46 2020 */
SVTCA[Y]
MDAP[R], 0
MDRP[m&gt;RBl], 1
SHP[1], 21
MDAP[R], 14
MDRP[m&gt;RBl], 7
SHP[1], 40
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="833">
      <instructions>
        <talk>/* VTTTalk Unicode 0x1dd2 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(0)	/* min */
YAnchor(25)	/* max */

/* YDir: Stroke #0 */
YDist(25,7) /*perpendicular to the stroke*/

Smooth()

</talk>
        <assembly>/* TT glyph 833, char 0x1dd2 */
/* VTT 6.31 compiler Mon Jan 13 21:02:46 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 25
MDRP[m&gt;RBl], 7
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="834">
      <instructions>
        <talk>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(0)	/* min */
YAnchor(7)	/* max */

/* YDir: Stroke #0 */
YDist(0,13) /*perpendicular to the stroke*/

Smooth()


</talk>
        <assembly>/* TT glyph 834, char 0xffff */
/* VTT 6.31 compiler Mon Jan 13 21:02:46 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 7
SRP0[], 0
MDRP[m&gt;RBl], 13
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="835">
      <instructions>
        <talk>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(10)	/* min */
YAnchor(6)	/* max */

Smooth()
</talk>
        <assembly>/* TT glyph 835, char 0xffff */
/* VTT 6.31 compiler Mon Jan 13 21:02:46 2020 */
SVTCA[Y]
MDAP[R], 10
MDAP[R], 6
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="836">
      <instructions>
        <talk>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(0)	/* min */
YAnchor(8)	/* max */

/* YDir: Stroke #0 */
YDist(0,15) /*perpendicular to the stroke*/

Smooth()


</talk>
        <assembly>/* TT glyph 836, char 0xffff */
/* VTT 6.31 compiler Mon Jan 13 21:02:46 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 8
SRP0[], 0
MDRP[m&gt;RBl], 15
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="837">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Jan  9 18:13:47 2020 */

OFFSET[R], 849, -1041, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="838">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Jan  9 18:13:47 2020 */

OFFSET[R], 818, -931, 430

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="839">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Jan  9 18:13:47 2020 */

OFFSET[R], 850, -1079, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="840">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Jan  9 18:13:47 2020 */

OFFSET[R], 851, -926, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="841">
      <instructions>
        <talk>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(0)	/* min */
YAnchor(2)	/* max */

/* Contour #1 */
YShift(2,6) /* max */
YShift(0,4) /* min */

Smooth()

</talk>
        <assembly>/* TT glyph 841, char 0xffff */
/* VTT 6.31 compiler Mon Jan 13 21:02:46 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 2
SHP[1], 6
SHP[2], 4
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="842">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Jan  9 18:13:47 2020 */

OFFSET[R], 852, -1010, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="843">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Jan  9 18:13:47 2020 */

OFFSET[R], 853, -905, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="844">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Jan  9 18:13:47 2020 */

OFFSET[R], 823, -988, 460

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="845">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Jan  9 18:13:47 2020 */

OFFSET[R], 854, -1012, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="846">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Jan  9 18:13:47 2020 */

OFFSET[R], 855, -983, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="847">
      <instructions>
        <talk>/* VTTTalk glyph 847, char 0xffff */
/* GUI generated Sun Jan 12 06:53:55 2020 */

/* Y direction */
YAnchor(0)
YDist(0,1)
YAnchor(2)
YDist(2,3)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 847, char 0xffff */
/* VTT 6.31 compiler Mon Jan 13 21:02:46 2020 */
SVTCA[Y]
MDAP[R], 0
MDRP[m&gt;RBl], 1
MDAP[R], 2
MDRP[m&gt;RBl], 3
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="848">
      <instructions>
        <talk>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 0 18  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(0)	/* min */
YAnchor(2)	/* max */

Smooth()
</talk>
        <assembly>/* TT glyph 848, char 0xffff */
/* VTT 6.31 compiler Mon Jan 13 21:02:46 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 2
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="849">
      <instructions>
        <talk>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(0)	/* min */
YAnchor(6)	/* max */

/* Contour #1 */
YShift(6,18) /* max */
YShift(0,12) /* min */

Smooth()

</talk>
        <assembly>/* TT glyph 849, char 0xffff */
/* VTT 6.31 compiler Mon Jan 13 21:02:46 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 6
SHP[1], 18
SHP[2], 12
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="850">
      <instructions>
        <talk>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(0)	/* min */
YAnchor(2)	/* max */

Smooth()

</talk>
        <assembly>/* TT glyph 850, char 0xffff */
/* VTT 6.31 compiler Mon Jan 13 21:02:46 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 2
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="851">
      <instructions>
        <talk>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(0)	/* min */
YAnchor(2)	/* max */

Smooth()

</talk>
        <assembly>/* TT glyph 851, char 0xffff */
/* VTT 6.31 compiler Mon Jan 13 21:02:46 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 2
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="852">
      <instructions>
        <talk>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(0)	/* min */
YAnchor(2)	/* max */

/* Extreme Min */
YShift(0,5)

Smooth()
</talk>
        <assembly>/* TT glyph 852, char 0xffff */
/* VTT 6.31 compiler Mon Jan 13 21:02:46 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 2
SHP[2], 5
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="853">
      <instructions>
        <talk>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(0)	/* min */
YAnchor(2)	/* max */

/* Extreme Max */
YShift(2,4)

Smooth()
</talk>
        <assembly>/* TT glyph 853, char 0xffff */
/* VTT 6.31 compiler Mon Jan 13 21:02:46 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 2
SHP[1], 4
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="854">
      <instructions>
        <talk>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(7)	/* min */
YAnchor(19)	/* max */

/* YDir: Stroke #0 */
YInterpolate(19,4,7)
YAnchor(4)
YDist(4,11) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YInterpolate(19,0,7)
YAnchor(0)
YDist(0,17) /*perpendicular to the stroke*/

Smooth()
</talk>
        <assembly>/* TT glyph 854, char 0xffff */
/* VTT 6.31 compiler Mon Jan 13 21:02:46 2020 */
SVTCA[Y]
MDAP[R], 7
MDAP[R], 19
SRP2[], 7
IP[], 4
MDAP[R], 4
MDRP[m&gt;RBl], 11
SRP1[], 19
SRP2[], 7
IP[], 0
MDAP[R], 0
MDRP[m&gt;RBl], 17
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="855">
      <instructions>
        <talk>/* VTTTalk glyph 855, char 0xffff */
/* GUI generated Mon Jan 13 06:27:41 2020 */

/* Y direction */
YAnchor(1)
YLink(1,0,88)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 855, char 0xffff */
/* VTT 6.31 compiler Mon Jan 13 21:02:46 2020 */
SVTCA[Y]
MDAP[R], 1
MIRP[m&gt;RBl], 0, 88
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="856">
      <instructions>
        <talk>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(9)	/* min */
YAnchor(4)	/* max */

/* YDir: Stroke #0 */
YDist(4,12) /*perpendicular to the stroke*/

/* Extreme Min */
YShift(9,0)

Smooth()

</talk>
        <assembly>/* TT glyph 856, char 0xffff */
/* VTT 6.31 compiler Mon Jan 13 21:02:46 2020 */
SVTCA[Y]
MDAP[R], 9
MDAP[R], 4
MDRP[m&gt;RBl], 12
SRP1[], 9
SHP[1], 0
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="857">
      <instructions>
        <talk>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(0)	/* min */
YAnchor(5)	/* max */

/* YDir: Stroke #0 */
YDist(0,8) /*perpendicular to the stroke*/

/* Extreme Max */
YShift(5,11)

Smooth()

</talk>
        <assembly>/* TT glyph 857, char 0xffff */
/* VTT 6.31 compiler Mon Jan 13 21:02:46 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 5
SRP0[], 0
MDRP[m&gt;RBl], 8
SRP1[], 5
SHP[1], 11
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="858">
      <instructions>
        <talk>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(9)	/* min */
YAnchor(4)	/* max */

/* YDir: Stroke #0 */
YDist(4,12) /*perpendicular to the stroke*/

/* Extreme Min */
YShift(9,0)

Smooth()

</talk>
        <assembly>/* TT glyph 858, char 0xffff */
/* VTT 6.31 compiler Mon Jan 13 21:02:46 2020 */
SVTCA[Y]
MDAP[R], 9
MDAP[R], 4
MDRP[m&gt;RBl], 12
SRP1[], 9
SHP[1], 0
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="859">
      <instructions>
        <talk>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(0)	/* min */
YAnchor(2)	/* max */

Smooth()

</talk>
        <assembly>/* TT glyph 859, char 0xffff */
/* VTT 6.31 compiler Mon Jan 13 21:02:46 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 2
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="860">
      <instructions>
        <talk>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(0)	/* min */
YAnchor(2)	/* max */

Smooth()

</talk>
        <assembly>/* TT glyph 860, char 0xffff */
/* VTT 6.31 compiler Mon Jan 13 21:02:46 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 2
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="861">
      <instructions>
        <talk>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(0)	/* min */
YAnchor(2)	/* max */

/* Contour #1 */
YShift(2,6) /* max */
YShift(0,4) /* min */

Smooth()

</talk>
        <assembly>/* TT glyph 861, char 0xffff */
/* VTT 6.31 compiler Mon Jan 13 21:02:46 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 2
SHP[1], 6
SHP[2], 4
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="862">
      <instructions>
        <talk>/* VTTTalk glyph 862, char 0xffff */
/* GUI generated Sat Jan 11 16:55:45 2020 */

/* Y direction */
YAnchor(0)
YLink(0,1,88)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 862, char 0xffff */
/* VTT 6.31 compiler Mon Jan 13 21:02:46 2020 */
SVTCA[Y]
MDAP[R], 0
MIRP[m&gt;RBl], 1, 88
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="863">
      <instructions>
        <talk>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(0)	/* min */
YAnchor(2)	/* max */

Smooth()

</talk>
        <assembly>/* TT glyph 863, char 0xffff */
/* VTT 6.31 compiler Mon Jan 13 21:02:46 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 2
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="864">
      <instructions>
        <talk>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(0)	/* min */
YAnchor(1)	/* max */

/* YDir: Stroke #0 */

Smooth()
</talk>
        <assembly>/* TT glyph 864, char 0xffff */
/* VTT 6.31 compiler Mon Jan 13 21:02:46 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 1
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="865">
      <instructions>
        <talk>/* VTTTalk glyph 865, char 0x363 */
/* GUI generated Sun Jan 12 06:57:22 2020 */

/* Y direction */
YAnchor(33)
YDist(33,48)
YShift(33,0)
YDist(0,26)
YDist(33,19)
YDist(19,7)
YInterpolate(33,41,19)
YShift(41,40)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 865, char 0x363 */
/* VTT 6.31 compiler Mon Jan 13 21:02:46 2020 */
SVTCA[Y]
MDAP[R], 33
MDRP[m&gt;RBl], 48
SHP[1], 0
SRP0[], 0
MDRP[m&gt;RBl], 26
SRP0[], 33
MDRP[M&lt;RGr], 19
MDRP[m&gt;RBl], 7
SRP2[], 33
IP[], 41
SRP1[], 41
SHP[1], 40
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="866">
      <instructions>
        <talk>/* VTTTalk glyph 866, char 0x364 */
/* GUI generated Sun Jan 12 07:00:43 2020 */

/* Y direction */
YAnchor(0)
YShift(0,14)
YDist(0,6)
YShift(6,24)
YInterpolate(0,10,6)
YShift(10,20)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 866, char 0x364 */
/* VTT 6.31 compiler Mon Jan 13 21:02:46 2020 */
SVTCA[Y]
MDAP[R], 0
SHP[2], 14
MDRP[m&lt;RGr], 6
SHP[2], 24
IP[], 10
SRP1[], 10
SHP[1], 20
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="867">
      <instructions>
        <talk>/* VTTTalk glyph 867, char 0x365 */
/* GUI generated Sun Jan 12 07:03:07 2020 */

/* Y direction */
YAnchor(12)
YShift(12,15)
YShift(12,25)
YDist(12,13)
YShift(13,27)
YAnchor(20)
YDist(20,0)
YDist(0,6)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 867, char 0x365 */
/* VTT 6.31 compiler Mon Jan 13 21:02:46 2020 */
SVTCA[Y]
MDAP[R], 12
SHP[1], 15
SHP[1], 25
MDRP[m&gt;RBl], 13
SHP[2], 27
MDAP[R], 20
MDRP[M&lt;RWh], 0
MDRP[m&gt;RBl], 6
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="868">
      <instructions>
        <talk>/* VTTTalk glyph 868, char 0x366 */
/* GUI generated Sun Jan 12 07:10:49 2020 */

/* Y direction */
YAnchor(0)
YShift(0,12)
YDist(12,18)
YShift(18,6)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 868, char 0x366 */
/* VTT 6.31 compiler Mon Jan 13 21:02:46 2020 */
SVTCA[Y]
MDAP[R], 0
SHP[2], 12
SRP0[], 12
MDRP[m&lt;RWh], 18
SHP[2], 6
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="869">
      <instructions>
        <talk>/* VTTTalk glyph 869, char 0x367 */
/* GUI generated Sun Jan 12 07:12:14 2020 */

/* Y direction */
YAnchor(0)
YDist(0,14)
YShift(0,21)
YAnchor(6)
YShift(6,26)
YShift(6,5)
YShift(5,24)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 869, char 0x367 */
/* VTT 6.31 compiler Mon Jan 13 21:02:46 2020 */
SVTCA[Y]
MDAP[R], 0
MDRP[m&gt;RBl], 14
SHP[1], 21
MDAP[R], 6
SHP[1], 26
SHP[1], 5
SRP1[], 5
SHP[1], 24
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="870">
      <instructions>
        <talk>/* VTTTalk glyph 870, char 0x368 */
/* GUI generated Sun Jan 12 07:12:50 2020 */

/* Y direction */
YAnchor(0)
YShift(0,28)
YDist(28,21)
YShift(21,7)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 870, char 0x368 */
/* VTT 6.31 compiler Mon Jan 13 21:02:46 2020 */
SVTCA[Y]
MDAP[R], 0
SHP[2], 28
SRP0[], 28
MDRP[m&lt;RWh], 21
SHP[2], 7
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="871">
      <instructions>
        <talk>/* VTTTalk Unicode 0x369 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(0)	/* min */
YAnchor(20)	/* max */

/* YDir: Stroke #0 */
YInterpolate(20,11,0)
YAnchor(11)
YDist(11,42) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YInterpolate(20,5,0)
YAnchor(5)
YDist(5,36) /*perpendicular to the stroke*/

Smooth()
</talk>
        <assembly>/* TT glyph 871, char 0x369 */
/* VTT 6.31 compiler Mon Jan 13 21:02:46 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 20
IP[], 11
MDAP[R], 11
MDRP[m&lt;RBl], 42
SRP1[], 20
SRP2[], 0
IP[], 5
MDAP[R], 5
MDRP[m&gt;RBl], 36
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="872">
      <instructions>
        <talk>/* VTTTalk glyph 872, char 0x36a */
/* GUI generated Sun Jan 12 07:14:51 2020 */

/* Y direction */
YAnchor(5)
YAnchor(11)
YShift(11,37)
YAnchor(32)
YShift(32,0)
YInterpolate(32,25,5)
YDist(25,18)
YDist(32,33)
YShift(33,38)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 872, char 0x36a */
/* VTT 6.31 compiler Mon Jan 13 21:02:46 2020 */
SVTCA[Y]
MDAP[R], 5
MDAP[R], 11
SHP[1], 37
MDAP[R], 32
SHP[1], 0
SRP2[], 5
IP[], 25
SRP0[], 25
MDRP[m&gt;RBl], 18
SRP0[], 32
MDRP[m&gt;RBl], 33
SHP[2], 38
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="873">
      <instructions>
        <talk>/* VTTTalk glyph 873, char 0x36b */
/* GUI generated Sun Jan 12 07:15:31 2020 */

/* Y direction */
YAnchor(0)
YShift(0,32)
YShift(0,53)
YShift(0,59)
YShift(0,64)
YShift(0,54)
YDist(54,55)
YShift(55,60)
YShift(55,65)
YAnchor(5)
YShift(5,25)
YDist(25,18)
YShift(5,46)
YDist(46,39)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 873, char 0x36b */
/* VTT 6.31 compiler Mon Jan 13 21:02:46 2020 */
SVTCA[Y]
MDAP[R], 0
SHP[2], 32
SHP[2], 53
SHP[2], 59
SHP[2], 64
SHP[2], 54
SRP0[], 54
MDRP[m&gt;RBl], 55
SHP[2], 60
SHP[2], 65
MDAP[R], 5
SHP[1], 25
SRP0[], 25
MDRP[m&gt;RBl], 18
SRP1[], 5
SHP[1], 46
SRP0[], 46
MDRP[m&gt;RBl], 39
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="874">
      <instructions>
        <talk>/* VTTTalk glyph 874, char 0x36c */
/* GUI generated Sun Jan 12 07:16:19 2020 */

/* Y direction */
YAnchor(8)
YDist(8,20)
YShift(8,29)
YShift(8,33)
YAnchor(23)
YDist(23,24)
YShift(23,28)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 874, char 0x36c */
/* VTT 6.31 compiler Mon Jan 13 21:02:46 2020 */
SVTCA[Y]
MDAP[R], 8
MDRP[m&gt;RBl], 20
SHP[1], 29
SHP[1], 33
MDAP[R], 23
MDRP[m&gt;RBl], 24
SHP[1], 28
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="875">
      <instructions>
        <talk>/* VTTTalk Unicode 0x36d */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 8 16  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(0)	/* min */
YAnchor(12)	/* max */

/* YDir: Stroke #0 */
YInterpolate(12,14,0)
YAnchor(14)
YDist(14,17) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YDist(0,24) /*perpendicular to the stroke*/

Smooth()

</talk>
        <assembly>/* TT glyph 875, char 0x36d */
/* VTT 6.31 compiler Mon Jan 13 21:02:46 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 12
IP[], 14
MDAP[R], 14
MDRP[m&gt;RBl], 17
SRP0[], 0
MDRP[m&gt;RBl], 24
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="876">
      <instructions>
        <talk>/* VTTTalk glyph 876, char 0x36e */
/* GUI generated Sun Jan 12 07:18:16 2020 */

/* Y direction */
YAnchor(0)
YAnchor(10)
YShift(10,1)
YShift(10,5)
YShift(10,15)
YDist(10,9)
YShift(9,17)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 876, char 0x36e */
/* VTT 6.31 compiler Mon Jan 13 21:02:46 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 10
SHP[1], 1
SHP[1], 5
SHP[1], 15
MDRP[m&gt;RBl], 9
SHP[2], 17
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="877">
      <instructions>
        <talk>/* VTTTalk glyph 877, char 0x36f */
/* GUI generated Sun Jan 12 07:20:29 2020 */

/* Y direction */
YAnchor(8)
YShift(8,0)
YShift(8,4)
YShift(8,13)
YDist(8,9)
YShift(9,14)
YAnchor(20)
YShift(20,1)
YShift(20,5)
YShift(20,25)
YDist(20,19)
YShift(19,24)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 877, char 0x36f */
/* VTT 6.31 compiler Mon Jan 13 21:02:46 2020 */
SVTCA[Y]
MDAP[R], 8
SHP[1], 0
SHP[1], 4
SHP[1], 13
MDRP[m&gt;RBl], 9
SHP[2], 14
MDAP[R], 20
SHP[1], 1
SHP[1], 5
SHP[1], 25
MDRP[m&gt;RBl], 19
SHP[2], 24
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="878">
      <instructions>
        <talk>/* VTTTalk glyph 878, char 0x1dd3 */
/* GUI generated Sun Jan 12 07:21:52 2020 */

/* Y direction */
YAnchor(0)
YDist(0,12)
YShift(12,5)
YShift(0,29)
YDist(29,23)
YShift(23,17)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 878, char 0x1dd3 */
/* VTT 6.31 compiler Mon Jan 13 21:02:46 2020 */
SVTCA[Y]
MDAP[R], 0
MDRP[m&gt;RBl], 12
SHP[2], 5
SHP[1], 29
SRP0[], 29
MDRP[m&gt;RBl], 23
SHP[2], 17
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="879">
      <instructions>
        <talk>/* VTTTalk glyph 879, char 0x1dd4 */
/* GUI generated Sun Jan 12 07:26:57 2020 */

/* Y direction */
YAnchor(6)
YDist(6,57)
YShift(6,0)
YDist(0,50)
YAnchor(34)
YShift(34,16)
YInterpolate(0,63,44,13,25,69,34)
YShift(44,43)
YShift(69,70)
YShift(34,40)
YShift(40,73)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 879, char 0x1dd4 */
/* VTT 6.31 compiler Mon Jan 13 21:02:46 2020 */
SVTCA[Y]
MDAP[R], 6
MDRP[m&gt;RBl], 57
SHP[1], 0
SRP0[], 0
MDRP[m&gt;RBl], 50
MDAP[R], 34
SHP[1], 16
SRP2[], 0
SLOOP[], 5
IP[], 63, 44, 13, 25, 69
SRP1[], 44
SHP[1], 43
SRP1[], 69
SHP[1], 70
SRP1[], 34
SHP[1], 40
SRP1[], 40
SHP[1], 73
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="880">
      <instructions>
        <talk>/* VTTTalk glyph 880, char 0x1dd8 */
/* GUI generated Sun Jan 12 07:26:33 2020 */

/* Y direction */
YAnchor(0)
YDist(0,22)
YAnchor(13)
YInterpolate(0,7,13)
YShift(7,28)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 880, char 0x1dd8 */
/* VTT 6.31 compiler Mon Jan 13 21:02:46 2020 */
SVTCA[Y]
MDAP[R], 0
MDRP[m&lt;RBl], 22
MDAP[R], 13
SRP2[], 0
IP[], 7
SRP1[], 7
SHP[1], 28
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="881">
      <instructions>
        <talk>/* VTTTalk glyph 881, char 0x1dda */
/* GUI generated Sun Jan 12 07:33:00 2020 */

/* Y direction */
YAnchor(0)
YShift(0,13)
YAnchor(48)
YDist(48,61)
YShift(48,71)
YShift(48,85)
YIPAnchor(48,55,0)
YInterpolate(55,34,0)
YShift(55,42)
YShift(34,19)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 881, char 0x1dda */
/* VTT 6.31 compiler Mon Jan 13 21:02:46 2020 */
SVTCA[Y]
MDAP[R], 0
SHP[2], 13
MDAP[R], 48
MDRP[m&lt;RBl], 61
SHP[1], 71
SHP[1], 85
SRP2[], 0
IP[], 55
MDAP[R], 55
IP[], 34
SHP[1], 42
SRP1[], 34
SHP[1], 19
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="882">
      <instructions>
        <talk>/* VTTTalk glyph 882, char 0x1ddc */
/* GUI generated Sun Jan 12 07:36:18 2020 */

/* Y direction */
YAnchor(30)
YShift(30,0)
YShift(30,3)
YShift(30,22)
YShift(30,41)
YDist(30,29)
YShift(29,1)
YShift(29,24)
YAnchor(36)
YInterpolate(30,15,36)
YShift(15,12)
YShift(15,19)
YDist(15,14)
YShift(14,17)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 882, char 0x1ddc */
/* VTT 6.31 compiler Mon Jan 13 21:02:46 2020 */
SVTCA[Y]
MDAP[R], 30
SHP[1], 0
SHP[1], 3
SHP[1], 22
SHP[1], 41
MDRP[m&gt;RBl], 29
SHP[2], 1
SHP[2], 24
MDAP[R], 36
SRP2[], 30
IP[], 15
SRP1[], 15
SHP[1], 12
SHP[1], 19
SRP0[], 15
MDRP[m&gt;RBl], 14
SHP[2], 17
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="883">
      <instructions>
        <talk>/* VTTTalk glyph 883, char 0x1ddd */
/* GUI generated Sun Jan 12 07:37:15 2020 */

/* Y direction */
YAnchor(5)
YAnchor(11)
YShift(11,0)
YDist(11,12)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 883, char 0x1ddd */
/* VTT 6.31 compiler Mon Jan 13 21:02:46 2020 */
SVTCA[Y]
MDAP[R], 5
MDAP[R], 11
SHP[1], 0
MDRP[m&gt;RBl], 12
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="884">
      <instructions>
        <talk>/* VTTTalk glyph 884, char 0x1de0 */
/* GUI generated Sun Jan 12 07:38:25 2020 */

/* Y direction */
YAnchor(13)
YDist(13,6)
YShift(13,36)
YAnchor(25)
YShift(25,0)
YShift(25,26)
YShift(25,41)
YDist(25,24)
YShift(24,27)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 884, char 0x1de0 */
/* VTT 6.31 compiler Mon Jan 13 21:02:46 2020 */
SVTCA[Y]
MDAP[R], 13
MDRP[m&gt;RBl], 6
SHP[1], 36
MDAP[R], 25
SHP[1], 0
SHP[1], 26
SHP[1], 41
MDRP[m&gt;RBl], 24
SHP[2], 27
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="885">
      <instructions>
        <talk>/* VTTTalk Unicode 0x1de3 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(0)	/* min */
YAnchor(15)	/* max */

/* YDir: Stroke #0 */
YDist(15,8) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YDist(0,24) /*perpendicular to the stroke*/

Smooth()
</talk>
        <assembly>/* TT glyph 885, char 0x1de3 */
/* VTT 6.31 compiler Mon Jan 13 21:02:46 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 15
MDRP[m&gt;RBl], 8
SRP0[], 0
MDRP[m&gt;RBl], 24
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="886">
      <instructions>
        <talk>/* VTTTalk glyph 886, char 0x1de4 */
/* GUI generated Sun Jan 12 07:48:15 2020 */

/* Y direction */
YAnchor(0)
YShift(0,10)
YAnchor(22)
YShift(22,28)
YShift(22,38)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 886, char 0x1de4 */
/* VTT 6.31 compiler Mon Jan 13 21:02:46 2020 */
SVTCA[Y]
MDAP[R], 0
SHP[2], 10
MDAP[R], 22
SHP[1], 28
SHP[1], 38
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="887">
      <instructions>
        <talk>/* VTTTalk glyph 887, char 0x1de5 */
/* GUI generated Sun Jan 12 07:49:07 2020 */

/* Y direction */
YAnchor(10)
YShift(10,22)
YAnchor(27)
YShift(27,0)
YDist(27,28)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 887, char 0x1de5 */
/* VTT 6.31 compiler Mon Jan 13 21:02:46 2020 */
SVTCA[Y]
MDAP[R], 10
SHP[1], 22
MDAP[R], 27
SHP[1], 0
MDRP[m&gt;RBl], 28
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="888">
      <instructions>
        <talk>/* VTTTalk glyph 888, char 0x1de6 */
/* GUI generated Sun Jan 12 07:50:00 2020 */

/* Y direction */
YAnchor(3)
YShift(3,0)
YShift(3,23)
YAnchor(18)
YShift(18,7)
YShift(18,15)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 888, char 0x1de6 */
/* VTT 6.31 compiler Mon Jan 13 21:02:46 2020 */
SVTCA[Y]
MDAP[R], 3
SHP[1], 0
SHP[1], 23
MDAP[R], 18
SHP[1], 7
SHP[1], 15
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="889">
      <instructions>
        <talk>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(0)	/* min */
YAnchor(1)	/* max */

/* YDir: Stroke #0 */
YDist(1,28) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YDist(0,4) /*perpendicular to the stroke*/

Smooth()
</talk>
        <assembly>/* TT glyph 889, char 0xffff */
/* VTT 6.31 compiler Mon Jan 13 21:02:46 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 1
MDRP[m&gt;RBl], 28
SRP0[], 0
MDRP[m&gt;RBl], 4
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="890">
      <instructions>
        <talk>/* VTTTalk glyph 890, char 0x16a0 */
/* GUI generated Sat Jan 11 17:51:32 2020 */

/* Y direction */
YAnchor(31,86)
YShift(31,0)
YLink(31,32,87)
YAnchor(38,85)
YShift(38,2)
YShift(38,9)
YShift(38,20)
YShift(38,29)
YShift(38,43)
YInterpolate(31,14,4,38)
YDist(14,15)
YDist(4,5)
YLink(38,37,87)
YShift(37,30)
YShift(37,42)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 890, char 0x16a0 */
/* VTT 6.31 compiler Mon Jan 13 21:02:46 2020 */
SVTCA[Y]
MIAP[R], 31, 86
SHP[1], 0
MIRP[m&gt;RBl], 32, 87
MIAP[R], 38, 85
SHP[1], 2
SHP[1], 9
SHP[1], 20
SHP[1], 29
SHP[1], 43
SRP2[], 31
IP[], 14
IP[], 4
SRP0[], 14
MDRP[m&gt;RBl], 15
SRP0[], 4
MDRP[m&gt;RBl], 5
SRP0[], 38
MIRP[m&gt;RBl], 37, 87
SHP[2], 30
SHP[2], 42
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="891">
      <instructions>
        <talk>/* VTTTalk glyph 891, char 0x16a1 */
/* GUI generated Sat Jan 11 17:52:22 2020 */

/* Y direction */
YAnchor(27,86)
YShift(27,0)
YLink(27,28,87)
YAnchor(56,85)
YShift(56,2)
YShift(56,9)
YShift(56,21)
YShift(56,35)
YShift(56,51)
YInterpolate(27,15,4,56)
YDist(15,16)
YDist(4,5)
YLink(56,55,87)
YShift(55,36)
YShift(55,50)
YShift(55,43)
YDist(43,37)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 891, char 0x16a1 */
/* VTT 6.31 compiler Mon Jan 13 21:02:46 2020 */
SVTCA[Y]
MIAP[R], 27, 86
SHP[1], 0
MIRP[m&gt;RBl], 28, 87
MIAP[R], 56, 85
SHP[1], 2
SHP[1], 9
SHP[1], 21
SHP[1], 35
SHP[1], 51
SRP2[], 27
IP[], 15
IP[], 4
SRP0[], 15
MDRP[m&gt;RBl], 16
SRP0[], 4
MDRP[m&gt;RBl], 5
SRP0[], 56
MIRP[m&gt;RBl], 55, 87
SHP[2], 36
SHP[2], 50
SHP[2], 43
SRP0[], 43
MDRP[m&gt;RBl], 37
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="892">
      <instructions>
        <talk>/* VTTTalk glyph 892, char 0x16a2 */
/* GUI generated Sat Jan 11 17:53:27 2020 */

/* Y direction */
YAnchor(2,85)
YDist(2,8)
YAnchor(11,85)
YShift(11,5)
YShift(11,10)
YShift(11,16)
YLink(11,12,87)
YShift(12,17)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 892, char 0x16a2 */
/* VTT 6.31 compiler Mon Jan 13 21:02:46 2020 */
SVTCA[Y]
MIAP[R], 2, 85
MDRP[m&gt;RBl], 8
MIAP[R], 11, 85
SHP[1], 5
SHP[1], 10
SHP[1], 16
MIRP[m&gt;RBl], 12, 87
SHP[2], 17
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="893">
      <instructions>
        <talk>/* VTTTalk glyph 893, char 0x16a3 */
/* GUI generated Fri Jan 10 17:36:54 2020 */

/* Y direction */
YAnchor(2,85)
YDist(2,8)
YAnchor(14,86)
YShift(14,5)
YShift(14,10)
YShift(14,15)
YLink(14,12,87)
YShift(12,17)
YInterpolate(14,20,2)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 893, char 0x16a3 */
/* VTT 6.31 compiler Mon Jan 13 21:02:46 2020 */
SVTCA[Y]
MIAP[R], 2, 85
MDRP[m&gt;RBl], 8
MIAP[R], 14, 86
SHP[1], 5
SHP[1], 10
SHP[1], 15
MIRP[m&lt;RGr], 12, 87
SHP[2], 17
SRP2[], 2
IP[], 20
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="894">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x16a4 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 892, 0, 0
OFFSET[R], 829, 431, -619

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="895">
      <instructions>
        <talk>/* VTTTalk glyph 895, char 0x16a5 */
/* GUI generated Fri Jan 10 17:39:33 2020 */

/* Y direction */
YAnchor(2,85)
YDist(2,8)
YAnchor(20,86)
YShift(20,5)
YShift(20,10)
YShift(20,11)
YShift(20,21)
YInterpolate(2,13,20)
YDist(13,14)
YLink(20,18,87)
YShift(18,23)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 895, char 0x16a5 */
/* VTT 6.31 compiler Mon Jan 13 21:02:46 2020 */
SVTCA[Y]
MIAP[R], 2, 85
MDRP[m&gt;RBl], 8
MIAP[R], 20, 86
SHP[1], 5
SHP[1], 10
SHP[1], 11
SHP[1], 21
SRP2[], 2
IP[], 13
SRP0[], 13
MDRP[m&gt;RBl], 14
SRP0[], 20
MIRP[m&lt;RGr], 18, 87
SHP[2], 23
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="896">
      <instructions>
        <talk>/* VTTTalk glyph 896, char 0x16a6 */
/* GUI generated Sat Jan 11 07:43:57 2020 */

/* Y direction */
YAnchor(14,86)
YShift(14,0)
YLink(14,15,87)
YAnchor(21,85)
YShift(21,1)
YLink(21,20,87)
YInterpolate(14,6,4,3,21)
YShift(6,9)
YShift(3,12)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 896, char 0x16a6 */
/* VTT 6.31 compiler Mon Jan 13 21:02:46 2020 */
SVTCA[Y]
MIAP[R], 14, 86
SHP[1], 0
MIRP[m&gt;RBl], 15, 87
MIAP[R], 21, 85
SHP[1], 1
MIRP[m&gt;RBl], 20, 87
SRP2[], 14
SLOOP[], 3
IP[], 6, 4, 3
SRP1[], 6
SHP[1], 9
SRP1[], 3
SHP[1], 12
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="897">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x16a7 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 896, 0, 0
OFFSET[R], 829, 343, -445

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="898">
      <instructions>
        <talk>/* VTTTalk glyph 898, char 0x16a8 */
/* GUI generated Sat Jan 11 07:45:56 2020 */

/* Y direction */
YAnchor(1,85)
YLink(1,23,87)
YShift(1,25)
YAnchor(17,86)
YShift(17,0)
YLink(17,18,87)
YInterpolate(17,13,6,1)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 898, char 0x16a8 */
/* VTT 6.31 compiler Mon Jan 13 21:02:46 2020 */
SVTCA[Y]
MIAP[R], 1, 85
MIRP[m&gt;RBl], 23, 87
SHP[1], 25
MIAP[R], 17, 86
SHP[1], 0
MIRP[m&gt;RBl], 18, 87
SRP2[], 1
IP[], 13
IP[], 6
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="899">
      <instructions>
        <talk>/* VTTTalk glyph 899, char 0x16a9 */
/* GUI generated Sat Jan 11 18:33:30 2020 */

/* Y direction */
YAnchor(1,85)
YShift(1,4)
YShift(1,30)
YShift(1,33)
YLink(1,28,87)
YShift(28,32)
YAnchor(22,86)
YShift(22,0)
YLink(22,23,88)
YInterpolate(22,19,1)
YShift(19,11)
YLink(19,21,87)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 899, char 0x16a9 */
/* VTT 6.31 compiler Mon Jan 13 21:02:46 2020 */
SVTCA[Y]
MIAP[R], 1, 85
SHP[1], 4
SHP[1], 30
SHP[1], 33
MIRP[m&gt;RBl], 28, 87
SHP[2], 32
MIAP[R], 22, 86
SHP[1], 0
MIRP[m&gt;RBl], 23, 88
SRP2[], 1
IP[], 19
SRP1[], 19
SHP[1], 11
SRP0[], 19
MIRP[m&lt;RGr], 21, 87
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="900">
      <instructions>
        <talk>/* VTTTalk glyph 900, char 0x16aa */
/* GUI generated Sat Jan 11 18:36:39 2020 */

/* Y direction */
YAnchor(17,86)
YShift(17,0)
YLink(17,18,87)
YAnchor(24,85)
YShift(24,1)
YShift(24,4)
YShift(24,28)
YInterpolate(17,13,6,24)
YLink(24,23,87)
YShift(23,27)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 900, char 0x16aa */
/* VTT 6.31 compiler Mon Jan 13 21:02:46 2020 */
SVTCA[Y]
MIAP[R], 17, 86
SHP[1], 0
MIRP[m&gt;RBl], 18, 87
MIAP[R], 24, 85
SHP[1], 1
SHP[1], 4
SHP[1], 28
SRP2[], 17
IP[], 13
IP[], 6
MIRP[m&gt;RBl], 23, 87
SHP[2], 27
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="901">
      <instructions>
        <talk>/* VTTTalk glyph 901, char 0x16ab */
/* GUI generated Sat Jan 11 18:37:27 2020 */

/* Y direction */
YAnchor(1,85)
YLink(1,23,87)
YShift(1,24)
YAnchor(17,86)
YShift(17,16)
YLink(17,18,87)
YInterpolate(17,13,6,1)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 901, char 0x16ab */
/* VTT 6.31 compiler Mon Jan 13 21:02:46 2020 */
SVTCA[Y]
MIAP[R], 1, 85
MIRP[m&gt;RBl], 23, 87
SHP[1], 24
MIAP[R], 17, 86
SHP[1], 16
MIRP[m&gt;RBl], 18, 87
SRP2[], 1
IP[], 13
IP[], 6
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="902">
      <instructions>
        <talk>/* VTTTalk glyph 902, char 0x16ac */
/* GUI generated Sat Jan 11 18:38:38 2020 */

/* Y direction */
YAnchor(24,86)
YShift(24,0)
YLink(24,25,87)
YAnchor(31,85)
YShift(31,1)
YLink(31,30,87)
YInterpolate(24,14,4,18,8,31)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 902, char 0x16ac */
/* VTT 6.31 compiler Mon Jan 13 21:02:46 2020 */
SVTCA[Y]
MIAP[R], 24, 86
SHP[1], 0
MIRP[m&gt;RBl], 25, 87
MIAP[R], 31, 85
SHP[1], 1
MIRP[m&gt;RBl], 30, 87
SRP2[], 24
SLOOP[], 4
IP[], 14, 4, 18, 8
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="903">
      <instructions>
        <talk>/* VTTTalk glyph 903, char 0x16ad */
/* GUI generated Sat Jan 11 18:39:33 2020 */

/* Y direction */
YUpToGrid(20)
YAnchor(20,85)
YShift(20,15)
YLink(20,19,87)
YAnchor(23,86)
YShift(23,14)
YLink(23,24,87)
YInterpolate(23,13,6,20)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 903, char 0x16ad */
/* VTT 6.31 compiler Mon Jan 13 21:02:46 2020 */
SVTCA[Y]
RUTG[]
MIAP[R], 20, 85
SHP[1], 15
RTG[]
MIRP[m&gt;RBl], 19, 87
MIAP[R], 23, 86
SHP[1], 14
MIRP[m&gt;RBl], 24, 87
SRP2[], 20
IP[], 13
IP[], 6
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="904">
      <instructions>
        <talk>/* VTTTalk glyph 904, char 0x16ae */
/* GUI generated Sat Jan 11 18:40:18 2020 */

/* Y direction */
YAnchor(20,85)
YShift(20,15)
YLink(20,19,87)
YAnchor(23,86)
YShift(23,14)
YLink(23,24,87)
YInterpolate(23,7,0,20)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 904, char 0x16ae */
/* VTT 6.31 compiler Mon Jan 13 21:02:46 2020 */
SVTCA[Y]
MIAP[R], 20, 85
SHP[1], 15
MIRP[m&gt;RBl], 19, 87
MIAP[R], 23, 86
SHP[1], 14
MIRP[m&gt;RBl], 24, 87
SRP2[], 20
IP[], 7
IP[], 0
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="905">
      <instructions>
        <talk>/* VTTTalk glyph 905, char 0x16af */
/* GUI generated Sat Jan 11 18:41:10 2020 */

/* Y direction */
YAnchor(26,85)
YShift(26,21)
YLink(26,25,87)
YAnchor(29,86)
YShift(29,20)
YLink(29,30,87)
YInterpolate(29,10,0,15,5,26)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 905, char 0x16af */
/* VTT 6.31 compiler Mon Jan 13 21:02:46 2020 */
SVTCA[Y]
MIAP[R], 26, 85
SHP[1], 21
MIRP[m&gt;RBl], 25, 87
MIAP[R], 29, 86
SHP[1], 20
MIRP[m&gt;RBl], 30, 87
SRP2[], 26
SLOOP[], 4
IP[], 10, 0, 15, 5
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="906">
      <instructions>
        <talk>/* VTTTalk glyph 906, char 0x16b0 */
/* GUI generated Sat Jan 11 18:42:26 2020 */

/* Y direction */
YAnchor(23,85)
YShift(23,18)
YLink(23,22,87)
YAnchor(26,86)
YShift(26,17)
YLink(26,27,87)
YInterpolate(26,10,0,5,23)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 906, char 0x16b0 */
/* VTT 6.31 compiler Mon Jan 13 21:02:46 2020 */
SVTCA[Y]
MIAP[R], 23, 85
SHP[1], 18
MIRP[m&gt;RBl], 22, 87
MIAP[R], 26, 86
SHP[1], 17
MIRP[m&gt;RBl], 27, 87
SRP2[], 23
SLOOP[], 3
IP[], 10, 0, 5
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="907">
      <instructions>
        <talk>/* VTTTalk glyph 907, char 0x16b1 */
/* GUI generated Sat Jan 11 18:45:46 2020 */

/* Y direction */
YAnchor(10,86)
YShift(10,6)
YShift(10,11)
YShift(10,25)
YLink(10,9,87)
YShift(9,24)
YAnchor(28,85)
YShift(28,1)
YLink(28,27,87)
YInterpolate(10,5,16,28)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 907, char 0x16b1 */
/* VTT 6.31 compiler Mon Jan 13 21:02:46 2020 */
SVTCA[Y]
MIAP[R], 10, 86
SHP[1], 6
SHP[1], 11
SHP[1], 25
MIRP[m&gt;RBl], 9, 87
SHP[2], 24
MIAP[R], 28, 85
SHP[1], 1
MIRP[m&gt;RBl], 27, 87
SRP2[], 10
IP[], 5
IP[], 16
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="908">
      <instructions>
        <talk>/* VTTTalk glyph 908, char 0x16b2 */
/* GUI generated Sat Jan 11 11:06:18 2020 */

/* Y direction */
YAnchor(5)
YAnchor(14)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 908, char 0x16b2 */
/* VTT 6.31 compiler Mon Jan 13 21:02:46 2020 */
SVTCA[Y]
MDAP[R], 5
MDAP[R], 14
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="909">
      <instructions>
        <talk>/* VTTTalk glyph 909, char 0x16b3 */
/* GUI generated Sat Jan 11 21:51:38 2020 */

/* Y direction */
YAnchor(16,86)
YShift(16,0)
YShift(16,12)
YShift(16,21)
YLink(16,17,87)
YShift(17,24)
YAnchor(28,85)
YShift(28,13)
YLink(28,27,87)
YInterpolate(16,6,28)
YDist(6,5)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 909, char 0x16b3 */
/* VTT 6.31 compiler Mon Jan 13 21:02:46 2020 */
SVTCA[Y]
MIAP[R], 16, 86
SHP[1], 0
SHP[1], 12
SHP[1], 21
MIRP[m&gt;RBl], 17, 87
SHP[2], 24
MIAP[R], 28, 85
SHP[1], 13
MIRP[m&gt;RBl], 27, 87
SRP2[], 16
IP[], 6
SRP0[], 6
MDRP[m&gt;RBl], 5
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="910">
      <instructions>
        <talk>/* VTTTalk glyph 910, char 0x16b4 */
/* GUI generated Sat Jan 11 18:47:31 2020 */

/* Y direction */
YAnchor(12,86)
YLink(12,13,87)
YShift(12,17)
YAnchor(23,85)
YShift(23,6)
YShift(23,18)
YShift(23,28)
YInterpolate(12,0,23)
YDist(0,1)
YLink(23,22,87)
YShift(22,27)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 910, char 0x16b4 */
/* VTT 6.31 compiler Mon Jan 13 21:02:46 2020 */
SVTCA[Y]
MIAP[R], 12, 86
MIRP[m&gt;RBl], 13, 87
SHP[1], 17
MIAP[R], 23, 85
SHP[1], 6
SHP[1], 18
SHP[1], 28
SRP2[], 12
IP[], 0
SRP0[], 0
MDRP[m&gt;RBl], 1
SRP0[], 23
MIRP[m&gt;RBl], 22, 87
SHP[2], 27
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="911">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x16b5 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 910, 0, 0
OFFSET[R], 829, 311, 8
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="912">
      <instructions>
        <talk>/* VTTTalk glyph 912, char 0x16b6 */
/* GUI generated Sat Jan 11 18:48:44 2020 */

/* Y direction */
YAnchor(34,85)
YShift(34,25)
YShift(34,43)
YLink(34,35,87)
YShift(35,42)
YAnchor(36,86)
YShift(36,15)
YLink(36,37,87)
YInterpolate(36,0,19,34)
YDist(0,7)
YDist(19,20)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 912, char 0x16b6 */
/* VTT 6.31 compiler Mon Jan 13 21:02:46 2020 */
SVTCA[Y]
MIAP[R], 34, 85
SHP[1], 25
SHP[1], 43
MIRP[m&gt;RBl], 35, 87
SHP[2], 42
MIAP[R], 36, 86
SHP[1], 15
MIRP[m&gt;RBl], 37, 87
SRP2[], 34
IP[], 0
IP[], 19
SRP0[], 0
MDRP[m&lt;RWh], 7
SRP0[], 19
MDRP[m&gt;RBl], 20
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="913">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x16b7 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 115, 0, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="914">
      <instructions>
        <talk>/* VTTTalk glyph 914, char 0x16b8 */
/* GUI generated Sat Jan 11 21:52:43 2020 */

/* Y direction */
YAnchor(23,85)
YShift(23,13)
YShift(23,18)
YShift(23,27)
YLink(23,24,87)
YShift(24,26)
YAnchor(39,86)
YShift(39,12)
YShift(39,16)
YShift(39,30)
YInterpolate(39,0,6,1,11,2,10,23)
YLink(39,38,87)
YShift(38,31)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 914, char 0x16b8 */
/* VTT 6.31 compiler Mon Jan 13 21:02:46 2020 */
SVTCA[Y]
MIAP[R], 23, 85
SHP[1], 13
SHP[1], 18
SHP[1], 27
MIRP[m&gt;RBl], 24, 87
SHP[2], 26
MIAP[R], 39, 86
SHP[1], 12
SHP[1], 16
SHP[1], 30
SRP2[], 23
SLOOP[], 6
IP[], 0, 6, 1, 11, 2, 10
MIRP[m&gt;RBl], 38, 87
SHP[2], 31
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="915">
      <instructions>
        <talk>/* VTTTalk glyph 915, char 0x16b9 */
/* GUI generated Sat Jan 11 21:55:48 2020 */

/* Y direction */
YAnchor(3)
YShift(3,4)
YAnchor(9)
YShift(9,10)
YAnchor(17,86)
YShift(17,0)
YLink(17,16,87)
YAnchor(20,85)
YShift(20,1)
YLink(20,19,87)
YInterpolate(17,5,8,11,20)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 915, char 0x16b9 */
/* VTT 6.31 compiler Mon Jan 13 21:02:46 2020 */
SVTCA[Y]
MDAP[R], 3
SHP[1], 4
MDAP[R], 9
SHP[1], 10
MIAP[R], 17, 86
SHP[1], 0
MIRP[m&gt;RBl], 16, 87
MIAP[R], 20, 85
SHP[1], 1
MIRP[m&gt;RBl], 19, 87
SRP2[], 17
SLOOP[], 3
IP[], 5, 8, 11
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="916">
      <instructions>
        <talk>/* VTTTalk glyph 916, char 0x16ba */
/* GUI generated Sat Jan 11 21:57:13 2020 */

/* Y direction */
YAnchor(16,86)
YShift(16,7)
YShift(16,8)
YShift(16,17)
YLink(16,15,87)
YShift(15,18)
YAnchor(25,85)
YShift(25,6)
YShift(25,9)
YShift(25,29)
YInterpolate(16,0,2,25)
YShift(0,3)
YShift(2,1)
YLink(25,26,87)
YShift(26,28)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 916, char 0x16ba */
/* VTT 6.31 compiler Mon Jan 13 21:02:46 2020 */
SVTCA[Y]
MIAP[R], 16, 86
SHP[1], 7
SHP[1], 8
SHP[1], 17
MIRP[m&gt;RBl], 15, 87
SHP[2], 18
MIAP[R], 25, 85
SHP[1], 6
SHP[1], 9
SHP[1], 29
SRP2[], 16
IP[], 0
IP[], 2
SRP1[], 0
SHP[1], 3
SRP1[], 2
SHP[1], 1
MIRP[m&gt;RBl], 26, 87
SHP[2], 28
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="917">
      <instructions>
        <talk>/* VTTTalk glyph 917, char 0x16bb */
/* GUI generated Sat Jan 11 21:58:36 2020 */

/* Y direction */
YAnchor(13,86)
YShift(13,3)
YShift(13,4)
YShift(13,12)
YLink(13,14,87)
YShift(14,11)
YAnchor(21,85)
YShift(21,2)
YShift(21,5)
YShift(21,25)
YLink(21,22,87)
YShift(22,24)
YInterpolate(13,35,31,34,30,21)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 917, char 0x16bb */
/* VTT 6.31 compiler Mon Jan 13 21:02:46 2020 */
SVTCA[Y]
MIAP[R], 13, 86
SHP[1], 3
SHP[1], 4
SHP[1], 12
MIRP[m&gt;RBl], 14, 87
SHP[2], 11
MIAP[R], 21, 85
SHP[1], 2
SHP[1], 5
SHP[1], 25
MIRP[m&gt;RBl], 22, 87
SHP[2], 24
SRP2[], 13
SLOOP[], 4
IP[], 35, 31, 34, 30
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="918">
      <instructions>
        <talk>/* VTTTalk glyph 918, char 0x16bc */
/* GUI generated Sat Jan 11 22:00:00 2020 */

/* Y direction */
YAnchor(22,85)
YShift(22,17)
YLink(22,21,87)
YAnchor(29,86)
YShift(29,19)
YLink(29,28,87)
YInterpolate(29,6,2,22)
YShift(6,9)
YShift(2,13)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 918, char 0x16bc */
/* VTT 6.31 compiler Mon Jan 13 21:02:46 2020 */
SVTCA[Y]
MIAP[R], 22, 85
SHP[1], 17
MIRP[m&gt;RBl], 21, 87
MIAP[R], 29, 86
SHP[1], 19
MIRP[m&gt;RBl], 28, 87
SRP2[], 22
IP[], 6
IP[], 2
SRP1[], 6
SHP[1], 9
SRP1[], 2
SHP[1], 13
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="919">
      <instructions>
        <talk>/* VTTTalk glyph 919, char 0x16bd */
/* GUI generated Sat Jan 11 22:00:56 2020 */

/* Y direction */
YAnchor(22,85)
YShift(22,17)
YLink(22,21,87)
YAnchor(25,86)
YShift(25,16)
YLink(25,26,87)
YInterpolate(25,8,22)
YDist(8,0)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 919, char 0x16bd */
/* VTT 6.31 compiler Mon Jan 13 21:02:46 2020 */
SVTCA[Y]
MIAP[R], 22, 85
SHP[1], 17
MIRP[m&gt;RBl], 21, 87
MIAP[R], 25, 86
SHP[1], 16
MIRP[m&gt;RBl], 26, 87
SRP2[], 22
IP[], 8
SRP0[], 8
MDRP[m&lt;RWh], 0
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="920">
      <instructions>
        <talk>/* VTTTalk glyph 920, char 0x16be */
/* GUI generated Sat Jan 11 22:01:38 2020 */

/* Y direction */
YAnchor(14,85)
YShift(14,9)
YLink(14,13,87)
YAnchor(17,86)
YShift(17,8)
YLink(17,18,87)
YInterpolate(17,6,2,14)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 920, char 0x16be */
/* VTT 6.31 compiler Mon Jan 13 21:02:46 2020 */
SVTCA[Y]
MIAP[R], 14, 85
SHP[1], 9
MIRP[m&gt;RBl], 13, 87
MIAP[R], 17, 86
SHP[1], 8
MIRP[m&gt;RBl], 18, 87
SRP2[], 14
IP[], 6
IP[], 2
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="921">
      <instructions>
        <talk>/* VTTTalk glyph 921, char 0x16bf */
/* GUI generated Sat Jan 11 22:02:34 2020 */

/* Y direction */
YAnchor(12,85)
YShift(12,7)
YLink(12,11,87)
YAnchor(15,86)
YShift(15,6)
YLink(15,16,87)
YInterpolate(15,4,12)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 921, char 0x16bf */
/* VTT 6.31 compiler Mon Jan 13 21:02:46 2020 */
SVTCA[Y]
MIAP[R], 12, 85
SHP[1], 7
MIRP[m&gt;RBl], 11, 87
MIAP[R], 15, 86
SHP[1], 6
MIRP[m&gt;RBl], 16, 87
SRP2[], 12
IP[], 4
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="922">
      <instructions>
        <talk>/* VTTTalk glyph 922, char 0x16c0 */
/* GUI generated Sat Jan 11 22:03:17 2020 */

/* Y direction */
YAnchor(30,85)
YShift(30,25)
YLink(30,29,87)
YAnchor(37,86)
YShift(37,27)
YLink(37,36,87)
YInterpolate(37,22,8,18,30)
YDist(8,0)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 922, char 0x16c0 */
/* VTT 6.31 compiler Mon Jan 13 21:02:46 2020 */
SVTCA[Y]
MIAP[R], 30, 85
SHP[1], 25
MIRP[m&gt;RBl], 29, 87
MIAP[R], 37, 86
SHP[1], 27
MIRP[m&gt;RBl], 36, 87
SRP2[], 30
SLOOP[], 3
IP[], 22, 8, 18
SRP0[], 8
MDRP[m&lt;RGr], 0
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="923">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x16c1 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 41, 0, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="924">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x16c2 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

OFFSET[R], 919, 0, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="925">
      <instructions>
        <talk>/* VTTTalk glyph 925, char 0x16c3 */
/* GUI generated Sat Jan 11 22:03:46 2020 */

/* Y direction */
YAnchor(0)
YShift(0,6)
YAnchor(8)
YShift(8,4)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 925, char 0x16c3 */
/* VTT 6.31 compiler Mon Jan 13 21:02:46 2020 */
SVTCA[Y]
MDAP[R], 0
SHP[2], 6
MDAP[R], 8
SHP[1], 4
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="926">
      <instructions>
        <talk>/* VTTTalk glyph 926, char 0x16c4 */
/* GUI generated Sat Jan 11 22:04:14 2020 */

/* Y direction */
YAnchor(14,85)
YShift(14,9)
YLink(14,13,87)
YAnchor(17,86)
YShift(17,8)
YLink(17,18,87)
YInterpolate(17,0,2,14)
YShift(0,4)
YShift(2,6)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 926, char 0x16c4 */
/* VTT 6.31 compiler Mon Jan 13 21:02:46 2020 */
SVTCA[Y]
MIAP[R], 14, 85
SHP[1], 9
MIRP[m&gt;RBl], 13, 87
MIAP[R], 17, 86
SHP[1], 8
MIRP[m&gt;RBl], 18, 87
SRP2[], 14
IP[], 0
IP[], 2
SRP1[], 0
SHP[1], 4
SRP1[], 2
SHP[1], 6
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="927">
      <instructions>
        <talk>/* VTTTalk glyph 927, char 0x16c5 */
/* GUI generated Sat Jan 11 22:07:48 2020 */

/* Y direction */
YAnchor(14,85)
YShift(14,9)
YLink(14,13,87)
YAnchor(17,86)
YShift(17,8)
YLink(17,18,87)
YInterpolate(17,1,5,14)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 927, char 0x16c5 */
/* VTT 6.31 compiler Mon Jan 13 21:02:46 2020 */
SVTCA[Y]
MIAP[R], 14, 85
SHP[1], 9
MIRP[m&gt;RBl], 13, 87
MIAP[R], 17, 86
SHP[1], 8
MIRP[m&gt;RBl], 18, 87
SRP2[], 14
IP[], 1
IP[], 5
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="928">
      <instructions>
        <talk>/* VTTTalk glyph 928, char 0x16c6 */
/* GUI generated Sat Jan 11 22:08:25 2020 */

/* Y direction */
YAnchor(12,85)
YShift(12,7)
YLink(12,11,87)
YUpToGrid(15)
YAnchor(15,86)
YShift(15,6)
YLink(15,16,87)
YInterpolate(15,1,12)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 928, char 0x16c6 */
/* VTT 6.31 compiler Mon Jan 13 21:02:46 2020 */
SVTCA[Y]
MIAP[R], 12, 85
SHP[1], 7
MIRP[m&gt;RBl], 11, 87
RUTG[]
MIAP[R], 15, 86
SHP[1], 6
RTG[]
MIRP[m&gt;RBl], 16, 87
SRP2[], 12
IP[], 1
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="929">
      <instructions>
        <talk>/* VTTTalk glyph 929, char 0x16c7 */
/* GUI generated Sat Jan 11 12:00:09 2020 */

/* Y direction */
YAnchor(0,86)
YAnchor(7,85)
YInterpolate(0,5,13,7)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 929, char 0x16c7 */
/* VTT 6.31 compiler Mon Jan 13 21:02:46 2020 */
SVTCA[Y]
MIAP[R], 0, 86
MIAP[R], 7, 85
IP[], 5
IP[], 13
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="930">
      <instructions>
        <talk>/* VTTTalk glyph 930, char 0x16c8 */
/* GUI generated Sat Jan 11 22:21:57 2020 */

/* Y direction */
YAnchor(18,86)
YShift(18,10)
YShift(18,15)
YShift(18,21)
YShift(18,26)
YLink(18,19,87)
YShift(19,27)
YAnchor(24,85)
YShift(24,1)
YShift(24,4)
YShift(24,9)
YShift(24,33)
YInterpolate(18,13,6,24)
YLink(24,23,87)
YShift(23,32)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 930, char 0x16c8 */
/* VTT 6.31 compiler Mon Jan 13 21:02:46 2020 */
SVTCA[Y]
MIAP[R], 18, 86
SHP[1], 10
SHP[1], 15
SHP[1], 21
SHP[1], 26
MIRP[m&gt;RBl], 19, 87
SHP[2], 27
MIAP[R], 24, 85
SHP[1], 1
SHP[1], 4
SHP[1], 9
SHP[1], 33
SRP2[], 18
IP[], 13
IP[], 6
MIRP[m&gt;RBl], 23, 87
SHP[2], 32
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="931">
      <instructions>
        <talk>/* VTTTalk glyph 931, char 0x16c9 */
/* GUI generated Sun Jan 12 04:23:30 2020 */

/* Y direction */
YAnchor(12,86)
YShift(12,0)
YLink(12,13,87)
YAnchor(19,85)
YShift(19,1)
YShift(19,5)
YShift(19,10)
YShift(19,24)
YShift(19,29)
YInterpolate(12,4,19)
YShift(4,8)
YDist(4,7)
YShift(7,9)
YLink(19,18,87)
YShift(18,23)
YShift(18,28)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 931, char 0x16c9 */
/* VTT 6.31 compiler Mon Jan 13 21:02:46 2020 */
SVTCA[Y]
MIAP[R], 12, 86
SHP[1], 0
MIRP[m&gt;RBl], 13, 87
MIAP[R], 19, 85
SHP[1], 1
SHP[1], 5
SHP[1], 10
SHP[1], 24
SHP[1], 29
SRP2[], 12
IP[], 4
SRP1[], 4
SHP[1], 8
SRP0[], 4
MDRP[m&gt;RBl], 7
SHP[2], 9
SRP0[], 19
MIRP[m&gt;RBl], 18, 87
SHP[2], 23
SHP[2], 28
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="932">
      <instructions>
        <talk>/* VTTTalk Unicode 0x16ca */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 0 19  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(0)	/* min */
YAnchor(8)	/* max */

Smooth()
</talk>
        <assembly>/* TT glyph 932, char 0x16ca */
/* VTT 6.31 compiler Mon Jan 13 21:02:46 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 8
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="933">
      <instructions>
        <talk>/* VTTTalk glyph 933, char 0x16cb */
/* GUI generated Sat Jan 11 22:27:54 2020 */

/* Y direction */
YAnchor(8,86)
YShift(8,0)
YLink(8,9,87)
YAnchor(15,85)
YShift(15,3)
YLink(15,14,87)
YInterpolate(8,2,5,1,6,15)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 933, char 0x16cb */
/* VTT 6.31 compiler Mon Jan 13 21:02:46 2020 */
SVTCA[Y]
MIAP[R], 8, 86
SHP[1], 0
MIRP[m&gt;RBl], 9, 87
MIAP[R], 15, 85
SHP[1], 3
MIRP[m&gt;RBl], 14, 87
SRP2[], 8
SLOOP[], 4
IP[], 2, 5, 1, 6
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="934">
      <instructions>
        <talk>/* VTTTalk glyph 934, char 0x16cc */
/* GUI generated Sat Jan 11 22:29:14 2020 */

/* Y direction */
YAnchor(6,85)
YShift(6,1)
YLink(6,5,87)
YDist(5,0)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 934, char 0x16cc */
/* VTT 6.31 compiler Mon Jan 13 21:02:46 2020 */
SVTCA[Y]
MIAP[R], 6, 85
SHP[1], 1
MIRP[M&gt;RBl], 5, 87
MDRP[m&lt;RWh], 0
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="935">
      <instructions>
        <talk>/* VTTTalk glyph 935, char 0x16cd */
/* GUI generated Sat Jan 11 22:30:49 2020 */

/* Y direction */
YAnchor(22,85)
YShift(22,17)
YLink(22,21,87)
YDist(21,8)
YDist(8,0)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 935, char 0x16cd */
/* VTT 6.31 compiler Mon Jan 13 21:02:46 2020 */
SVTCA[Y]
MIAP[R], 22, 85
SHP[1], 17
MIRP[M&gt;RBl], 21, 87
MDRP[M&lt;RGr], 8
MDRP[m&lt;RGr], 0
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="936">
      <instructions>
        <talk>/* VTTTalk glyph 936, char 0x16ce */
/* GUI generated Sat Jan 11 22:31:39 2020 */

/* Y direction */
YAnchor(22,85)
YShift(22,9)
YLink(22,21,87)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 936, char 0x16ce */
/* VTT 6.31 compiler Mon Jan 13 21:02:46 2020 */
SVTCA[Y]
MIAP[R], 22, 85
SHP[1], 9
MIRP[m&gt;RBl], 21, 87
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="937">
      <instructions>
        <talk>/* VTTTalk glyph 937, char 0x16cf */
/* GUI generated Sat Jan 11 22:33:46 2020 */

/* Y direction */
YAnchor(9,85)
YShift(9,1)
YShift(9,18)
YDist(9,4)
YShift(4,15)
YDist(4,7)
YShift(7,12)
YAnchor(20,86)
YShift(20,0)
YLink(20,21,87)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 937, char 0x16cf */
/* VTT 6.31 compiler Mon Jan 13 21:02:46 2020 */
SVTCA[Y]
MIAP[R], 9, 85
SHP[1], 1
SHP[1], 18
MDRP[M&lt;RGr], 4
SHP[2], 15
MDRP[m&gt;RBl], 7
SHP[2], 12
MIAP[R], 20, 86
SHP[1], 0
MIRP[m&gt;RBl], 21, 87
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="938">
      <instructions>
        <talk>/* VTTTalk glyph 938, char 0x16d0 */
/* GUI generated Sat Jan 11 22:35:14 2020 */

/* Y direction */
YAnchor(9,85)
YShift(9,1)
YDist(9,4)
YDist(4,7)
YAnchor(12,86)
YShift(12,0)
YLink(12,13,87)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 938, char 0x16d0 */
/* VTT 6.31 compiler Mon Jan 13 21:02:46 2020 */
SVTCA[Y]
MIAP[R], 9, 85
SHP[1], 1
MDRP[M&lt;RGr], 4
MDRP[m&gt;RBl], 7
MIAP[R], 12, 86
SHP[1], 0
MIRP[m&gt;RBl], 13, 87
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="939">
      <instructions>
        <talk>/* VTTTalk glyph 939, char 0x16d1 */
/* GUI generated Sat Jan 11 22:37:14 2020 */

/* Y direction */
YAnchor(25,85)
YDist(25,20)
YDist(20,23)
YAnchor(28,86)
YShift(28,16)
YLink(28,29,87)
YInterpolate(28,0,8,25)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 939, char 0x16d1 */
/* VTT 6.31 compiler Mon Jan 13 21:02:46 2020 */
SVTCA[Y]
MIAP[R], 25, 85
MDRP[M&lt;RGr], 20
MDRP[m&gt;RBl], 23
MIAP[R], 28, 86
SHP[1], 16
MIRP[m&gt;RBl], 29, 87
SRP2[], 25
IP[], 0
IP[], 8
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="940">
      <instructions>
        <talk>/* VTTTalk glyph 940, char 0x16d2 */
/* GUI generated Sat Jan 11 22:42:10 2020 */

/* Y direction */
YAnchor(22,86)
YShift(22,0)
YShift(22,10)
YLink(22,23,87)
YAnchor(28,85)
YShift(28,1)
YShift(28,21)
YLink(28,27,87)
YInterpolate(22,14,17,28)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 940, char 0x16d2 */
/* VTT 6.31 compiler Mon Jan 13 21:02:46 2020 */
SVTCA[Y]
MIAP[R], 22, 86
SHP[1], 0
SHP[1], 10
MIRP[m&gt;RBl], 23, 87
MIAP[R], 28, 85
SHP[1], 1
SHP[1], 21
MIRP[m&gt;RBl], 27, 87
SRP2[], 22
IP[], 14
IP[], 17
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="941">
      <instructions>
        <talk>/* VTTTalk glyph 941, char 0x16d3 */
/* GUI generated Sat Jan 11 22:44:05 2020 */

/* Y direction */
YAnchor(20,85)
YShift(20,15)
YLink(20,19,87)
YAnchor(23,86)
YShift(23,14)
YLink(23,24,87)
YInterpolate(23,10,3,20)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 941, char 0x16d3 */
/* VTT 6.31 compiler Mon Jan 13 21:02:46 2020 */
SVTCA[Y]
MIAP[R], 20, 85
SHP[1], 15
MIRP[m&gt;RBl], 19, 87
MIAP[R], 23, 86
SHP[1], 14
MIRP[m&gt;RBl], 24, 87
SRP2[], 20
IP[], 10
IP[], 3
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="942">
      <instructions>
        <talk>/* VTTTalk glyph 942, char 0x16d4 */
/* GUI generated Sat Jan 11 22:46:41 2020 */

/* Y direction */
YAnchor(46,86)
YShift(46,24)
YShift(46,34)
YLink(46,47,87)
YAnchor(52,85)
YShift(52,25)
YShift(52,45)
YInterpolate(46,12,18,38,41,0,6,52)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 942, char 0x16d4 */
/* VTT 6.31 compiler Mon Jan 13 21:02:46 2020 */
SVTCA[Y]
MIAP[R], 46, 86
SHP[1], 24
SHP[1], 34
MIRP[m&gt;RBl], 47, 87
MIAP[R], 52, 85
SHP[1], 25
SHP[1], 45
SRP2[], 46
SLOOP[], 6
IP[], 12, 18, 38, 41, 0, 6
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="943">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x16d5 */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 52, 0, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="944">
      <instructions>
        <talk>/* VTTTalk glyph 944, char 0x16d6 */
/* GUI generated Sat Jan 11 22:49:48 2020 */

/* Y direction */
YAnchor(18,85)
YShift(18,1)
YShift(18,3)
YShift(18,5)
YShift(18,9)
YShift(18,10)
YShift(18,14)
YLink(18,17,87)
YShift(17,15)
YAnchor(29,86)
YShift(29,7)
YShift(29,11)
YShift(29,20)
YLink(29,28,87)
YShift(28,21)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 944, char 0x16d6 */
/* VTT 6.31 compiler Mon Jan 13 21:02:46 2020 */
SVTCA[Y]
MIAP[R], 18, 85
SHP[1], 1
SHP[1], 3
SHP[1], 5
SHP[1], 9
SHP[1], 10
SHP[1], 14
MIRP[m&gt;RBl], 17, 87
SHP[2], 15
MIAP[R], 29, 86
SHP[1], 7
SHP[1], 11
SHP[1], 20
MIRP[m&gt;RBl], 28, 87
SHP[2], 21
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="945">
      <instructions>
        <talk>/* VTTTalk glyph 945, char 0x16d7 */
/* GUI generated Sat Jan 11 22:52:30 2020 */

/* Y direction */
YAnchor(34,85)
YShift(34,1)
YShift(34,21)
YShift(34,30)
YShift(34,6)
YShift(6,23)
YLink(34,33,87)
YShift(33,31)
YAnchor(45,86)
YShift(45,8)
YShift(45,15)
YShift(45,36)
YLink(45,44,87)
YShift(44,37)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 945, char 0x16d7 */
/* VTT 6.31 compiler Mon Jan 13 21:02:46 2020 */
SVTCA[Y]
MIAP[R], 34, 85
SHP[1], 1
SHP[1], 21
SHP[1], 30
SHP[1], 6
SRP1[], 6
SHP[1], 23
MIRP[m&gt;RBl], 33, 87
SHP[2], 31
MIAP[R], 45, 86
SHP[1], 8
SHP[1], 15
SHP[1], 36
MIRP[m&gt;RBl], 44, 87
SHP[2], 37
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="946">
      <instructions>
        <talk>/* VTTTalk glyph 946, char 0x16d8 */
/* GUI generated Sat Jan 11 22:55:29 2020 */

/* Y direction */
YAnchor(27,85)
YShift(27,1)
YShift(27,9)
YShift(27,19)
YShift(27,31)
YShift(27,36)
YLink(27,28,87)
YShift(28,30)
YShift(28,35)
YAnchor(39,86)
YShift(39,0)
YLink(39,40,87)
YInterpolate(39,4,27)
YShift(4,14)
YDist(4,13)
YShift(13,15)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 946, char 0x16d8 */
/* VTT 6.31 compiler Mon Jan 13 21:02:46 2020 */
SVTCA[Y]
MIAP[R], 27, 85
SHP[1], 1
SHP[1], 9
SHP[1], 19
SHP[1], 31
SHP[1], 36
MIRP[m&gt;RBl], 28, 87
SHP[2], 30
SHP[2], 35
MIAP[R], 39, 86
SHP[1], 0
MIRP[m&gt;RBl], 40, 87
SRP2[], 27
IP[], 4
SRP1[], 4
SHP[1], 14
SRP0[], 4
MDRP[m&gt;RBl], 13
SHP[2], 15
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="947">
      <instructions>
        <talk>/* VTTTalk glyph 947, char 0x16d9 */
/* GUI generated Sat Jan 11 22:56:54 2020 */

/* Y direction */
YAnchor(4,86)
YShift(4,0)
YLink(4,5,87)
YAnchor(17)
YShift(17,1)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 947, char 0x16d9 */
/* VTT 6.31 compiler Mon Jan 13 21:02:46 2020 */
SVTCA[Y]
MIAP[R], 4, 86
SHP[1], 0
MIRP[m&gt;RBl], 5, 87
MDAP[R], 17
SHP[1], 1
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="948">
      <instructions>
        <talk>/* VTTTalk glyph 948, char 0x16da */
/* GUI generated Sat Jan 11 22:58:23 2020 */

/* Y direction */
YAnchor(1,85)
YAnchor(10,86)
YShift(10,0)
YLink(10,11,87)
YInterpolate(10,6,1)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 948, char 0x16da */
/* VTT 6.31 compiler Mon Jan 13 21:02:46 2020 */
SVTCA[Y]
MIAP[R], 1, 85
MIAP[R], 10, 86
SHP[1], 0
MIRP[m&gt;RBl], 11, 87
SRP2[], 1
IP[], 6
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="949">
      <instructions>
        <talk>/* VTTTalk glyph 949, char 0x16db */
/* GUI generated Sat Jan 11 23:00:00 2020 */

/* Y direction */
YAnchor(1,85)
YAnchor(26,86)
YShift(26,0)
YLink(26,27,87)
YInterpolate(26,10,18,6,1)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 949, char 0x16db */
/* VTT 6.31 compiler Mon Jan 13 21:02:46 2020 */
SVTCA[Y]
MIAP[R], 1, 85
MIAP[R], 26, 86
SHP[1], 0
MIRP[m&gt;RBl], 27, 87
SRP2[], 1
SLOOP[], 3
IP[], 10, 18, 6
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="950">
      <instructions>
        <talk>/* VTTTalk Unicode 0x16dc */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(0)	/* min */
YAnchor(2)	/* max */

/* Contour #1 */
YShift(2,6) /* max */
YShift(0,4) /* min */

Smooth()

</talk>
        <assembly>/* TT glyph 950, char 0x16dc */
/* VTT 6.31 compiler Mon Jan 13 21:02:46 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 2
SHP[1], 6
SHP[2], 4
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="951">
      <instructions>
        <talk>/* VTTTalk glyph 951, char 0x16dd */
/* GUI generated Sat Jan 11 23:02:22 2020 */

/* Y direction */
YAnchor(15,85)
YShift(15,2)
YShift(15,9)
YShift(15,19)
YLink(15,16,87)
YShift(16,18)
YAnchor(31,86)
YShift(31,0)
YShift(31,11)
YShift(31,22)
YInterpolate(31,7,1,10,4,15)
YLink(31,30,87)
YShift(30,23)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 951, char 0x16dd */
/* VTT 6.31 compiler Mon Jan 13 21:02:46 2020 */
SVTCA[Y]
MIAP[R], 15, 85
SHP[1], 2
SHP[1], 9
SHP[1], 19
MIRP[m&gt;RBl], 16, 87
SHP[2], 18
MIAP[R], 31, 86
SHP[1], 0
SHP[1], 11
SHP[1], 22
SRP2[], 15
SLOOP[], 4
IP[], 7, 1, 10, 4
MIRP[m&gt;RBl], 30, 87
SHP[2], 23
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="952">
      <instructions>
        <talk>/* VTTTalk glyph 952, char 0x16de */
/* GUI generated Sat Jan 11 23:05:01 2020 */

/* Y direction */
YAnchor(5,86)
YShift(5,1)
YShift(5,12)
YShift(5,22)
YLink(5,6,87)
YShift(6,21)
YAnchor(10,85)
YShift(10,0)
YShift(10,13)
YShift(10,17)
YLink(10,9,87)
YShift(9,18)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 952, char 0x16de */
/* VTT 6.31 compiler Mon Jan 13 21:02:46 2020 */
SVTCA[Y]
MIAP[R], 5, 86
SHP[1], 1
SHP[1], 12
SHP[1], 22
MIRP[m&gt;RBl], 6, 87
SHP[2], 21
MIAP[R], 10, 85
SHP[1], 0
SHP[1], 13
SHP[1], 17
MIRP[m&gt;RBl], 9, 87
SHP[2], 18
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="953">
      <instructions>
        <talk>/* VTTTalk glyph 953, char 0x16df */
/* GUI generated Sat Jan 11 23:07:27 2020 */

/* Y direction */
YAnchor(3)
YAnchor(14,86)
YShift(14,7)
YShift(14,9)
YShift(14,19)
YLink(14,15,87)
YShift(15,22)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 953, char 0x16df */
/* VTT 6.31 compiler Mon Jan 13 21:02:46 2020 */
SVTCA[Y]
MDAP[R], 3
MIAP[R], 14, 86
SHP[1], 7
SHP[1], 9
SHP[1], 19
MIRP[m&gt;RBl], 15, 87
SHP[2], 22
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="954">
      <instructions>
        <talk>/* VTTTalk glyph 954, char 0x16e0 */
/* GUI generated Sat Jan 11 23:09:38 2020 */

/* Y direction */
YAnchor(8,85)
YShift(8,1)
YShift(8,6)
YShift(8,11)
YShift(8,16)
YShift(8,25)
YShift(8,21)
YLink(21,22,87)
YShift(22,24)
YAnchor(28,86)
YShift(28,0)
YLink(28,29,87)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 954, char 0x16e0 */
/* VTT 6.31 compiler Mon Jan 13 21:02:46 2020 */
SVTCA[Y]
MIAP[R], 8, 85
SHP[1], 1
SHP[1], 6
SHP[1], 11
SHP[1], 16
SHP[1], 25
SHP[1], 21
SRP0[], 21
MIRP[m&gt;RBl], 22, 87
SHP[2], 24
MIAP[R], 28, 86
SHP[1], 0
MIRP[m&gt;RBl], 29, 87
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="955">
      <instructions>
        <talk>/* VTTTalk glyph 955, char 0x16e1 */
/* GUI generated Sat Jan 11 23:16:27 2020 */

/* Y direction */
YAnchor(22,85)
YShift(22,17)
YLink(22,21,87)
YAnchor(25,86)
YShift(25,16)
YLink(25,26,87)
YInterpolate(25,9,2,22)
YShift(9,6)
YShift(2,13)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 955, char 0x16e1 */
/* VTT 6.31 compiler Mon Jan 13 21:02:46 2020 */
SVTCA[Y]
MIAP[R], 22, 85
SHP[1], 17
MIRP[m&gt;RBl], 21, 87
MIAP[R], 25, 86
SHP[1], 16
MIRP[m&gt;RBl], 26, 87
SRP2[], 22
IP[], 9
IP[], 2
SRP1[], 9
SHP[1], 6
SRP1[], 2
SHP[1], 13
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="956">
      <instructions>
        <talk>/* VTTTalk glyph 956, char 0x16e2 */
/* GUI generated Sat Jan 11 23:18:24 2020 */

/* Y direction */
YAnchor(26,86)
YShift(26,2)
YShift(26,7)
YShift(26,17)
YShift(26,22)
YLink(26,25,87)
YShift(25,21)
YAnchor(29,85)
YShift(29,8)
YShift(29,11)
YShift(29,16)
YShift(29,33)
YLink(29,28,87)
YShift(28,32)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 956, char 0x16e2 */
/* VTT 6.31 compiler Mon Jan 13 21:02:46 2020 */
SVTCA[Y]
MIAP[R], 26, 86
SHP[1], 2
SHP[1], 7
SHP[1], 17
SHP[1], 22
MIRP[m&gt;RBl], 25, 87
SHP[2], 21
MIAP[R], 29, 85
SHP[1], 8
SHP[1], 11
SHP[1], 16
SHP[1], 33
MIRP[m&gt;RBl], 28, 87
SHP[2], 32
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="957">
      <instructions>
        <talk>/* VTTTalk glyph 957, char 0x16e3 */
/* GUI generated Sun Jan 12 04:21:54 2020 */

/* Y direction */
YAnchor(17,86)
YShift(17,3)
YShift(17,4)
YShift(17,8)
YShift(17,16)
YShift(17,22)
YLink(17,18,87)
YShift(18,15)
YShift(18,23)
YAnchor(29,85)
YShift(29,9)
YLink(29,28,87)
YInterpolate(17,1,29)
YShift(1,6)
YDist(1,2)
YShift(2,5)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 957, char 0x16e3 */
/* VTT 6.31 compiler Mon Jan 13 21:02:46 2020 */
SVTCA[Y]
MIAP[R], 17, 86
SHP[1], 3
SHP[1], 4
SHP[1], 8
SHP[1], 16
SHP[1], 22
MIRP[m&gt;RBl], 18, 87
SHP[2], 15
SHP[2], 23
MIAP[R], 29, 85
SHP[1], 9
MIRP[m&gt;RBl], 28, 87
SRP2[], 17
IP[], 1
SRP1[], 1
SHP[1], 6
SRP0[], 1
MDRP[m&gt;RBl], 2
SHP[2], 5
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="958">
      <instructions>
        <talk>/* VTTTalk glyph 958, char 0x16e4 */
/* GUI generated Sat Jan 11 23:25:29 2020 */

/* Y direction */
YAnchor(37,85)
YShift(37,2)
YShift(37,5)
YShift(37,10)
YShift(37,33)
YShift(37,42)
YLink(37,36,87)
YShift(36,34)
YShift(36,41)
YAnchor(50,86)
YShift(50,0)
YShift(50,7)
YShift(50,13)
YShift(50,49)
YShift(50,55)
YInterpolate(50,26,15,19,8,29,22,37)
YLink(50,51,87)
YShift(51,48)
YShift(51,56)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 958, char 0x16e4 */
/* VTT 6.31 compiler Mon Jan 13 21:02:46 2020 */
SVTCA[Y]
MIAP[R], 37, 85
SHP[1], 2
SHP[1], 5
SHP[1], 10
SHP[1], 33
SHP[1], 42
MIRP[m&gt;RBl], 36, 87
SHP[2], 34
SHP[2], 41
MIAP[R], 50, 86
SHP[1], 0
SHP[1], 7
SHP[1], 13
SHP[1], 49
SHP[1], 55
SRP2[], 37
SLOOP[], 6
IP[], 26, 15, 19, 8, 29, 22
MIRP[m&gt;RBl], 51, 87
SHP[2], 48
SHP[2], 56
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="959">
      <instructions>
        <talk>/* VTTTalk glyph 959, char 0x16e5 */
/* GUI generated Sat Jan 11 23:29:42 2020 */

/* Y direction */
YAnchor(28,86)
YShift(28,0)
YShift(28,6)
YShift(28,16)
YShift(28,19)
YShift(28,32)
YLink(28,29,87)
YShift(29,34)
YAnchor(38,85)
YShift(38,1)
YShift(38,5)
YShift(38,24)
YShift(38,26)
YShift(38,41)
YLink(38,37,87)
YShift(37,43)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 959, char 0x16e5 */
/* VTT 6.31 compiler Mon Jan 13 21:02:46 2020 */
SVTCA[Y]
MIAP[R], 28, 86
SHP[1], 0
SHP[1], 6
SHP[1], 16
SHP[1], 19
SHP[1], 32
MIRP[m&gt;RBl], 29, 87
SHP[2], 34
MIAP[R], 38, 85
SHP[1], 1
SHP[1], 5
SHP[1], 24
SHP[1], 26
SHP[1], 41
MIRP[m&gt;RBl], 37, 87
SHP[2], 43
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="960">
      <instructions>
        <talk>/* VTTTalk glyph 960, char 0x16e6 */
/* GUI generated Sun Jan 12 04:21:21 2020 */

/* Y direction */
YAnchor(24,86)
YShift(24,0)
YShift(24,10)
YShift(24,14)
YShift(24,29)
YShift(24,34)
YLink(24,25,87)
YShift(25,30)
YShift(25,35)
YAnchor(41,85)
YShift(41,11)
YLink(41,40,87)
YInterpolate(24,18,41)
YShift(18,5)
YDist(18,19)
YShift(19,4)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 960, char 0x16e6 */
/* VTT 6.31 compiler Mon Jan 13 21:02:46 2020 */
SVTCA[Y]
MIAP[R], 24, 86
SHP[1], 0
SHP[1], 10
SHP[1], 14
SHP[1], 29
SHP[1], 34
MIRP[m&gt;RBl], 25, 87
SHP[2], 30
SHP[2], 35
MIAP[R], 41, 85
SHP[1], 11
MIRP[m&gt;RBl], 40, 87
SRP2[], 24
IP[], 18
SRP1[], 18
SHP[1], 5
SRP0[], 18
MDRP[m&gt;RBl], 19
SHP[2], 4
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="961">
      <instructions>
        <talk>/* VTTTalk glyph 961, char 0x16e7 */
/* GUI generated Sun Jan 12 04:25:51 2020 */

/* Y direction */
YAnchor(1)
YAnchor(4,86)
YShift(4,0)
YLink(4,5,87)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 961, char 0x16e7 */
/* VTT 6.31 compiler Mon Jan 13 21:02:46 2020 */
SVTCA[Y]
MDAP[R], 1
MIAP[R], 4, 86
SHP[1], 0
MIRP[m&gt;RBl], 5, 87
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="962">
      <instructions>
        <talk>/* VTTTalk glyph 962, char 0x16e8 */
/* GUI generated Sun Jan 12 04:27:43 2020 */

/* Y direction */
YAnchor(0,86)
YAnchor(15,85)
YInterpolate(0,4,11,15)
YShift(4,27)
YShift(11,20)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 962, char 0x16e8 */
/* VTT 6.31 compiler Mon Jan 13 21:02:46 2020 */
SVTCA[Y]
MIAP[R], 0, 86
MIAP[R], 15, 85
IP[], 4
IP[], 11
SRP1[], 4
SHP[1], 27
SRP1[], 11
SHP[1], 20
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="963">
      <instructions>
        <talk>/* VTTTalk glyph 963, char 0x16e9 */
/* GUI generated Sun Jan 12 04:29:41 2020 */

/* Y direction */
YAnchor(7,86)
YShift(7,0)
YLink(7,8,87)
YAnchor(20,85)
YShift(20,4)
YShift(20,5)
YLink(20,21,87)
YInterpolate(7,1,20)
YShift(1,12)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 963, char 0x16e9 */
/* VTT 6.31 compiler Mon Jan 13 21:02:46 2020 */
SVTCA[Y]
MIAP[R], 7, 86
SHP[1], 0
MIRP[m&gt;RBl], 8, 87
MIAP[R], 20, 85
SHP[1], 4
SHP[1], 5
MIRP[m&gt;RBl], 21, 87
SRP2[], 7
IP[], 1
SRP1[], 1
SHP[1], 12
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="964">
      <instructions>
        <talk>/* VTTTalk Unicode 0x16ea */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 3 16  DISABLED for a NON-LATIN glyph */
/* CVT 7 18  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(0,86)	/* min */
YAnchor(3,85)	/* max */

/* YDir: Stroke #0 */
YInterpolate(3,13,0)
YAnchor(13)
YDist(13,12) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YInterpolate(3,8,0)
YAnchor(8)
YDist(8,9) /*perpendicular to the stroke*/

Smooth()

</talk>
        <assembly>/* TT glyph 964, char 0x16ea */
/* VTT 6.31 compiler Mon Jan 13 21:02:46 2020 */
SVTCA[Y]
MIAP[R], 0, 86
MIAP[R], 3, 85
IP[], 13
MDAP[R], 13
MDRP[m&gt;RBl], 12
SRP1[], 3
SRP2[], 0
IP[], 8
MDAP[R], 8
MDRP[m&gt;RBl], 9
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="965">
      <instructions>
        <talk>/* VTTTalk Unicode 0x16eb */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(0)	/* min */
YAnchor(6)	/* max */

Smooth()

</talk>
        <assembly>/* TT glyph 965, char 0x16eb */
/* VTT 6.31 compiler Mon Jan 13 21:02:46 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 6
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="966">
      <instructions>
        <talk>/* VTTTalk Unicode 0x16ec */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 0 19  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(0)	/* min */
YAnchor(18)	/* max */

/* YDir: Stroke #0 */
YDist(18,12) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YDist(0,6) /*perpendicular to the stroke*/

Smooth()

</talk>
        <assembly>/* TT glyph 966, char 0x16ec */
/* VTT 6.31 compiler Mon Jan 13 21:02:46 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 18
MDRP[m&gt;RBl], 12
SRP0[], 0
MDRP[m&gt;RBl], 6
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="967">
      <instructions>
        <talk>/* VTTTalk Unicode 0x16ed */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 0 18  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(0)	/* min */
YAnchor(5)	/* max */

Smooth()
</talk>
        <assembly>/* TT glyph 967, char 0x16ed */
/* VTT 6.31 compiler Mon Jan 13 21:02:46 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 5
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="968">
      <instructions>
        <talk>/* VTTTalk glyph 968, char 0x16ee */
/* GUI generated Sun Jan 12 04:31:53 2020 */

/* Y direction */
YAnchor(1,85)
YAnchor(10,86)
YShift(10,0)
YLink(10,11,87)
YInterpolate(10,15,6,1)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 968, char 0x16ee */
/* VTT 6.31 compiler Mon Jan 13 21:02:46 2020 */
SVTCA[Y]
MIAP[R], 1, 85
MIAP[R], 10, 86
SHP[1], 0
MIRP[m&gt;RBl], 11, 87
SRP2[], 1
IP[], 15
IP[], 6
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="969">
      <instructions>
        <talk>/* VTTTalk glyph 969, char 0x16ef */
/* GUI generated Sun Jan 12 04:35:25 2020 */

/* Y direction */
YAnchor(0,86)
YShift(0,5)
YShift(0,10)
YShift(0,30)
YShift(0,63)
YShift(0,73)
YLink(0,1,87)
YShift(1,6)
YShift(1,11)
YAnchor(22,85)
YShift(22,17)
YShift(22,27)
YShift(22,31)
YShift(22,39)
YShift(22,50)
YLink(22,21,87)
YShift(21,19)
YShift(21,26)
YIPAnchor(22,69,0)
YInterpolate(22,44,69)
YShift(44,34)
YNoRound(45)
YLink(44,45,88)
YShift(45,43)
YShift(69,58)
YLink(69,68,88)
YShift(68,59)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 969, char 0x16ef */
/* VTT 6.31 compiler Mon Jan 13 21:02:46 2020 */
SVTCA[Y]
MIAP[R], 0, 86
SHP[2], 5
SHP[2], 10
SHP[2], 30
SHP[2], 63
SHP[2], 73
MIRP[m&gt;RBl], 1, 87
SHP[2], 6
SHP[2], 11
MIAP[R], 22, 85
SHP[1], 17
SHP[1], 27
SHP[1], 31
SHP[1], 39
SHP[1], 50
MIRP[m&gt;RBl], 21, 87
SHP[2], 19
SHP[2], 26
SRP2[], 0
IP[], 69
MDAP[R], 69
SRP2[], 22
IP[], 44
SRP1[], 44
SHP[1], 34
SRP0[], 44
MIRP[m&lt;rBl], 45, 88
SHP[2], 43
SRP1[], 69
SHP[1], 58
SRP0[], 69
MIRP[m&gt;RBl], 68, 88
SHP[2], 59
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="970">
      <instructions>
        <talk>/* VTTTalk glyph 970, char 0x16f0 */
/* GUI generated Sun Jan 12 04:37:14 2020 */

/* Y direction */
YAnchor(42,85)
YShift(42,37)
YLink(42,41,87)
YDist(41,10)
YDist(10,28)
YAnchor(45,86)
YShift(45,36)
YLink(45,46,87)
YDist(46,0)
YDist(0,20)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 970, char 0x16f0 */
/* VTT 6.31 compiler Mon Jan 13 21:02:46 2020 */
SVTCA[Y]
MIAP[R], 42, 85
SHP[1], 37
MIRP[M&gt;RBl], 41, 87
MDRP[M&lt;RGr], 10
MDRP[m&lt;RWh], 28
MIAP[R], 45, 86
SHP[1], 36
MIRP[M&gt;RBl], 46, 87
MDRP[M&lt;RGr], 0
MDRP[m&lt;RWh], 20
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="971">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 396, 0, 0
OFFSET[R], 830, 248, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="972">
      <instructions>
        <talk>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/*Auto-Hinting Light is not applied: Empty glyph or glyph with one point*/
</talk>
        <assembly>/* TT glyph 972, char 0xffff */
/* VTT 6.31 compiler Mon Jan 13 21:02:46 2020 */

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="973">
      <instructions>
        <talk>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(0)	/* min */
YAnchor(27)	/* max */

/* YDir: Stroke #0 */
YDist(27,42) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YDist(0,12) /*perpendicular to the stroke*/

Smooth()

</talk>
        <assembly>/* TT glyph 973, char 0xffff */
/* VTT 6.31 compiler Mon Jan 13 21:02:46 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 27
MDRP[m&gt;RBl], 42
SRP0[], 0
MDRP[m&gt;RBl], 12
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="974">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 973, 0, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="975">
      <instructions>
        <talk>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Jan  9 18:13:47 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 0 19  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(54)	/* min */
YAnchor(60)	/* max */

/* YDir: Stroke #0 */
YInterpolate(60,24,54)
YAnchor(24)
YDist(24,40) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YInterpolate(60,0,54)
YAnchor(0)
YDist(0,10) /*perpendicular to the stroke*/

Smooth()

</talk>
        <assembly>/* TT glyph 975, char 0xffff */
/* VTT 6.31 compiler Mon Jan 13 21:02:46 2020 */
SVTCA[Y]
MDAP[R], 54
MDAP[R], 60
SRP2[], 54
IP[], 24
MDAP[R], 24
MDRP[m&gt;RBl], 40
SRP1[], 60
SRP2[], 54
IP[], 0
MDAP[R], 0
MDRP[m&gt;RBl], 10
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="976">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Jan  9 18:13:47 2020 */

USEMYMETRICS[]
OFFSET[R], 975, 0, 0

</assembly>
      </instructions>
    </TTGlyph>
  </glyf>
</ttFont>